// Code generated by protoc-gen-go. DO NOT EDIT.
// source: reputation.proto

package reputation

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BridgeReply_ReplyType int32

const (
	BridgeReply_UPDATE_SUCCESS BridgeReply_ReplyType = 0
	BridgeReply_UPDATE_FAILED  BridgeReply_ReplyType = 1
)

var BridgeReply_ReplyType_name = map[int32]string{
	0: "UPDATE_SUCCESS",
	1: "UPDATE_FAILED",
}
var BridgeReply_ReplyType_value = map[string]int32{
	"UPDATE_SUCCESS": 0,
	"UPDATE_FAILED":  1,
}

func (x BridgeReply_ReplyType) String() string {
	return proto.EnumName(BridgeReply_ReplyType_name, int32(x))
}
func (BridgeReply_ReplyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_reputation_d57634b586df8545, []int{1, 0}
}

type NodeReputation struct {
	Source               string   `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	NodeName             string   `protobuf:"bytes,2,opt,name=nodeName" json:"nodeName,omitempty"`
	Timestamp            string   `protobuf:"bytes,3,opt,name=timestamp" json:"timestamp,omitempty"`
	Uptime               int64    `protobuf:"varint,4,opt,name=uptime" json:"uptime,omitempty"`
	AuditSuccess         int64    `protobuf:"varint,5,opt,name=auditSuccess" json:"auditSuccess,omitempty"`
	AuditFail            int64    `protobuf:"varint,6,opt,name=auditFail" json:"auditFail,omitempty"`
	Latency              int64    `protobuf:"varint,7,opt,name=latency" json:"latency,omitempty"`
	AmountOfDataStored   int64    `protobuf:"varint,8,opt,name=amountOfDataStored" json:"amountOfDataStored,omitempty"`
	FalseClaims          int64    `protobuf:"varint,9,opt,name=falseClaims" json:"falseClaims,omitempty"`
	ShardsModified       int64    `protobuf:"varint,10,opt,name=shardsModified" json:"shardsModified,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeReputation) Reset()         { *m = NodeReputation{} }
func (m *NodeReputation) String() string { return proto.CompactTextString(m) }
func (*NodeReputation) ProtoMessage()    {}
func (*NodeReputation) Descriptor() ([]byte, []int) {
	return fileDescriptor_reputation_d57634b586df8545, []int{0}
}
func (m *NodeReputation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeReputation.Unmarshal(m, b)
}
func (m *NodeReputation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeReputation.Marshal(b, m, deterministic)
}
func (dst *NodeReputation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeReputation.Merge(dst, src)
}
func (m *NodeReputation) XXX_Size() int {
	return xxx_messageInfo_NodeReputation.Size(m)
}
func (m *NodeReputation) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeReputation.DiscardUnknown(m)
}

var xxx_messageInfo_NodeReputation proto.InternalMessageInfo

func (m *NodeReputation) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *NodeReputation) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *NodeReputation) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *NodeReputation) GetUptime() int64 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *NodeReputation) GetAuditSuccess() int64 {
	if m != nil {
		return m.AuditSuccess
	}
	return 0
}

func (m *NodeReputation) GetAuditFail() int64 {
	if m != nil {
		return m.AuditFail
	}
	return 0
}

func (m *NodeReputation) GetLatency() int64 {
	if m != nil {
		return m.Latency
	}
	return 0
}

func (m *NodeReputation) GetAmountOfDataStored() int64 {
	if m != nil {
		return m.AmountOfDataStored
	}
	return 0
}

func (m *NodeReputation) GetFalseClaims() int64 {
	if m != nil {
		return m.FalseClaims
	}
	return 0
}

func (m *NodeReputation) GetShardsModified() int64 {
	if m != nil {
		return m.ShardsModified
	}
	return 0
}

type BridgeReply struct {
	BridgeName           string                `protobuf:"bytes,1,opt,name=bridgeName" json:"bridgeName,omitempty"`
	NodeName             string                `protobuf:"bytes,2,opt,name=nodeName" json:"nodeName,omitempty"`
	Source               string                `protobuf:"bytes,3,opt,name=source" json:"source,omitempty"`
	Status               BridgeReply_ReplyType `protobuf:"varint,4,opt,name=status,enum=reputation.BridgeReply_ReplyType" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *BridgeReply) Reset()         { *m = BridgeReply{} }
func (m *BridgeReply) String() string { return proto.CompactTextString(m) }
func (*BridgeReply) ProtoMessage()    {}
func (*BridgeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_reputation_d57634b586df8545, []int{1}
}
func (m *BridgeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BridgeReply.Unmarshal(m, b)
}
func (m *BridgeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BridgeReply.Marshal(b, m, deterministic)
}
func (dst *BridgeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BridgeReply.Merge(dst, src)
}
func (m *BridgeReply) XXX_Size() int {
	return xxx_messageInfo_BridgeReply.Size(m)
}
func (m *BridgeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BridgeReply.DiscardUnknown(m)
}

var xxx_messageInfo_BridgeReply proto.InternalMessageInfo

func (m *BridgeReply) GetBridgeName() string {
	if m != nil {
		return m.BridgeName
	}
	return ""
}

func (m *BridgeReply) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *BridgeReply) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *BridgeReply) GetStatus() BridgeReply_ReplyType {
	if m != nil {
		return m.Status
	}
	return BridgeReply_UPDATE_SUCCESS
}

type NodeQuery struct {
	Source               string   `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	NodeName             string   `protobuf:"bytes,2,opt,name=nodeName" json:"nodeName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeQuery) Reset()         { *m = NodeQuery{} }
func (m *NodeQuery) String() string { return proto.CompactTextString(m) }
func (*NodeQuery) ProtoMessage()    {}
func (*NodeQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_reputation_d57634b586df8545, []int{2}
}
func (m *NodeQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeQuery.Unmarshal(m, b)
}
func (m *NodeQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeQuery.Marshal(b, m, deterministic)
}
func (dst *NodeQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeQuery.Merge(dst, src)
}
func (m *NodeQuery) XXX_Size() int {
	return xxx_messageInfo_NodeQuery.Size(m)
}
func (m *NodeQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeQuery.DiscardUnknown(m)
}

var xxx_messageInfo_NodeQuery proto.InternalMessageInfo

func (m *NodeQuery) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *NodeQuery) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type NodeUpdate struct {
	Source               string   `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	NodeName             string   `protobuf:"bytes,2,opt,name=nodeName" json:"nodeName,omitempty"`
	ColumnName           string   `protobuf:"bytes,3,opt,name=columnName" json:"columnName,omitempty"`
	ColumnValue          string   `protobuf:"bytes,4,opt,name=columnValue" json:"columnValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeUpdate) Reset()         { *m = NodeUpdate{} }
func (m *NodeUpdate) String() string { return proto.CompactTextString(m) }
func (*NodeUpdate) ProtoMessage()    {}
func (*NodeUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_reputation_d57634b586df8545, []int{3}
}
func (m *NodeUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeUpdate.Unmarshal(m, b)
}
func (m *NodeUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeUpdate.Marshal(b, m, deterministic)
}
func (dst *NodeUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeUpdate.Merge(dst, src)
}
func (m *NodeUpdate) XXX_Size() int {
	return xxx_messageInfo_NodeUpdate.Size(m)
}
func (m *NodeUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_NodeUpdate proto.InternalMessageInfo

func (m *NodeUpdate) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *NodeUpdate) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *NodeUpdate) GetColumnName() string {
	if m != nil {
		return m.ColumnName
	}
	return ""
}

func (m *NodeUpdate) GetColumnValue() string {
	if m != nil {
		return m.ColumnValue
	}
	return ""
}

func init() {
	proto.RegisterType((*NodeReputation)(nil), "reputation.NodeReputation")
	proto.RegisterType((*BridgeReply)(nil), "reputation.BridgeReply")
	proto.RegisterType((*NodeQuery)(nil), "reputation.NodeQuery")
	proto.RegisterType((*NodeUpdate)(nil), "reputation.NodeUpdate")
	proto.RegisterEnum("reputation.BridgeReply_ReplyType", BridgeReply_ReplyType_name, BridgeReply_ReplyType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Bridge service

type BridgeClient interface {
	UpdateReputation(ctx context.Context, in *NodeUpdate, opts ...grpc.CallOption) (*BridgeReply, error)
	QueryAggregatedNodeInfo(ctx context.Context, in *NodeQuery, opts ...grpc.CallOption) (*NodeReputation, error)
}

type bridgeClient struct {
	cc *grpc.ClientConn
}

func NewBridgeClient(cc *grpc.ClientConn) BridgeClient {
	return &bridgeClient{cc}
}

func (c *bridgeClient) UpdateReputation(ctx context.Context, in *NodeUpdate, opts ...grpc.CallOption) (*BridgeReply, error) {
	out := new(BridgeReply)
	err := grpc.Invoke(ctx, "/reputation.Bridge/UpdateReputation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bridgeClient) QueryAggregatedNodeInfo(ctx context.Context, in *NodeQuery, opts ...grpc.CallOption) (*NodeReputation, error) {
	out := new(NodeReputation)
	err := grpc.Invoke(ctx, "/reputation.Bridge/QueryAggregatedNodeInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Bridge service

type BridgeServer interface {
	UpdateReputation(context.Context, *NodeUpdate) (*BridgeReply, error)
	QueryAggregatedNodeInfo(context.Context, *NodeQuery) (*NodeReputation, error)
}

func RegisterBridgeServer(s *grpc.Server, srv BridgeServer) {
	s.RegisterService(&_Bridge_serviceDesc, srv)
}

func _Bridge_UpdateReputation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BridgeServer).UpdateReputation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reputation.Bridge/UpdateReputation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BridgeServer).UpdateReputation(ctx, req.(*NodeUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bridge_QueryAggregatedNodeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BridgeServer).QueryAggregatedNodeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reputation.Bridge/QueryAggregatedNodeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BridgeServer).QueryAggregatedNodeInfo(ctx, req.(*NodeQuery))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bridge_serviceDesc = grpc.ServiceDesc{
	ServiceName: "reputation.Bridge",
	HandlerType: (*BridgeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateReputation",
			Handler:    _Bridge_UpdateReputation_Handler,
		},
		{
			MethodName: "QueryAggregatedNodeInfo",
			Handler:    _Bridge_QueryAggregatedNodeInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "reputation.proto",
}

func init() { proto.RegisterFile("reputation.proto", fileDescriptor_reputation_d57634b586df8545) }

var fileDescriptor_reputation_d57634b586df8545 = []byte{
	// 451 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xe3, 0x06, 0xdc, 0x7a, 0x0a, 0x51, 0x18, 0x09, 0xba, 0x8a, 0x50, 0x15, 0x7c, 0x40,
	0x3d, 0xe5, 0x10, 0x4e, 0x9c, 0x50, 0x48, 0x52, 0xa9, 0x12, 0x04, 0xb0, 0x1b, 0xae, 0x68, 0xeb,
	0xdd, 0x04, 0x4b, 0xb6, 0xd7, 0xf2, 0xee, 0x1e, 0x72, 0xe5, 0x45, 0x78, 0xa5, 0x3e, 0x12, 0xf2,
	0xd8, 0xc4, 0xdb, 0x08, 0x7a, 0xc8, 0x25, 0xd2, 0xff, 0xfd, 0xb3, 0x93, 0xd1, 0x3f, 0x63, 0x18,
	0x56, 0xb2, 0xb4, 0x86, 0x9b, 0x54, 0x15, 0x93, 0xb2, 0x52, 0x46, 0x21, 0x74, 0x24, 0xbc, 0x3f,
	0x81, 0xc1, 0x4a, 0x09, 0x19, 0xed, 0x11, 0xbe, 0x02, 0x5f, 0x2b, 0x5b, 0x25, 0x92, 0x79, 0x63,
	0xef, 0x2a, 0x88, 0x5a, 0x85, 0x23, 0x38, 0x2b, 0x94, 0x90, 0x2b, 0x9e, 0x4b, 0x76, 0x42, 0xce,
	0x5e, 0xe3, 0x6b, 0x08, 0x4c, 0x9a, 0x4b, 0x6d, 0x78, 0x5e, 0xb2, 0x3e, 0x99, 0x1d, 0xa8, 0x3b,
	0xda, 0xb2, 0x96, 0xec, 0xc9, 0xd8, 0xbb, 0xea, 0x47, 0xad, 0xc2, 0x10, 0x9e, 0x71, 0x2b, 0x52,
	0x13, 0xdb, 0x24, 0x91, 0x5a, 0xb3, 0xa7, 0xe4, 0x3e, 0x60, 0x75, 0x67, 0xd2, 0xd7, 0x3c, 0xcd,
	0x98, 0x4f, 0x05, 0x1d, 0x40, 0x06, 0xa7, 0x19, 0x37, 0xb2, 0x48, 0x76, 0xec, 0x94, 0xbc, 0xbf,
	0x12, 0x27, 0x80, 0x3c, 0x57, 0xb6, 0x30, 0x5f, 0x36, 0x0b, 0x6e, 0x78, 0x6c, 0x54, 0x25, 0x05,
	0x3b, 0xa3, 0xa2, 0x7f, 0x38, 0x38, 0x86, 0xf3, 0x0d, 0xcf, 0xb4, 0x9c, 0x67, 0x3c, 0xcd, 0x35,
	0x0b, 0xa8, 0xd0, 0x45, 0xf8, 0x16, 0x06, 0xfa, 0x27, 0xaf, 0x84, 0xfe, 0xac, 0x44, 0xba, 0x49,
	0xa5, 0x60, 0x40, 0x45, 0x07, 0x34, 0xbc, 0xf7, 0xe0, 0xfc, 0x63, 0x95, 0x8a, 0x6d, 0x1d, 0x6a,
	0xb6, 0xc3, 0x4b, 0x80, 0x3b, 0x92, 0x94, 0x5c, 0x93, 0xa9, 0x43, 0x1e, 0xcd, 0xb5, 0xdb, 0x45,
	0xff, 0xc1, 0x2e, 0xde, 0x83, 0xaf, 0x0d, 0x37, 0x56, 0x53, 0xa2, 0x83, 0xe9, 0x9b, 0x89, 0xb3,
	0x65, 0xe7, 0xcf, 0x27, 0xf4, 0x7b, 0xbb, 0x2b, 0x65, 0xd4, 0x3e, 0x08, 0xa7, 0x10, 0xec, 0x21,
	0x22, 0x0c, 0xd6, 0x5f, 0x17, 0xb3, 0xdb, 0xe5, 0x8f, 0x78, 0x3d, 0x9f, 0x2f, 0xe3, 0x78, 0xd8,
	0xc3, 0x17, 0xf0, 0xbc, 0x65, 0xd7, 0xb3, 0x9b, 0x4f, 0xcb, 0xc5, 0xd0, 0x0b, 0x3f, 0x40, 0x50,
	0x1f, 0xc9, 0x37, 0x2b, 0xab, 0xdd, 0x31, 0xf7, 0x11, 0xfe, 0xf2, 0x00, 0xea, 0x0e, 0xeb, 0x52,
	0x70, 0x23, 0x8f, 0x3a, 0xb1, 0x4b, 0x80, 0x44, 0x65, 0x36, 0x2f, 0xc8, 0x6d, 0xe2, 0x70, 0x48,
	0xbd, 0xc0, 0x46, 0x7d, 0xe7, 0x99, 0x6d, 0x2e, 0x2d, 0x88, 0x5c, 0x34, 0xfd, 0xed, 0x81, 0xdf,
	0x64, 0x83, 0x4b, 0x18, 0x36, 0xa3, 0xb8, 0x77, 0xef, 0x66, 0xd8, 0x0d, 0x3b, 0xba, 0xf8, 0x4f,
	0xb6, 0x61, 0x0f, 0x57, 0x70, 0x41, 0x99, 0xcc, 0xb6, 0xdb, 0x4a, 0x6e, 0xb9, 0x91, 0xa2, 0x7e,
	0x77, 0x53, 0x6c, 0x14, 0xbe, 0x3c, 0xec, 0x46, 0x85, 0xa3, 0xd1, 0x21, 0xee, 0x06, 0x08, 0x7b,
	0x77, 0x3e, 0x7d, 0xa0, 0xef, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0xab, 0x21, 0x59, 0x8a, 0xb4,
	0x03, 0x00, 0x00,
}
