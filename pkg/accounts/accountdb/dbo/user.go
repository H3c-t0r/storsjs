// Copyright (C) 2018 Storj Labs, Inc.
// See LICENSE for copying information.

package dbo

import (
	"github.com/skyrings/skyring-common/tools/uuid"
	"github.com/zeebo/errs"
	"storj.io/storj/pkg/accounts/accountdb/dbx"
	"time"
)

// User is a database object that describes User entity
type User struct {
	ID uuid.UUID

	FirstName    string
	LastName     string
	Email        string
	PasswordHash []byte

	CreatedAt time.Time
}

// NewUser is a constructor for User entity
func NewUser(id uuid.UUID, firstName, lastName, email string, password []byte, createdAt time.Time) *User {
	return &User{
		ID:           id,
		FirstName:    firstName,
		LastName:     lastName,
		Email:        email,
		PasswordHash: password,
		CreatedAt:    createdAt,
	}
}


// UserFromDBX is used for creating User entity from autogenerated dbx.User struct
//TODO: move error strings to better place
func UserFromDBX(user *dbx.User) (*User, error) {
	if user == nil {
		return nil, errs.New("user parameter is nil")
	}

	id, err := uuid.Parse(user.Id)

	if err != nil {
		return nil, errs.New("Id in not valid UUID string")
	}

	u := &User{}

	u.ID = *id
	u.FirstName = user.FirstName
	u.LastName = user.LastName
	u.Email = user.Email
	u.PasswordHash = user.PasswordHash
	u.CreatedAt = user.CreatedAt

	return u, nil
}