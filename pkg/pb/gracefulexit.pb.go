// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gracefulexit.proto

package pb

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
	drpc "storj.io/drpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// GetSatellitesListRequest
type GetSatellitesListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSatellitesListRequest) Reset()         { *m = GetSatellitesListRequest{} }
func (m *GetSatellitesListRequest) String() string { return proto.CompactTextString(m) }
func (*GetSatellitesListRequest) ProtoMessage()    {}
func (*GetSatellitesListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f0acbf2ce5fa631, []int{0}
}
func (m *GetSatellitesListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSatellitesListRequest.Unmarshal(m, b)
}
func (m *GetSatellitesListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSatellitesListRequest.Marshal(b, m, deterministic)
}
func (m *GetSatellitesListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSatellitesListRequest.Merge(m, src)
}
func (m *GetSatellitesListRequest) XXX_Size() int {
	return xxx_messageInfo_GetSatellitesListRequest.Size(m)
}
func (m *GetSatellitesListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSatellitesListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSatellitesListRequest proto.InternalMessageInfo

// StartExitRequest
type StartExitRequest struct {
	NodeIds              []NodeID `protobuf:"bytes,1,rep,name=node_ids,json=nodeIds,proto3,customtype=NodeID" json:"node_ids"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartExitRequest) Reset()         { *m = StartExitRequest{} }
func (m *StartExitRequest) String() string { return proto.CompactTextString(m) }
func (*StartExitRequest) ProtoMessage()    {}
func (*StartExitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f0acbf2ce5fa631, []int{1}
}
func (m *StartExitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartExitRequest.Unmarshal(m, b)
}
func (m *StartExitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartExitRequest.Marshal(b, m, deterministic)
}
func (m *StartExitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartExitRequest.Merge(m, src)
}
func (m *StartExitRequest) XXX_Size() int {
	return xxx_messageInfo_StartExitRequest.Size(m)
}
func (m *StartExitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartExitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartExitRequest proto.InternalMessageInfo

type Satellite struct {
	NodeId               NodeID   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3,customtype=NodeID" json:"node_id"`
	DomainName           string   `protobuf:"bytes,2,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	SpaceUsed            float64  `protobuf:"fixed64,3,opt,name=space_used,json=spaceUsed,proto3" json:"space_used,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Satellite) Reset()         { *m = Satellite{} }
func (m *Satellite) String() string { return proto.CompactTextString(m) }
func (*Satellite) ProtoMessage()    {}
func (*Satellite) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f0acbf2ce5fa631, []int{2}
}
func (m *Satellite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Satellite.Unmarshal(m, b)
}
func (m *Satellite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Satellite.Marshal(b, m, deterministic)
}
func (m *Satellite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Satellite.Merge(m, src)
}
func (m *Satellite) XXX_Size() int {
	return xxx_messageInfo_Satellite.Size(m)
}
func (m *Satellite) XXX_DiscardUnknown() {
	xxx_messageInfo_Satellite.DiscardUnknown(m)
}

var xxx_messageInfo_Satellite proto.InternalMessageInfo

func (m *Satellite) GetDomainName() string {
	if m != nil {
		return m.DomainName
	}
	return ""
}

func (m *Satellite) GetSpaceUsed() float64 {
	if m != nil {
		return m.SpaceUsed
	}
	return 0
}

type GetSatellitesListResponse struct {
	Satellites           []*Satellite `protobuf:"bytes,1,rep,name=satellites,proto3" json:"satellites,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetSatellitesListResponse) Reset()         { *m = GetSatellitesListResponse{} }
func (m *GetSatellitesListResponse) String() string { return proto.CompactTextString(m) }
func (*GetSatellitesListResponse) ProtoMessage()    {}
func (*GetSatellitesListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f0acbf2ce5fa631, []int{3}
}
func (m *GetSatellitesListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSatellitesListResponse.Unmarshal(m, b)
}
func (m *GetSatellitesListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSatellitesListResponse.Marshal(b, m, deterministic)
}
func (m *GetSatellitesListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSatellitesListResponse.Merge(m, src)
}
func (m *GetSatellitesListResponse) XXX_Size() int {
	return xxx_messageInfo_GetSatellitesListResponse.Size(m)
}
func (m *GetSatellitesListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSatellitesListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSatellitesListResponse proto.InternalMessageInfo

func (m *GetSatellitesListResponse) GetSatellites() []*Satellite {
	if m != nil {
		return m.Satellites
	}
	return nil
}

type StartExitStatus struct {
	DomainName           string   `protobuf:"bytes,1,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartExitStatus) Reset()         { *m = StartExitStatus{} }
func (m *StartExitStatus) String() string { return proto.CompactTextString(m) }
func (*StartExitStatus) ProtoMessage()    {}
func (*StartExitStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f0acbf2ce5fa631, []int{4}
}
func (m *StartExitStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartExitStatus.Unmarshal(m, b)
}
func (m *StartExitStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartExitStatus.Marshal(b, m, deterministic)
}
func (m *StartExitStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartExitStatus.Merge(m, src)
}
func (m *StartExitStatus) XXX_Size() int {
	return xxx_messageInfo_StartExitStatus.Size(m)
}
func (m *StartExitStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_StartExitStatus.DiscardUnknown(m)
}

var xxx_messageInfo_StartExitStatus proto.InternalMessageInfo

func (m *StartExitStatus) GetDomainName() string {
	if m != nil {
		return m.DomainName
	}
	return ""
}

func (m *StartExitStatus) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type StartExitResponse struct {
	Statuses             []*StartExitStatus `protobuf:"bytes,1,rep,name=statuses,proto3" json:"statuses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *StartExitResponse) Reset()         { *m = StartExitResponse{} }
func (m *StartExitResponse) String() string { return proto.CompactTextString(m) }
func (*StartExitResponse) ProtoMessage()    {}
func (*StartExitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f0acbf2ce5fa631, []int{5}
}
func (m *StartExitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartExitResponse.Unmarshal(m, b)
}
func (m *StartExitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartExitResponse.Marshal(b, m, deterministic)
}
func (m *StartExitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartExitResponse.Merge(m, src)
}
func (m *StartExitResponse) XXX_Size() int {
	return xxx_messageInfo_StartExitResponse.Size(m)
}
func (m *StartExitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartExitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartExitResponse proto.InternalMessageInfo

func (m *StartExitResponse) GetStatuses() []*StartExitStatus {
	if m != nil {
		return m.Statuses
	}
	return nil
}

func init() {
	proto.RegisterType((*GetSatellitesListRequest)(nil), "graceful_exit.GetSatellitesListRequest")
	proto.RegisterType((*StartExitRequest)(nil), "graceful_exit.StartExitRequest")
	proto.RegisterType((*Satellite)(nil), "graceful_exit.Satellite")
	proto.RegisterType((*GetSatellitesListResponse)(nil), "graceful_exit.GetSatellitesListResponse")
	proto.RegisterType((*StartExitStatus)(nil), "graceful_exit.StartExitStatus")
	proto.RegisterType((*StartExitResponse)(nil), "graceful_exit.StartExitResponse")
}

func init() { proto.RegisterFile("gracefulexit.proto", fileDescriptor_8f0acbf2ce5fa631) }

var fileDescriptor_8f0acbf2ce5fa631 = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xcd, 0x6a, 0xc2, 0x40,
	0x14, 0x85, 0x3b, 0x5a, 0xd4, 0x5c, 0xed, 0x8f, 0xb3, 0x4a, 0x85, 0x36, 0x21, 0x1b, 0xd3, 0x8d,
	0x0b, 0xbb, 0x29, 0x85, 0x6e, 0xa4, 0x45, 0x04, 0xb1, 0x10, 0x71, 0xd3, 0x4d, 0x18, 0x93, 0xab,
	0x04, 0x34, 0x93, 0x7a, 0x27, 0xe0, 0x13, 0x96, 0x3e, 0x43, 0x17, 0x3e, 0x4b, 0x31, 0x7f, 0xf8,
	0x4b, 0x97, 0x39, 0xf7, 0xdc, 0xc3, 0x77, 0x4f, 0x06, 0xf8, 0x7c, 0x25, 0x3c, 0x9c, 0xc5, 0x0b,
	0x5c, 0x07, 0xaa, 0x13, 0xad, 0xa4, 0x92, 0xfc, 0x2a, 0xd7, 0xdc, 0xad, 0xd8, 0x82, 0xb9, 0x9c,
	0xcb, 0x74, 0x64, 0xb5, 0x40, 0xef, 0xa3, 0x1a, 0x0b, 0x85, 0x8b, 0x45, 0xa0, 0x90, 0x86, 0x01,
	0x29, 0x07, 0xbf, 0x62, 0x24, 0x65, 0xbd, 0xc2, 0xed, 0x58, 0x89, 0x95, 0x7a, 0x5f, 0x07, 0xb9,
	0xc6, 0x1f, 0xa1, 0x16, 0x4a, 0x1f, 0xdd, 0xc0, 0x27, 0x9d, 0x99, 0x65, 0xbb, 0xd1, 0xbb, 0xfe,
	0xd9, 0x18, 0x17, 0xbf, 0x1b, 0xa3, 0x32, 0x92, 0x3e, 0x0e, 0xde, 0x9c, 0xea, 0x76, 0x3e, 0xf0,
	0xc9, 0x52, 0xa0, 0x15, 0xb9, 0xbc, 0x0d, 0xd5, 0x6c, 0x4f, 0x67, 0x26, 0x3b, 0xb1, 0x56, 0x49,
	0xd7, 0xb8, 0x01, 0x75, 0x5f, 0x2e, 0x45, 0x10, 0xba, 0xa1, 0x58, 0xa2, 0x5e, 0x32, 0x99, 0xad,
	0x39, 0x90, 0x4a, 0x23, 0xb1, 0x44, 0x7e, 0x0f, 0x40, 0x91, 0xf0, 0xd0, 0x8d, 0x09, 0x7d, 0xbd,
	0x6c, 0x32, 0x9b, 0x39, 0x5a, 0xa2, 0x4c, 0x08, 0x7d, 0x6b, 0x02, 0x77, 0x27, 0x0e, 0xa2, 0x48,
	0x86, 0x84, 0xfc, 0x19, 0x80, 0x8a, 0x49, 0xc2, 0x5f, 0xef, 0xea, 0x9d, 0xbd, 0x76, 0x3a, 0xc5,
	0xaa, 0xb3, 0xe3, 0xb5, 0x86, 0x70, 0x53, 0x74, 0x31, 0x56, 0x42, 0xc5, 0x74, 0x48, 0xca, 0x8e,
	0x48, 0x75, 0xa8, 0x52, 0xec, 0x79, 0x48, 0x94, 0x9c, 0x51, 0x73, 0xf2, 0x4f, 0xeb, 0x03, 0x9a,
	0x3b, 0xcd, 0x66, 0x70, 0x2f, 0x50, 0xa3, 0x24, 0xb9, 0x40, 0x7b, 0x38, 0x44, 0xdb, 0x27, 0x70,
	0x0a, 0x7f, 0xf7, 0x9b, 0x41, 0xa3, 0x9f, 0x79, 0xb7, 0x06, 0x3e, 0x83, 0xe6, 0x51, 0x0d, 0xbc,
	0x7d, 0x90, 0x77, 0xee, 0xcf, 0xb7, 0xec, 0xff, 0x8d, 0x19, 0xf4, 0x08, 0xb4, 0x82, 0x8a, 0x1b,
	0xe7, 0x78, 0xf3, 0x5c, 0xf3, 0xbc, 0x21, 0xcd, 0xeb, 0x5d, 0x7e, 0x96, 0xa2, 0xe9, 0xb4, 0x92,
	0x3c, 0xce, 0xa7, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x85, 0x23, 0x3c, 0x99, 0xcd, 0x02, 0x00,
	0x00,
}

type DRPCGracefulExitClient interface {
	DRPCConn() drpc.Conn

	// GetSatellitesList returns a list of satellites that the storagenode has not begun a graceful exit for.
	GetSatellitesList(ctx context.Context, in *GetSatellitesListRequest) (*GetSatellitesListResponse, error)
	// StartExit updates one or more satellites in the storagenode's database to be gracefully exiting.
	StartExit(ctx context.Context, in *StartExitRequest) (*StartExitResponse, error)
}

type drpcGracefulExitClient struct {
	cc drpc.Conn
}

func NewDRPCGracefulExitClient(cc drpc.Conn) DRPCGracefulExitClient {
	return &drpcGracefulExitClient{cc}
}

func (c *drpcGracefulExitClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcGracefulExitClient) GetSatellitesList(ctx context.Context, in *GetSatellitesListRequest) (*GetSatellitesListResponse, error) {
	out := new(GetSatellitesListResponse)
	err := c.cc.Invoke(ctx, "/graceful_exit.GracefulExit/GetSatellitesList", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcGracefulExitClient) StartExit(ctx context.Context, in *StartExitRequest) (*StartExitResponse, error) {
	out := new(StartExitResponse)
	err := c.cc.Invoke(ctx, "/graceful_exit.GracefulExit/StartExit", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DRPCGracefulExitServer interface {
	// GetSatellitesList returns a list of satellites that the storagenode has not begun a graceful exit for.
	GetSatellitesList(context.Context, *GetSatellitesListRequest) (*GetSatellitesListResponse, error)
	// StartExit updates one or more satellites in the storagenode's database to be gracefully exiting.
	StartExit(context.Context, *StartExitRequest) (*StartExitResponse, error)
}

type DRPCGracefulExitDescription struct{}

func (DRPCGracefulExitDescription) NumMethods() int { return 2 }

func (DRPCGracefulExitDescription) Method(n int) (string, drpc.Handler, interface{}, bool) {
	switch n {
	case 0:
		return "/graceful_exit.GracefulExit/GetSatellitesList",
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCGracefulExitServer).
					GetSatellitesList(
						ctx,
						in1.(*GetSatellitesListRequest),
					)
			}, DRPCGracefulExitServer.GetSatellitesList, true
	case 1:
		return "/graceful_exit.GracefulExit/StartExit",
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCGracefulExitServer).
					StartExit(
						ctx,
						in1.(*StartExitRequest),
					)
			}, DRPCGracefulExitServer.StartExit, true
	default:
		return "", nil, nil, false
	}
}

func DRPCRegisterGracefulExit(srv drpc.Server, impl DRPCGracefulExitServer) {
	srv.Register(impl, DRPCGracefulExitDescription{})
}

type DRPCGracefulExit_GetSatellitesListStream interface {
	drpc.Stream
	SendAndClose(*GetSatellitesListResponse) error
}

type drpcGracefulExitGetSatellitesListStream struct {
	drpc.Stream
}

func (x *drpcGracefulExitGetSatellitesListStream) SendAndClose(m *GetSatellitesListResponse) error {
	if err := x.MsgSend(m); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCGracefulExit_StartExitStream interface {
	drpc.Stream
	SendAndClose(*StartExitResponse) error
}

type drpcGracefulExitStartExitStream struct {
	drpc.Stream
}

func (x *drpcGracefulExitStartExitStream) SendAndClose(m *StartExitResponse) error {
	if err := x.MsgSend(m); err != nil {
		return err
	}
	return x.CloseSend()
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GracefulExitClient is the client API for GracefulExit service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GracefulExitClient interface {
	// GetSatellitesList returns a list of satellites that the storagenode has not begun a graceful exit for.
	GetSatellitesList(ctx context.Context, in *GetSatellitesListRequest, opts ...grpc.CallOption) (*GetSatellitesListResponse, error)
	// StartExit updates one or more satellites in the storagenode's database to be gracefully exiting.
	StartExit(ctx context.Context, in *StartExitRequest, opts ...grpc.CallOption) (*StartExitResponse, error)
}

type gracefulExitClient struct {
	cc *grpc.ClientConn
}

func NewGracefulExitClient(cc *grpc.ClientConn) GracefulExitClient {
	return &gracefulExitClient{cc}
}

func (c *gracefulExitClient) GetSatellitesList(ctx context.Context, in *GetSatellitesListRequest, opts ...grpc.CallOption) (*GetSatellitesListResponse, error) {
	out := new(GetSatellitesListResponse)
	err := c.cc.Invoke(ctx, "/graceful_exit.GracefulExit/GetSatellitesList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gracefulExitClient) StartExit(ctx context.Context, in *StartExitRequest, opts ...grpc.CallOption) (*StartExitResponse, error) {
	out := new(StartExitResponse)
	err := c.cc.Invoke(ctx, "/graceful_exit.GracefulExit/StartExit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GracefulExitServer is the server API for GracefulExit service.
type GracefulExitServer interface {
	// GetSatellitesList returns a list of satellites that the storagenode has not begun a graceful exit for.
	GetSatellitesList(context.Context, *GetSatellitesListRequest) (*GetSatellitesListResponse, error)
	// StartExit updates one or more satellites in the storagenode's database to be gracefully exiting.
	StartExit(context.Context, *StartExitRequest) (*StartExitResponse, error)
}

func RegisterGracefulExitServer(s *grpc.Server, srv GracefulExitServer) {
	s.RegisterService(&_GracefulExit_serviceDesc, srv)
}

func _GracefulExit_GetSatellitesList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSatellitesListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GracefulExitServer).GetSatellitesList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/graceful_exit.GracefulExit/GetSatellitesList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GracefulExitServer).GetSatellitesList(ctx, req.(*GetSatellitesListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GracefulExit_StartExit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartExitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GracefulExitServer).StartExit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/graceful_exit.GracefulExit/StartExit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GracefulExitServer).StartExit(ctx, req.(*StartExitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GracefulExit_serviceDesc = grpc.ServiceDesc{
	ServiceName: "graceful_exit.GracefulExit",
	HandlerType: (*GracefulExitServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSatellitesList",
			Handler:    _GracefulExit_GetSatellitesList_Handler,
		},
		{
			MethodName: "StartExit",
			Handler:    _GracefulExit_StartExit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gracefulexit.proto",
}
