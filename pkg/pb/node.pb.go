// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: node.proto

package pb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// NodeType is an enum of possible node types
type NodeType int32

const (
	NodeType_INVALID   NodeType = 0
	NodeType_SATELLITE NodeType = 1
	NodeType_STORAGE   NodeType = 2
	NodeType_UPLINK    NodeType = 3
	NodeType_BOOTSTRAP NodeType = 4
)

var NodeType_name = map[int32]string{
	0: "INVALID",
	1: "SATELLITE",
	2: "STORAGE",
	3: "UPLINK",
	4: "BOOTSTRAP",
}

var NodeType_value = map[string]int32{
	"INVALID":   0,
	"SATELLITE": 1,
	"STORAGE":   2,
	"UPLINK":    3,
	"BOOTSTRAP": 4,
}

func (x NodeType) String() string {
	return proto.EnumName(NodeType_name, int32(x))
}

func (NodeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{0}
}

// NodeTransport is an enum of possible transports for the overlay network
type NodeTransport int32

const (
	NodeTransport_TCP_TLS_GRPC NodeTransport = 0
)

var NodeTransport_name = map[int32]string{
	0: "TCP_TLS_GRPC",
}

var NodeTransport_value = map[string]int32{
	"TCP_TLS_GRPC": 0,
}

func (x NodeTransport) String() string {
	return proto.EnumName(NodeTransport_name, int32(x))
}

func (NodeTransport) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{1}
}

// TODO move statdb.Update() stuff out of here
// Node represents a node in the overlay network
// Node is info for a updating a single storagenode, used in the Update rpc calls
type Node struct {
	Id                   NodeID            `protobuf:"bytes,1,opt,name=id,proto3,customtype=NodeID" json:"id"`
	Address              *NodeAddress      `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Type                 NodeType          `protobuf:"varint,3,opt,name=type,proto3,enum=v0_1.NodeType" json:"type,omitempty"`
	Restrictions         *NodeRestrictions `protobuf:"bytes,4,opt,name=restrictions,proto3" json:"restrictions,omitempty"`
	Reputation           *NodeStats        `protobuf:"bytes,5,opt,name=reputation,proto3" json:"reputation,omitempty"`
	Metadata             *NodeMetadata     `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	LatencyList          []int64           `protobuf:"varint,7,rep,packed,name=latency_list,json=latencyList,proto3" json:"latency_list,omitempty"`
	AuditSuccess         bool              `protobuf:"varint,8,opt,name=audit_success,json=auditSuccess,proto3" json:"audit_success,omitempty"`
	IsUp                 bool              `protobuf:"varint,9,opt,name=is_up,json=isUp,proto3" json:"is_up,omitempty"`
	UpdateLatency        bool              `protobuf:"varint,10,opt,name=update_latency,json=updateLatency,proto3" json:"update_latency,omitempty"`
	UpdateAuditSuccess   bool              `protobuf:"varint,11,opt,name=update_audit_success,json=updateAuditSuccess,proto3" json:"update_audit_success,omitempty"`
	UpdateUptime         bool              `protobuf:"varint,12,opt,name=update_uptime,json=updateUptime,proto3" json:"update_uptime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{0}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetAddress() *NodeAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Node) GetType() NodeType {
	if m != nil {
		return m.Type
	}
	return NodeType_INVALID
}

func (m *Node) GetRestrictions() *NodeRestrictions {
	if m != nil {
		return m.Restrictions
	}
	return nil
}

func (m *Node) GetReputation() *NodeStats {
	if m != nil {
		return m.Reputation
	}
	return nil
}

func (m *Node) GetMetadata() *NodeMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Node) GetLatencyList() []int64 {
	if m != nil {
		return m.LatencyList
	}
	return nil
}

func (m *Node) GetAuditSuccess() bool {
	if m != nil {
		return m.AuditSuccess
	}
	return false
}

func (m *Node) GetIsUp() bool {
	if m != nil {
		return m.IsUp
	}
	return false
}

func (m *Node) GetUpdateLatency() bool {
	if m != nil {
		return m.UpdateLatency
	}
	return false
}

func (m *Node) GetUpdateAuditSuccess() bool {
	if m != nil {
		return m.UpdateAuditSuccess
	}
	return false
}

func (m *Node) GetUpdateUptime() bool {
	if m != nil {
		return m.UpdateUptime
	}
	return false
}

// NodeAddress contains the information needed to communicate with a node on the network
type NodeAddress struct {
	Transport            NodeTransport `protobuf:"varint,1,opt,name=transport,proto3,enum=v0_1.NodeTransport" json:"transport,omitempty"`
	Address              string        `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NodeAddress) Reset()         { *m = NodeAddress{} }
func (m *NodeAddress) String() string { return proto.CompactTextString(m) }
func (*NodeAddress) ProtoMessage()    {}
func (*NodeAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{1}
}
func (m *NodeAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeAddress.Unmarshal(m, b)
}
func (m *NodeAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeAddress.Marshal(b, m, deterministic)
}
func (m *NodeAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeAddress.Merge(m, src)
}
func (m *NodeAddress) XXX_Size() int {
	return xxx_messageInfo_NodeAddress.Size(m)
}
func (m *NodeAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeAddress.DiscardUnknown(m)
}

var xxx_messageInfo_NodeAddress proto.InternalMessageInfo

func (m *NodeAddress) GetTransport() NodeTransport {
	if m != nil {
		return m.Transport
	}
	return NodeTransport_TCP_TLS_GRPC
}

func (m *NodeAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// NodeStats is the reputation characteristics of a node
type NodeStats struct {
	NodeId               NodeID   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3,customtype=NodeID" json:"node_id"`
	Latency_90           int64    `protobuf:"varint,2,opt,name=latency_90,json=latency90,proto3" json:"latency_90,omitempty"`
	AuditSuccessRatio    float64  `protobuf:"fixed64,3,opt,name=audit_success_ratio,json=auditSuccessRatio,proto3" json:"audit_success_ratio,omitempty"`
	UptimeRatio          float64  `protobuf:"fixed64,4,opt,name=uptime_ratio,json=uptimeRatio,proto3" json:"uptime_ratio,omitempty"`
	AuditCount           int64    `protobuf:"varint,5,opt,name=audit_count,json=auditCount,proto3" json:"audit_count,omitempty"`
	AuditSuccessCount    int64    `protobuf:"varint,6,opt,name=audit_success_count,json=auditSuccessCount,proto3" json:"audit_success_count,omitempty"`
	UptimeCount          int64    `protobuf:"varint,7,opt,name=uptime_count,json=uptimeCount,proto3" json:"uptime_count,omitempty"`
	UptimeSuccessCount   int64    `protobuf:"varint,8,opt,name=uptime_success_count,json=uptimeSuccessCount,proto3" json:"uptime_success_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeStats) Reset()         { *m = NodeStats{} }
func (m *NodeStats) String() string { return proto.CompactTextString(m) }
func (*NodeStats) ProtoMessage()    {}
func (*NodeStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{2}
}
func (m *NodeStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeStats.Unmarshal(m, b)
}
func (m *NodeStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeStats.Marshal(b, m, deterministic)
}
func (m *NodeStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeStats.Merge(m, src)
}
func (m *NodeStats) XXX_Size() int {
	return xxx_messageInfo_NodeStats.Size(m)
}
func (m *NodeStats) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeStats.DiscardUnknown(m)
}

var xxx_messageInfo_NodeStats proto.InternalMessageInfo

func (m *NodeStats) GetLatency_90() int64 {
	if m != nil {
		return m.Latency_90
	}
	return 0
}

func (m *NodeStats) GetAuditSuccessRatio() float64 {
	if m != nil {
		return m.AuditSuccessRatio
	}
	return 0
}

func (m *NodeStats) GetUptimeRatio() float64 {
	if m != nil {
		return m.UptimeRatio
	}
	return 0
}

func (m *NodeStats) GetAuditCount() int64 {
	if m != nil {
		return m.AuditCount
	}
	return 0
}

func (m *NodeStats) GetAuditSuccessCount() int64 {
	if m != nil {
		return m.AuditSuccessCount
	}
	return 0
}

func (m *NodeStats) GetUptimeCount() int64 {
	if m != nil {
		return m.UptimeCount
	}
	return 0
}

func (m *NodeStats) GetUptimeSuccessCount() int64 {
	if m != nil {
		return m.UptimeSuccessCount
	}
	return 0
}

// NodeOperator contains info about the storage node operator
type NodeOperator struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Wallet               string   `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeOperator) Reset()         { *m = NodeOperator{} }
func (m *NodeOperator) String() string { return proto.CompactTextString(m) }
func (*NodeOperator) ProtoMessage()    {}
func (*NodeOperator) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{3}
}
func (m *NodeOperator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeOperator.Unmarshal(m, b)
}
func (m *NodeOperator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeOperator.Marshal(b, m, deterministic)
}
func (m *NodeOperator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeOperator.Merge(m, src)
}
func (m *NodeOperator) XXX_Size() int {
	return xxx_messageInfo_NodeOperator.Size(m)
}
func (m *NodeOperator) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeOperator.DiscardUnknown(m)
}

var xxx_messageInfo_NodeOperator proto.InternalMessageInfo

func (m *NodeOperator) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *NodeOperator) GetWallet() string {
	if m != nil {
		return m.Wallet
	}
	return ""
}

// NodeCapacity contains all relevant data about a nodes ability to store data
type NodeCapacity struct {
	FreeBandwidth        int64    `protobuf:"varint,1,opt,name=free_bandwidth,json=freeBandwidth,proto3" json:"free_bandwidth,omitempty"`
	FreeDisk             int64    `protobuf:"varint,2,opt,name=free_disk,json=freeDisk,proto3" json:"free_disk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeCapacity) Reset()         { *m = NodeCapacity{} }
func (m *NodeCapacity) String() string { return proto.CompactTextString(m) }
func (*NodeCapacity) ProtoMessage()    {}
func (*NodeCapacity) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{4}
}
func (m *NodeCapacity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeCapacity.Unmarshal(m, b)
}
func (m *NodeCapacity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeCapacity.Marshal(b, m, deterministic)
}
func (m *NodeCapacity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeCapacity.Merge(m, src)
}
func (m *NodeCapacity) XXX_Size() int {
	return xxx_messageInfo_NodeCapacity.Size(m)
}
func (m *NodeCapacity) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeCapacity.DiscardUnknown(m)
}

var xxx_messageInfo_NodeCapacity proto.InternalMessageInfo

func (m *NodeCapacity) GetFreeBandwidth() int64 {
	if m != nil {
		return m.FreeBandwidth
	}
	return 0
}

func (m *NodeCapacity) GetFreeDisk() int64 {
	if m != nil {
		return m.FreeDisk
	}
	return 0
}

// Deprecated: use NodeOperator instead
type NodeMetadata struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Wallet               string   `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeMetadata) Reset()         { *m = NodeMetadata{} }
func (m *NodeMetadata) String() string { return proto.CompactTextString(m) }
func (*NodeMetadata) ProtoMessage()    {}
func (*NodeMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{5}
}
func (m *NodeMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeMetadata.Unmarshal(m, b)
}
func (m *NodeMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeMetadata.Marshal(b, m, deterministic)
}
func (m *NodeMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeMetadata.Merge(m, src)
}
func (m *NodeMetadata) XXX_Size() int {
	return xxx_messageInfo_NodeMetadata.Size(m)
}
func (m *NodeMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_NodeMetadata proto.InternalMessageInfo

func (m *NodeMetadata) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *NodeMetadata) GetWallet() string {
	if m != nil {
		return m.Wallet
	}
	return ""
}

// Deprecated: use NodeCapacity instead
type NodeRestrictions struct {
	FreeBandwidth        int64    `protobuf:"varint,1,opt,name=free_bandwidth,json=freeBandwidth,proto3" json:"free_bandwidth,omitempty"`
	FreeDisk             int64    `protobuf:"varint,2,opt,name=free_disk,json=freeDisk,proto3" json:"free_disk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeRestrictions) Reset()         { *m = NodeRestrictions{} }
func (m *NodeRestrictions) String() string { return proto.CompactTextString(m) }
func (*NodeRestrictions) ProtoMessage()    {}
func (*NodeRestrictions) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{6}
}
func (m *NodeRestrictions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeRestrictions.Unmarshal(m, b)
}
func (m *NodeRestrictions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeRestrictions.Marshal(b, m, deterministic)
}
func (m *NodeRestrictions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeRestrictions.Merge(m, src)
}
func (m *NodeRestrictions) XXX_Size() int {
	return xxx_messageInfo_NodeRestrictions.Size(m)
}
func (m *NodeRestrictions) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeRestrictions.DiscardUnknown(m)
}

var xxx_messageInfo_NodeRestrictions proto.InternalMessageInfo

func (m *NodeRestrictions) GetFreeBandwidth() int64 {
	if m != nil {
		return m.FreeBandwidth
	}
	return 0
}

func (m *NodeRestrictions) GetFreeDisk() int64 {
	if m != nil {
		return m.FreeDisk
	}
	return 0
}

func init() {
	proto.RegisterEnum("v0_1.NodeType", NodeType_name, NodeType_value)
	proto.RegisterEnum("v0_1.NodeTransport", NodeTransport_name, NodeTransport_value)
	proto.RegisterType((*Node)(nil), "v0_1.Node")
	proto.RegisterType((*NodeAddress)(nil), "v0_1.NodeAddress")
	proto.RegisterType((*NodeStats)(nil), "v0_1.NodeStats")
	proto.RegisterType((*NodeOperator)(nil), "v0_1.NodeOperator")
	proto.RegisterType((*NodeCapacity)(nil), "v0_1.NodeCapacity")
	proto.RegisterType((*NodeMetadata)(nil), "v0_1.NodeMetadata")
	proto.RegisterType((*NodeRestrictions)(nil), "v0_1.NodeRestrictions")
}

func init() { proto.RegisterFile("node.proto", fileDescriptor_0c843d59d2d938e7) }

var fileDescriptor_0c843d59d2d938e7 = []byte{
	// 686 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xc1, 0x6e, 0xda, 0x4a,
	0x14, 0x86, 0x03, 0x76, 0x00, 0x1f, 0x1b, 0xae, 0x33, 0x89, 0x22, 0xeb, 0x5e, 0xdd, 0x1b, 0x42,
	0x74, 0x55, 0x94, 0x4a, 0x94, 0xa4, 0xab, 0x54, 0xdd, 0x00, 0x89, 0x22, 0x54, 0x17, 0xd0, 0xe0,
	0x64, 0x91, 0x8d, 0x35, 0xc1, 0xd3, 0x74, 0x14, 0x82, 0x2d, 0x7b, 0xdc, 0x88, 0x37, 0xec, 0xa2,
	0x4f, 0xd0, 0x45, 0x5e, 0xa1, 0xaf, 0x50, 0xcd, 0x8c, 0x1d, 0xec, 0x56, 0x5d, 0x54, 0xea, 0x72,
	0xfe, 0xff, 0x9b, 0x73, 0x86, 0xf3, 0x1f, 0x0c, 0xb0, 0x0a, 0x03, 0xda, 0x8b, 0xe2, 0x90, 0x87,
	0x48, 0xff, 0xd4, 0xf7, 0x4f, 0xfe, 0x86, 0xbb, 0xf0, 0x2e, 0x54, 0x4a, 0xe7, 0x9b, 0x06, 0xfa,
	0x24, 0x0c, 0x28, 0xfa, 0x0f, 0xaa, 0x2c, 0x70, 0x2a, 0xed, 0x4a, 0xd7, 0x1a, 0xb6, 0x3e, 0x3f,
	0x1d, 0x6c, 0x7d, 0x7d, 0x3a, 0xa8, 0x09, 0x67, 0x7c, 0x8e, 0xab, 0x2c, 0x40, 0x2f, 0xa1, 0x4e,
	0x82, 0x20, 0xa6, 0x49, 0xe2, 0x54, 0xdb, 0x95, 0xae, 0x79, 0xba, 0xd3, 0x13, 0xc5, 0x7a, 0x02,
	0x19, 0x28, 0x03, 0xe7, 0x04, 0xea, 0x80, 0xce, 0xd7, 0x11, 0x75, 0xb4, 0x76, 0xa5, 0xdb, 0x3a,
	0x6d, 0x6d, 0x48, 0x6f, 0x1d, 0x51, 0x2c, 0x3d, 0xf4, 0x06, 0xac, 0x98, 0x26, 0x3c, 0x66, 0x0b,
	0xce, 0xc2, 0x55, 0xe2, 0xe8, 0xb2, 0xea, 0xfe, 0x86, 0xc5, 0x05, 0x17, 0x97, 0x58, 0xf4, 0x0a,
	0x20, 0xa6, 0x51, 0xca, 0x89, 0x38, 0x3a, 0xdb, 0xf2, 0xe6, 0x5f, 0x9b, 0x9b, 0x73, 0x4e, 0x78,
	0x82, 0x0b, 0x08, 0xea, 0x41, 0xe3, 0x81, 0x72, 0x12, 0x10, 0x4e, 0x9c, 0x9a, 0xc4, 0xd1, 0x06,
	0x7f, 0x9f, 0x39, 0xf8, 0x99, 0x41, 0x87, 0x60, 0x2d, 0x09, 0xa7, 0xab, 0xc5, 0xda, 0x5f, 0xb2,
	0x84, 0x3b, 0xf5, 0xb6, 0xd6, 0xd5, 0xb0, 0x99, 0x69, 0x2e, 0x4b, 0x38, 0x3a, 0x82, 0x26, 0x49,
	0x03, 0xc6, 0xfd, 0x24, 0x5d, 0x2c, 0xc4, 0x58, 0x1a, 0xed, 0x4a, 0xb7, 0x81, 0x2d, 0x29, 0xce,
	0x95, 0x86, 0x76, 0x61, 0x9b, 0x25, 0x7e, 0x1a, 0x39, 0x86, 0x34, 0x75, 0x96, 0x5c, 0x45, 0xe8,
	0x7f, 0x68, 0xa5, 0x51, 0x40, 0x38, 0xf5, 0xb3, 0x7a, 0x0e, 0x48, 0xb7, 0xa9, 0x54, 0x57, 0x89,
	0xa8, 0x0f, 0x7b, 0x19, 0x56, 0xee, 0x63, 0x4a, 0x18, 0x29, 0x6f, 0x50, 0xec, 0x76, 0x04, 0x59,
	0x09, 0x3f, 0x8d, 0x38, 0x7b, 0xa0, 0x8e, 0xa5, 0x9e, 0xa4, 0xc4, 0x2b, 0xa9, 0x75, 0x6e, 0xc0,
	0x2c, 0x64, 0x86, 0x4e, 0xc0, 0xe0, 0x31, 0x59, 0x25, 0x51, 0x18, 0x73, 0x19, 0x7f, 0xeb, 0x74,
	0xb7, 0x90, 0x57, 0x6e, 0xe1, 0x0d, 0x85, 0x9c, 0xf2, 0x2a, 0x18, 0xcf, 0xb9, 0x77, 0xbe, 0x54,
	0xc1, 0x78, 0x0e, 0x00, 0xbd, 0x80, 0xba, 0xd8, 0x3d, 0xff, 0x97, 0x7b, 0x55, 0x13, 0xf6, 0x38,
	0x40, 0xff, 0x02, 0xe4, 0xd3, 0x3e, 0xeb, 0xcb, 0x9a, 0x1a, 0x36, 0x32, 0xe5, 0xac, 0x8f, 0x7a,
	0xb0, 0x5b, 0x9a, 0x80, 0x1f, 0x8b, 0x50, 0xe5, 0x72, 0x55, 0xf0, 0x4e, 0x71, 0xde, 0x58, 0x18,
	0x22, 0x3c, 0xf5, 0xfb, 0x33, 0x50, 0x97, 0xa0, 0xa9, 0x34, 0x85, 0x1c, 0x80, 0xa9, 0x4a, 0x2e,
	0xc2, 0x74, 0xc5, 0xe5, 0x06, 0x69, 0x18, 0xa4, 0x34, 0x12, 0xca, 0xcf, 0x3d, 0x15, 0x58, 0x93,
	0x60, 0xa9, 0xa7, 0xe2, 0x37, 0x3d, 0x15, 0x58, 0x97, 0x60, 0xd6, 0x53, 0x21, 0x32, 0x4f, 0x89,
	0x94, 0x6b, 0x36, 0x24, 0x8a, 0x94, 0x57, 0x2c, 0xda, 0x79, 0x0b, 0x96, 0x98, 0xd4, 0x34, 0xa2,
	0x31, 0xe1, 0x61, 0x8c, 0xf6, 0x60, 0x9b, 0x3e, 0x10, 0xb6, 0x94, 0xe3, 0x34, 0xb0, 0x3a, 0xa0,
	0x7d, 0xa8, 0x3d, 0x92, 0xe5, 0x92, 0xf2, 0x2c, 0x8d, 0xec, 0xd4, 0xc1, 0xea, 0xf6, 0x88, 0x44,
	0x64, 0xc1, 0xf8, 0x5a, 0xac, 0xdd, 0x87, 0x98, 0x52, 0xff, 0x96, 0xac, 0x82, 0x47, 0x16, 0xf0,
	0x8f, 0xb2, 0x8c, 0x86, 0x9b, 0x42, 0x1d, 0xe6, 0x22, 0xfa, 0x07, 0x0c, 0x89, 0x05, 0x2c, 0xb9,
	0xcf, 0xb2, 0x68, 0x08, 0xe1, 0x9c, 0x25, 0xf7, 0xf9, 0x8b, 0xf2, 0x7f, 0xcc, 0x6f, 0xbe, 0xe8,
	0x1a, 0xec, 0x1f, 0xff, 0xd8, 0x7f, 0xe2, 0x55, 0xc7, 0x13, 0x68, 0xe4, 0x1f, 0x17, 0x64, 0x42,
	0x7d, 0x3c, 0xb9, 0x1e, 0xb8, 0xe3, 0x73, 0x7b, 0x0b, 0x35, 0xc1, 0x98, 0x0f, 0xbc, 0x0b, 0xd7,
	0x1d, 0x7b, 0x17, 0x76, 0x45, 0x78, 0x73, 0x6f, 0x8a, 0x07, 0x97, 0x17, 0x76, 0x15, 0x01, 0xd4,
	0xae, 0x66, 0xee, 0x78, 0xf2, 0xce, 0xd6, 0x04, 0x37, 0x9c, 0x4e, 0xbd, 0xb9, 0x87, 0x07, 0x33,
	0x5b, 0x3f, 0x3e, 0x84, 0x66, 0x69, 0xf9, 0x91, 0x0d, 0x96, 0x37, 0x9a, 0xf9, 0x9e, 0x3b, 0xf7,
	0x2f, 0xf1, 0x6c, 0x64, 0x6f, 0x0d, 0xf5, 0x9b, 0x6a, 0x74, 0x7b, 0x5b, 0x93, 0x1f, 0xd1, 0xd7,
	0xdf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x07, 0xc2, 0x53, 0xa4, 0x64, 0x05, 0x00, 0x00,
}
