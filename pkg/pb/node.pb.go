// Code generated by protoc-gen-go. DO NOT EDIT.
// source: node.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// NodeTransport is an enum of possible transports for the overlay network
type NodeTransport int32

const (
	NodeTransport_TCP_TLS_GRPC NodeTransport = 0
)

var NodeTransport_name = map[int32]string{
	0: "TCP_TLS_GRPC",
}
var NodeTransport_value = map[string]int32{
	"TCP_TLS_GRPC": 0,
}

func (x NodeTransport) String() string {
	return proto.EnumName(NodeTransport_name, int32(x))
}
func (NodeTransport) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_node_2cb15ee8de9c5cf2, []int{0}
}

// NodeType is an enum of possible node types
type NodeType int32

const (
	NodeType_ADMIN   NodeType = 0
	NodeType_STORAGE NodeType = 1
)

var NodeType_name = map[int32]string{
	0: "ADMIN",
	1: "STORAGE",
}
var NodeType_value = map[string]int32{
	"ADMIN":   0,
	"STORAGE": 1,
}

func (x NodeType) String() string {
	return proto.EnumName(NodeType_name, int32(x))
}
func (NodeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_node_2cb15ee8de9c5cf2, []int{1}
}

// Node represents a node in the overlay network
// Node is info for a updating a single storagenode, used in the Update rpc calls
type Node struct {
	Id                   []byte            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address              *NodeAddress      `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Type                 NodeType          `protobuf:"varint,3,opt,name=type,proto3,enum=node.NodeType" json:"type,omitempty"`
	Restrictions         *NodeRestrictions `protobuf:"bytes,4,opt,name=restrictions,proto3" json:"restrictions,omitempty"`
	LatencyList          []int64           `protobuf:"varint,5,rep,packed,name=latency_list,json=latencyList,proto3" json:"latency_list,omitempty"`
	AuditSuccess         bool              `protobuf:"varint,6,opt,name=audit_success,json=auditSuccess,proto3" json:"audit_success,omitempty"`
	IsUp                 bool              `protobuf:"varint,7,opt,name=is_up,json=isUp,proto3" json:"is_up,omitempty"`
	UpdateLatency        bool              `protobuf:"varint,8,opt,name=update_latency,json=updateLatency,proto3" json:"update_latency,omitempty"`
	UpdateAuditSuccess   bool              `protobuf:"varint,9,opt,name=update_audit_success,json=updateAuditSuccess,proto3" json:"update_audit_success,omitempty"`
	UpdateUptime         bool              `protobuf:"varint,10,opt,name=update_uptime,json=updateUptime,proto3" json:"update_uptime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_2cb15ee8de9c5cf2, []int{0}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Node) GetAddress() *NodeAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Node) GetType() NodeType {
	if m != nil {
		return m.Type
	}
	return NodeType_ADMIN
}

func (m *Node) GetRestrictions() *NodeRestrictions {
	if m != nil {
		return m.Restrictions
	}
	return nil
}

func (m *Node) GetLatencyList() []int64 {
	if m != nil {
		return m.LatencyList
	}
	return nil
}

func (m *Node) GetAuditSuccess() bool {
	if m != nil {
		return m.AuditSuccess
	}
	return false
}

func (m *Node) GetIsUp() bool {
	if m != nil {
		return m.IsUp
	}
	return false
}

func (m *Node) GetUpdateLatency() bool {
	if m != nil {
		return m.UpdateLatency
	}
	return false
}

func (m *Node) GetUpdateAuditSuccess() bool {
	if m != nil {
		return m.UpdateAuditSuccess
	}
	return false
}

func (m *Node) GetUpdateUptime() bool {
	if m != nil {
		return m.UpdateUptime
	}
	return false
}

// NodeAddress contains the information needed to communicate with a node on the network
type NodeAddress struct {
	Transport            NodeTransport `protobuf:"varint,1,opt,name=transport,proto3,enum=node.NodeTransport" json:"transport,omitempty"`
	Address              string        `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NodeAddress) Reset()         { *m = NodeAddress{} }
func (m *NodeAddress) String() string { return proto.CompactTextString(m) }
func (*NodeAddress) ProtoMessage()    {}
func (*NodeAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_2cb15ee8de9c5cf2, []int{1}
}
func (m *NodeAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeAddress.Unmarshal(m, b)
}
func (m *NodeAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeAddress.Marshal(b, m, deterministic)
}
func (dst *NodeAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeAddress.Merge(dst, src)
}
func (m *NodeAddress) XXX_Size() int {
	return xxx_messageInfo_NodeAddress.Size(m)
}
func (m *NodeAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeAddress.DiscardUnknown(m)
}

var xxx_messageInfo_NodeAddress proto.InternalMessageInfo

func (m *NodeAddress) GetTransport() NodeTransport {
	if m != nil {
		return m.Transport
	}
	return NodeTransport_TCP_TLS_GRPC
}

func (m *NodeAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

//  NodeRestrictions contains all relevant data about a nodes ability to store data
type NodeRestrictions struct {
	FreeBandwidth        int64    `protobuf:"varint,1,opt,name=freeBandwidth,proto3" json:"freeBandwidth,omitempty"`
	FreeDisk             int64    `protobuf:"varint,2,opt,name=freeDisk,proto3" json:"freeDisk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeRestrictions) Reset()         { *m = NodeRestrictions{} }
func (m *NodeRestrictions) String() string { return proto.CompactTextString(m) }
func (*NodeRestrictions) ProtoMessage()    {}
func (*NodeRestrictions) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_2cb15ee8de9c5cf2, []int{2}
}
func (m *NodeRestrictions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeRestrictions.Unmarshal(m, b)
}
func (m *NodeRestrictions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeRestrictions.Marshal(b, m, deterministic)
}
func (dst *NodeRestrictions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeRestrictions.Merge(dst, src)
}
func (m *NodeRestrictions) XXX_Size() int {
	return xxx_messageInfo_NodeRestrictions.Size(m)
}
func (m *NodeRestrictions) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeRestrictions.DiscardUnknown(m)
}

var xxx_messageInfo_NodeRestrictions proto.InternalMessageInfo

func (m *NodeRestrictions) GetFreeBandwidth() int64 {
	if m != nil {
		return m.FreeBandwidth
	}
	return 0
}

func (m *NodeRestrictions) GetFreeDisk() int64 {
	if m != nil {
		return m.FreeDisk
	}
	return 0
}

func init() {
	proto.RegisterType((*Node)(nil), "node.Node")
	proto.RegisterType((*NodeAddress)(nil), "node.NodeAddress")
	proto.RegisterType((*NodeRestrictions)(nil), "node.NodeRestrictions")
	proto.RegisterEnum("node.NodeTransport", NodeTransport_name, NodeTransport_value)
	proto.RegisterEnum("node.NodeType", NodeType_name, NodeType_value)
}

func init() { proto.RegisterFile("node.proto", fileDescriptor_node_2cb15ee8de9c5cf2) }

var fileDescriptor_node_2cb15ee8de9c5cf2 = []byte{
	// 401 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0xdf, 0x6b, 0x9c, 0x40,
	0x10, 0xc7, 0xe3, 0x8f, 0xcb, 0xdd, 0xcd, 0xa9, 0xd8, 0x49, 0x29, 0x4b, 0x9f, 0x8c, 0x69, 0x41,
	0x52, 0x08, 0xed, 0xf5, 0xad, 0x6f, 0x26, 0x29, 0xa1, 0x70, 0x4d, 0xc3, 0x9e, 0x79, 0xc9, 0x8b,
	0x18, 0x77, 0x4b, 0x97, 0xa6, 0xba, 0xb8, 0x2b, 0xe5, 0xfe, 0xf9, 0x52, 0x5c, 0xbd, 0x9c, 0xe6,
	0x4d, 0x3f, 0xdf, 0x8f, 0x33, 0xc3, 0x8c, 0x00, 0x55, 0xcd, 0xf8, 0x85, 0x6c, 0x6a, 0x5d, 0xa3,
	0xdb, 0x3d, 0xc7, 0xff, 0x6c, 0x70, 0x6f, 0x6b, 0xc6, 0x31, 0x00, 0x5b, 0x30, 0x62, 0x45, 0x56,
	0xe2, 0x51, 0x5b, 0x30, 0xfc, 0x00, 0xf3, 0x82, 0xb1, 0x86, 0x2b, 0x45, 0xec, 0xc8, 0x4a, 0x56,
	0xeb, 0x57, 0x17, 0xe6, 0xe3, 0x4e, 0x4e, 0xfb, 0x80, 0xee, 0x0d, 0x8c, 0xc1, 0xd5, 0x3b, 0xc9,
	0x89, 0x13, 0x59, 0x49, 0xb0, 0x0e, 0x0e, 0x66, 0xb6, 0x93, 0x9c, 0x9a, 0x0c, 0xbf, 0x80, 0xd7,
	0x70, 0xa5, 0x1b, 0x51, 0x6a, 0x51, 0x57, 0x8a, 0xb8, 0xa6, 0xea, 0x9b, 0x83, 0x4b, 0x47, 0x29,
	0x9d, 0xb8, 0x78, 0x0a, 0xde, 0x53, 0xa1, 0x79, 0x55, 0xee, 0xf2, 0x27, 0xa1, 0x34, 0x99, 0x45,
	0x4e, 0xe2, 0xd0, 0xd5, 0xc0, 0x36, 0x42, 0x69, 0x3c, 0x03, 0xbf, 0x68, 0x99, 0xd0, 0xb9, 0x6a,
	0xcb, 0xb2, 0x9b, 0xfa, 0x38, 0xb2, 0x92, 0x05, 0xf5, 0x0c, 0xdc, 0xf6, 0x0c, 0x4f, 0x60, 0x26,
	0x54, 0xde, 0x4a, 0x32, 0x37, 0xa1, 0x2b, 0xd4, 0xbd, 0xc4, 0xf7, 0x10, 0xb4, 0x92, 0x15, 0x9a,
	0xe7, 0x43, 0x3d, 0xb2, 0x30, 0xa9, 0xdf, 0xd3, 0x4d, 0x0f, 0xf1, 0x23, 0xbc, 0x1e, 0xb4, 0x69,
	0x9f, 0xa5, 0x91, 0xb1, 0xcf, 0xd2, 0x71, 0xb7, 0x33, 0x18, 0x4a, 0xe4, 0xad, 0xd4, 0xe2, 0x0f,
	0x27, 0xd0, 0x8f, 0xd4, 0xc3, 0x7b, 0xc3, 0xe2, 0x07, 0x58, 0x8d, 0x56, 0x8a, 0x9f, 0x60, 0xa9,
	0x9b, 0xa2, 0x52, 0xb2, 0x6e, 0xb4, 0xb9, 0x46, 0xb0, 0x3e, 0x19, 0xad, 0x73, 0x1f, 0xd1, 0x83,
	0x85, 0x64, 0x7a, 0xa9, 0xe5, 0xf3, 0x59, 0xe2, 0x0c, 0xc2, 0x97, 0x8b, 0xc5, 0x77, 0xe0, 0xff,
	0x6c, 0x38, 0xbf, 0x2c, 0x2a, 0xf6, 0x57, 0x30, 0xfd, 0xcb, 0x34, 0x71, 0xe8, 0x14, 0xe2, 0x5b,
	0x58, 0x74, 0xe0, 0x5a, 0xa8, 0xdf, 0xa6, 0xa8, 0x43, 0x9f, 0xdf, 0xcf, 0x4f, 0xc1, 0x9f, 0xcc,
	0x82, 0x21, 0x78, 0xd9, 0xd5, 0x5d, 0x9e, 0x6d, 0xb6, 0xf9, 0x0d, 0xbd, 0xbb, 0x0a, 0x8f, 0xce,
	0x63, 0x58, 0xec, 0xaf, 0x8f, 0x4b, 0x98, 0xa5, 0xd7, 0xdf, 0xbf, 0xdd, 0x86, 0x47, 0xb8, 0x82,
	0xf9, 0x36, 0xfb, 0x41, 0xd3, 0x9b, 0xaf, 0xa1, 0x75, 0xe9, 0x3e, 0xd8, 0xf2, 0xf1, 0xf1, 0xd8,
	0xfc, 0x8c, 0x9f, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0xf7, 0x64, 0xd8, 0xab, 0x9a, 0x02, 0x00,
	0x00,
}
