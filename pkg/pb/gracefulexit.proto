// Copyright (C) 2019 Storj Labs, Inc.
// See LICENSE for copying information.

syntax = "proto3";
option go_package = "pb";

import "gogo.proto";
package graceful_exit;

service GracefulExit {
  // GetSatellitesList returns a list of satellites that the storagenode has not begun a graceful exit for.
  rpc GetNonExitingSatellites(GetNonExitingSatellitesRequest) returns (GetNonExitingSatellitesResponse);
  // StartExit updates one or more satellites in the storagenode's database to be gracefully exiting.
  rpc StartExit(StartExitRequest) returns (StartExitResponse);
}

message GetNonExitingSatellitesRequest{}

// StartExitRequest
message StartExitRequest {
  repeated bytes node_ids = 1 [(gogoproto.customtype) = "NodeID", (gogoproto.nullable) = false];
}

message NonExitingSatellite {
    bytes node_id = 1 [(gogoproto.customtype) = "NodeID", (gogoproto.nullable) = false];
    string domain_name = 2;
    double space_used = 3;
}

message GetNonExitingSatellitesResponse {
  repeated NonExitingSatellite satellites = 1;
}

message StartExitStatus {
  string domain_name = 1;
  bool success = 2;
}
message StartExitResponse {
  repeated StartExitStatus statuses = 1;
}
