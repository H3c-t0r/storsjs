// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: metainfo.proto

package pb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Action int32

const (
	Action_INVALID    Action = 0
	Action_PUT        Action = 1
	Action_GET        Action = 2
	Action_GET_AUDIT  Action = 3
	Action_GET_REPAIR Action = 4
	Action_PUT_REPAIR Action = 5
	Action_DELETE     Action = 6
)

var Action_name = map[int32]string{
	0: "INVALID",
	1: "PUT",
	2: "GET",
	3: "GET_AUDIT",
	4: "GET_REPAIR",
	5: "PUT_REPAIR",
	6: "DELETE",
}
var Action_value = map[string]int32{
	"INVALID":    0,
	"PUT":        1,
	"GET":        2,
	"GET_AUDIT":  3,
	"GET_REPAIR": 4,
	"PUT_REPAIR": 5,
	"DELETE":     6,
}

func (x Action) String() string {
	return proto.EnumName(Action_name, int32(x))
}
func (Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_24fa585a73a35225, []int{0}
}

type OrderLimit struct {
	// unique serial to avoid replay attacks
	SerialNumber []byte `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	// satellite who issued this order limit allowing orderer to do the specified action
	SatelliteId *NodeID `protobuf:"bytes,2,opt,name=satellite_id,json=satelliteId,proto3,customtype=NodeID" json:"satellite_id,omitempty"`
	// uplink who requested or whom behalf the order limit to do an action
	UplinkId *NodeID `protobuf:"bytes,3,opt,name=uplink_id,json=uplinkId,proto3,customtype=NodeID" json:"uplink_id,omitempty"`
	// storage node who can reclaim the order limit specified by serial
	StorageNodeId *NodeID `protobuf:"bytes,4,opt,name=storage_node_id,json=storageNodeId,proto3,customtype=NodeID" json:"storage_node_id,omitempty"`
	// piece which is allowed to be touched
	PieceId *PieceID `protobuf:"bytes,5,opt,name=piece_id,json=pieceId,proto3,customtype=PieceID" json:"piece_id,omitempty"`
	// limit in bytes how much can be changed
	Limit                int64                `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Action               Action               `protobuf:"varint,7,opt,name=action,proto3,enum=metainfo.Action" json:"action,omitempty"`
	PieceExpiration      *timestamp.Timestamp `protobuf:"bytes,8,opt,name=piece_expiration,json=pieceExpiration,proto3" json:"piece_expiration,omitempty"`
	OrderExpiration      *timestamp.Timestamp `protobuf:"bytes,9,opt,name=order_expiration,json=orderExpiration,proto3" json:"order_expiration,omitempty"`
	SatelliteSignature   []byte               `protobuf:"bytes,10,opt,name=satellite_signature,json=satelliteSignature,proto3" json:"satellite_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OrderLimit) Reset()         { *m = OrderLimit{} }
func (m *OrderLimit) String() string { return proto.CompactTextString(m) }
func (*OrderLimit) ProtoMessage()    {}
func (*OrderLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_24fa585a73a35225, []int{0}
}
func (m *OrderLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderLimit.Unmarshal(m, b)
}
func (m *OrderLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderLimit.Marshal(b, m, deterministic)
}
func (dst *OrderLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderLimit.Merge(dst, src)
}
func (m *OrderLimit) XXX_Size() int {
	return xxx_messageInfo_OrderLimit.Size(m)
}
func (m *OrderLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderLimit.DiscardUnknown(m)
}

var xxx_messageInfo_OrderLimit proto.InternalMessageInfo

func (m *OrderLimit) GetSerialNumber() []byte {
	if m != nil {
		return m.SerialNumber
	}
	return nil
}

func (m *OrderLimit) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *OrderLimit) GetAction() Action {
	if m != nil {
		return m.Action
	}
	return Action_INVALID
}

func (m *OrderLimit) GetPieceExpiration() *timestamp.Timestamp {
	if m != nil {
		return m.PieceExpiration
	}
	return nil
}

func (m *OrderLimit) GetOrderExpiration() *timestamp.Timestamp {
	if m != nil {
		return m.OrderExpiration
	}
	return nil
}

func (m *OrderLimit) GetSatelliteSignature() []byte {
	if m != nil {
		return m.SatelliteSignature
	}
	return nil
}

type Order struct {
	// serial of the order limit that was signed
	SerialNumber []byte `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	// amount to be signed for
	Amount int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// signature
	UplinkSignature      []byte   `protobuf:"bytes,3,opt,name=uplink_signature,json=uplinkSignature,proto3" json:"uplink_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_24fa585a73a35225, []int{1}
}
func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (dst *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(dst, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetSerialNumber() []byte {
	if m != nil {
		return m.SerialNumber
	}
	return nil
}

func (m *Order) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Order) GetUplinkSignature() []byte {
	if m != nil {
		return m.UplinkSignature
	}
	return nil
}

type PieceHash struct {
	// piece id
	PieceId []byte `protobuf:"bytes,1,opt,name=piece_id,json=pieceId,proto3" json:"piece_id,omitempty"`
	// hash of the piece that was/is uploaded
	Hash []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	// signature either satellite or storage node
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PieceHash) Reset()         { *m = PieceHash{} }
func (m *PieceHash) String() string { return proto.CompactTextString(m) }
func (*PieceHash) ProtoMessage()    {}
func (*PieceHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_24fa585a73a35225, []int{2}
}
func (m *PieceHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PieceHash.Unmarshal(m, b)
}
func (m *PieceHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PieceHash.Marshal(b, m, deterministic)
}
func (dst *PieceHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PieceHash.Merge(dst, src)
}
func (m *PieceHash) XXX_Size() int {
	return xxx_messageInfo_PieceHash.Size(m)
}
func (m *PieceHash) XXX_DiscardUnknown() {
	xxx_messageInfo_PieceHash.DiscardUnknown(m)
}

var xxx_messageInfo_PieceHash proto.InternalMessageInfo

func (m *PieceHash) GetPieceId() []byte {
	if m != nil {
		return m.PieceId
	}
	return nil
}

func (m *PieceHash) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *PieceHash) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type SegmentWriteRequest struct {
	Bucket               []byte   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Segment              int64    `protobuf:"varint,2,opt,name=segment,proto3" json:"segment,omitempty"`
	EncryptedPath        []byte   `protobuf:"bytes,3,opt,name=encrypted_path,json=encryptedPath,proto3" json:"encrypted_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentWriteRequest) Reset()         { *m = SegmentWriteRequest{} }
func (m *SegmentWriteRequest) String() string { return proto.CompactTextString(m) }
func (*SegmentWriteRequest) ProtoMessage()    {}
func (*SegmentWriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_24fa585a73a35225, []int{3}
}
func (m *SegmentWriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentWriteRequest.Unmarshal(m, b)
}
func (m *SegmentWriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentWriteRequest.Marshal(b, m, deterministic)
}
func (dst *SegmentWriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentWriteRequest.Merge(dst, src)
}
func (m *SegmentWriteRequest) XXX_Size() int {
	return xxx_messageInfo_SegmentWriteRequest.Size(m)
}
func (m *SegmentWriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentWriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentWriteRequest proto.InternalMessageInfo

func (m *SegmentWriteRequest) GetBucket() []byte {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *SegmentWriteRequest) GetSegment() int64 {
	if m != nil {
		return m.Segment
	}
	return 0
}

func (m *SegmentWriteRequest) GetEncryptedPath() []byte {
	if m != nil {
		return m.EncryptedPath
	}
	return nil
}

type SegmentCommitRequest struct {
	Bucket                 []byte       `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Segment                int64        `protobuf:"varint,2,opt,name=segment,proto3" json:"segment,omitempty"`
	EncryptedPath          []byte       `protobuf:"bytes,3,opt,name=encrypted_path,json=encryptedPath,proto3" json:"encrypted_path,omitempty"`
	StorageNodePiecehashes []*PieceHash `protobuf:"bytes,4,rep,name=storage_node_piecehashes,json=storageNodePiecehashes,proto3" json:"storage_node_piecehashes,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}     `json:"-"`
	XXX_unrecognized       []byte       `json:"-"`
	XXX_sizecache          int32        `json:"-"`
}

func (m *SegmentCommitRequest) Reset()         { *m = SegmentCommitRequest{} }
func (m *SegmentCommitRequest) String() string { return proto.CompactTextString(m) }
func (*SegmentCommitRequest) ProtoMessage()    {}
func (*SegmentCommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_24fa585a73a35225, []int{4}
}
func (m *SegmentCommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentCommitRequest.Unmarshal(m, b)
}
func (m *SegmentCommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentCommitRequest.Marshal(b, m, deterministic)
}
func (dst *SegmentCommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentCommitRequest.Merge(dst, src)
}
func (m *SegmentCommitRequest) XXX_Size() int {
	return xxx_messageInfo_SegmentCommitRequest.Size(m)
}
func (m *SegmentCommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentCommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentCommitRequest proto.InternalMessageInfo

func (m *SegmentCommitRequest) GetBucket() []byte {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *SegmentCommitRequest) GetSegment() int64 {
	if m != nil {
		return m.Segment
	}
	return 0
}

func (m *SegmentCommitRequest) GetEncryptedPath() []byte {
	if m != nil {
		return m.EncryptedPath
	}
	return nil
}

func (m *SegmentCommitRequest) GetStorageNodePiecehashes() []*PieceHash {
	if m != nil {
		return m.StorageNodePiecehashes
	}
	return nil
}

type SegmentCommitResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentCommitResponse) Reset()         { *m = SegmentCommitResponse{} }
func (m *SegmentCommitResponse) String() string { return proto.CompactTextString(m) }
func (*SegmentCommitResponse) ProtoMessage()    {}
func (*SegmentCommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_24fa585a73a35225, []int{5}
}
func (m *SegmentCommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentCommitResponse.Unmarshal(m, b)
}
func (m *SegmentCommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentCommitResponse.Marshal(b, m, deterministic)
}
func (dst *SegmentCommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentCommitResponse.Merge(dst, src)
}
func (m *SegmentCommitResponse) XXX_Size() int {
	return xxx_messageInfo_SegmentCommitResponse.Size(m)
}
func (m *SegmentCommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentCommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentCommitResponse proto.InternalMessageInfo

type SegementDownloadRequest struct {
	Bucket               []byte   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	EncryptedPath        []byte   `protobuf:"bytes,2,opt,name=encrypted_path,json=encryptedPath,proto3" json:"encrypted_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegementDownloadRequest) Reset()         { *m = SegementDownloadRequest{} }
func (m *SegementDownloadRequest) String() string { return proto.CompactTextString(m) }
func (*SegementDownloadRequest) ProtoMessage()    {}
func (*SegementDownloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_24fa585a73a35225, []int{6}
}
func (m *SegementDownloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegementDownloadRequest.Unmarshal(m, b)
}
func (m *SegementDownloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegementDownloadRequest.Marshal(b, m, deterministic)
}
func (dst *SegementDownloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegementDownloadRequest.Merge(dst, src)
}
func (m *SegementDownloadRequest) XXX_Size() int {
	return xxx_messageInfo_SegementDownloadRequest.Size(m)
}
func (m *SegementDownloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SegementDownloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SegementDownloadRequest proto.InternalMessageInfo

func (m *SegementDownloadRequest) GetBucket() []byte {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *SegementDownloadRequest) GetEncryptedPath() []byte {
	if m != nil {
		return m.EncryptedPath
	}
	return nil
}

type SegmentDeleteRequest struct {
	Bucket               []byte   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Segment              int64    `protobuf:"varint,2,opt,name=segment,proto3" json:"segment,omitempty"`
	EncryptedPath        []byte   `protobuf:"bytes,3,opt,name=encrypted_path,json=encryptedPath,proto3" json:"encrypted_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentDeleteRequest) Reset()         { *m = SegmentDeleteRequest{} }
func (m *SegmentDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SegmentDeleteRequest) ProtoMessage()    {}
func (*SegmentDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_24fa585a73a35225, []int{7}
}
func (m *SegmentDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentDeleteRequest.Unmarshal(m, b)
}
func (m *SegmentDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SegmentDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentDeleteRequest.Merge(dst, src)
}
func (m *SegmentDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SegmentDeleteRequest.Size(m)
}
func (m *SegmentDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentDeleteRequest proto.InternalMessageInfo

func (m *SegmentDeleteRequest) GetBucket() []byte {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *SegmentDeleteRequest) GetSegment() int64 {
	if m != nil {
		return m.Segment
	}
	return 0
}

func (m *SegmentDeleteRequest) GetEncryptedPath() []byte {
	if m != nil {
		return m.EncryptedPath
	}
	return nil
}

type OrderLimitResponse struct {
	Limits               []*OrderLimit `protobuf:"bytes,1,rep,name=limits,proto3" json:"limits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *OrderLimitResponse) Reset()         { *m = OrderLimitResponse{} }
func (m *OrderLimitResponse) String() string { return proto.CompactTextString(m) }
func (*OrderLimitResponse) ProtoMessage()    {}
func (*OrderLimitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_24fa585a73a35225, []int{8}
}
func (m *OrderLimitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderLimitResponse.Unmarshal(m, b)
}
func (m *OrderLimitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderLimitResponse.Marshal(b, m, deterministic)
}
func (dst *OrderLimitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderLimitResponse.Merge(dst, src)
}
func (m *OrderLimitResponse) XXX_Size() int {
	return xxx_messageInfo_OrderLimitResponse.Size(m)
}
func (m *OrderLimitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderLimitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderLimitResponse proto.InternalMessageInfo

func (m *OrderLimitResponse) GetLimits() []*OrderLimit {
	if m != nil {
		return m.Limits
	}
	return nil
}

func init() {
	proto.RegisterType((*OrderLimit)(nil), "metainfo.OrderLimit")
	proto.RegisterType((*Order)(nil), "metainfo.Order")
	proto.RegisterType((*PieceHash)(nil), "metainfo.PieceHash")
	proto.RegisterType((*SegmentWriteRequest)(nil), "metainfo.SegmentWriteRequest")
	proto.RegisterType((*SegmentCommitRequest)(nil), "metainfo.SegmentCommitRequest")
	proto.RegisterType((*SegmentCommitResponse)(nil), "metainfo.SegmentCommitResponse")
	proto.RegisterType((*SegementDownloadRequest)(nil), "metainfo.SegementDownloadRequest")
	proto.RegisterType((*SegmentDeleteRequest)(nil), "metainfo.SegmentDeleteRequest")
	proto.RegisterType((*OrderLimitResponse)(nil), "metainfo.OrderLimitResponse")
	proto.RegisterEnum("metainfo.Action", Action_name, Action_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MetainfoClient is the client API for Metainfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetainfoClient interface {
	CreateSegment(ctx context.Context, in *SegmentWriteRequest, opts ...grpc.CallOption) (*OrderLimitResponse, error)
	CommitSegment(ctx context.Context, in *SegmentCommitRequest, opts ...grpc.CallOption) (*SegmentCommitResponse, error)
	DownloadSegment(ctx context.Context, in *SegementDownloadRequest, opts ...grpc.CallOption) (*OrderLimitResponse, error)
	DeleteSegment(ctx context.Context, in *SegmentDeleteRequest, opts ...grpc.CallOption) (*OrderLimitResponse, error)
}

type metainfoClient struct {
	cc *grpc.ClientConn
}

func NewMetainfoClient(cc *grpc.ClientConn) MetainfoClient {
	return &metainfoClient{cc}
}

func (c *metainfoClient) CreateSegment(ctx context.Context, in *SegmentWriteRequest, opts ...grpc.CallOption) (*OrderLimitResponse, error) {
	out := new(OrderLimitResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/CreateSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metainfoClient) CommitSegment(ctx context.Context, in *SegmentCommitRequest, opts ...grpc.CallOption) (*SegmentCommitResponse, error) {
	out := new(SegmentCommitResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/CommitSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metainfoClient) DownloadSegment(ctx context.Context, in *SegementDownloadRequest, opts ...grpc.CallOption) (*OrderLimitResponse, error) {
	out := new(OrderLimitResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/DownloadSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metainfoClient) DeleteSegment(ctx context.Context, in *SegmentDeleteRequest, opts ...grpc.CallOption) (*OrderLimitResponse, error) {
	out := new(OrderLimitResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/DeleteSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetainfoServer is the server API for Metainfo service.
type MetainfoServer interface {
	CreateSegment(context.Context, *SegmentWriteRequest) (*OrderLimitResponse, error)
	CommitSegment(context.Context, *SegmentCommitRequest) (*SegmentCommitResponse, error)
	DownloadSegment(context.Context, *SegementDownloadRequest) (*OrderLimitResponse, error)
	DeleteSegment(context.Context, *SegmentDeleteRequest) (*OrderLimitResponse, error)
}

func RegisterMetainfoServer(s *grpc.Server, srv MetainfoServer) {
	s.RegisterService(&_Metainfo_serviceDesc, srv)
}

func _Metainfo_CreateSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SegmentWriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetainfoServer).CreateSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metainfo.Metainfo/CreateSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetainfoServer).CreateSegment(ctx, req.(*SegmentWriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Metainfo_CommitSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SegmentCommitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetainfoServer).CommitSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metainfo.Metainfo/CommitSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetainfoServer).CommitSegment(ctx, req.(*SegmentCommitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Metainfo_DownloadSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SegementDownloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetainfoServer).DownloadSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metainfo.Metainfo/DownloadSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetainfoServer).DownloadSegment(ctx, req.(*SegementDownloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Metainfo_DeleteSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SegmentDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetainfoServer).DeleteSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metainfo.Metainfo/DeleteSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetainfoServer).DeleteSegment(ctx, req.(*SegmentDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Metainfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "metainfo.Metainfo",
	HandlerType: (*MetainfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSegment",
			Handler:    _Metainfo_CreateSegment_Handler,
		},
		{
			MethodName: "CommitSegment",
			Handler:    _Metainfo_CommitSegment_Handler,
		},
		{
			MethodName: "DownloadSegment",
			Handler:    _Metainfo_DownloadSegment_Handler,
		},
		{
			MethodName: "DeleteSegment",
			Handler:    _Metainfo_DeleteSegment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "metainfo.proto",
}

func init() { proto.RegisterFile("metainfo.proto", fileDescriptor_metainfo_24fa585a73a35225) }

var fileDescriptor_metainfo_24fa585a73a35225 = []byte{
	// 739 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0xdd, 0x6e, 0xda, 0x4a,
	0x10, 0x8e, 0xf9, 0x31, 0x30, 0x04, 0xb0, 0x36, 0x39, 0x89, 0x0f, 0xca, 0x39, 0x50, 0xaa, 0xb6,
	0xb4, 0x6a, 0x89, 0x44, 0x9f, 0x80, 0x04, 0x2b, 0xb5, 0x94, 0x10, 0xe4, 0x90, 0xb6, 0xea, 0x0d,
	0x5a, 0xf0, 0xc6, 0x58, 0xb1, 0xbd, 0xae, 0xbd, 0x56, 0xdb, 0x97, 0xeb, 0x5b, 0xf4, 0x26, 0x17,
	0xb9, 0xea, 0x83, 0x54, 0x5e, 0xff, 0x41, 0x20, 0xa2, 0x37, 0xed, 0x9d, 0x67, 0xe6, 0xdb, 0x6f,
	0x66, 0xbf, 0x6f, 0xd6, 0x50, 0xb7, 0x09, 0xc3, 0xa6, 0x73, 0x43, 0x7b, 0xae, 0x47, 0x19, 0x45,
	0xe5, 0x24, 0x6e, 0x82, 0x41, 0x8d, 0x38, 0xdb, 0x6c, 0x19, 0x94, 0x1a, 0x16, 0x39, 0xe6, 0xd1,
	0x2c, 0xb8, 0x39, 0x66, 0xa6, 0x4d, 0x7c, 0x86, 0x6d, 0x37, 0x02, 0x74, 0x7e, 0xe6, 0x01, 0x2e,
	0x3d, 0x9d, 0x78, 0xe7, 0xa6, 0x6d, 0x32, 0xf4, 0x14, 0x6a, 0x3e, 0xf1, 0x4c, 0x6c, 0x4d, 0x9d,
	0xc0, 0x9e, 0x11, 0x4f, 0x16, 0xda, 0x42, 0x77, 0x57, 0xdb, 0x8d, 0x92, 0x23, 0x9e, 0x43, 0x6f,
	0x60, 0xd7, 0xc7, 0x8c, 0x58, 0x96, 0xc9, 0xc8, 0xd4, 0xd4, 0xe5, 0x5c, 0x88, 0x39, 0x81, 0xbb,
	0xfb, 0x96, 0x38, 0xa2, 0x3a, 0x51, 0x87, 0x5a, 0x35, 0xad, 0xab, 0x3a, 0x7a, 0x01, 0x95, 0xc0,
	0xb5, 0x4c, 0xe7, 0x36, 0xc4, 0xe6, 0xd7, 0xb0, 0xe5, 0xa8, 0xa8, 0xea, 0xa8, 0x0f, 0x0d, 0x9f,
	0x51, 0x0f, 0x1b, 0x64, 0xea, 0x50, 0x9d, 0x53, 0x17, 0xd6, 0xe0, 0xb5, 0x18, 0xc2, 0x43, 0x1d,
	0x3d, 0x87, 0xb2, 0x6b, 0x92, 0x39, 0x07, 0x17, 0x39, 0xb8, 0x7a, 0x77, 0xdf, 0x2a, 0x8d, 0xc3,
	0x9c, 0x3a, 0xd4, 0x4a, 0xbc, 0xa8, 0xea, 0x68, 0x1f, 0x8a, 0x56, 0x78, 0x43, 0x59, 0x6c, 0x0b,
	0xdd, 0xbc, 0x16, 0x05, 0xa8, 0x0b, 0x22, 0x9e, 0x33, 0x93, 0x3a, 0x72, 0xa9, 0x2d, 0x74, 0xeb,
	0x7d, 0xa9, 0x97, 0xaa, 0x3a, 0xe0, 0x79, 0x2d, 0xae, 0x23, 0x05, 0xa4, 0xa8, 0x0f, 0xf9, 0xea,
	0x9a, 0x1e, 0xe6, 0x67, 0xca, 0x6d, 0xa1, 0x5b, 0xed, 0x37, 0x7b, 0x91, 0xc6, 0xbd, 0x44, 0xe3,
	0xde, 0x24, 0xd1, 0x58, 0x6b, 0xf0, 0x33, 0x4a, 0x7a, 0x24, 0xa4, 0xa1, 0xa1, 0xda, 0xcb, 0x34,
	0x95, 0xed, 0x34, 0xfc, 0xcc, 0x12, 0xcd, 0x31, 0xec, 0x65, 0x0e, 0xf8, 0xa6, 0xe1, 0x60, 0x16,
	0x78, 0x44, 0x06, 0x6e, 0x16, 0x4a, 0x4b, 0x57, 0x49, 0xa5, 0x43, 0xa1, 0xc8, 0x5d, 0xfe, 0x3d,
	0x83, 0x0f, 0x40, 0xc4, 0x36, 0x0d, 0x1c, 0xc6, 0xad, 0xcd, 0x6b, 0x71, 0x84, 0x5e, 0x82, 0x14,
	0x3b, 0x99, 0xf5, 0xe4, 0x86, 0x6a, 0x8d, 0x28, 0x9f, 0x35, 0xfc, 0x08, 0x15, 0xee, 0xc1, 0x3b,
	0xec, 0x2f, 0xd0, 0xbf, 0x4b, 0x26, 0x45, 0xfd, 0x52, 0x5f, 0x10, 0x14, 0x16, 0xd8, 0x5f, 0x44,
	0x3b, 0xa4, 0xf1, 0x6f, 0x74, 0x04, 0x95, 0x87, 0xfc, 0x59, 0xa2, 0xe3, 0xc0, 0xde, 0x15, 0x31,
	0x6c, 0xe2, 0xb0, 0x0f, 0x9e, 0xc9, 0x88, 0x46, 0x3e, 0x07, 0xc4, 0x67, 0xe1, 0xcc, 0xb3, 0x60,
	0x7e, 0x4b, 0x58, 0xdc, 0x21, 0x8e, 0x90, 0x0c, 0x25, 0x3f, 0x82, 0xc7, 0x97, 0x49, 0x42, 0xf4,
	0x0c, 0xea, 0xc4, 0x99, 0x7b, 0xdf, 0x5c, 0x46, 0xf4, 0xa9, 0x8b, 0xd9, 0x22, 0xee, 0x55, 0x4b,
	0xb3, 0x63, 0xcc, 0x16, 0x9d, 0xef, 0x02, 0xec, 0xc7, 0x0d, 0x4f, 0xa9, 0x6d, 0x9b, 0xec, 0x4f,
	0x77, 0x44, 0x17, 0x20, 0xaf, 0xbc, 0x03, 0xae, 0x55, 0xa8, 0x0c, 0xf1, 0xe5, 0x42, 0x3b, 0xdf,
	0xad, 0xf6, 0xf7, 0xb2, 0x3d, 0x4d, 0x55, 0xd6, 0x0e, 0x96, 0x5e, 0xc6, 0x38, 0x3b, 0xd2, 0x39,
	0x84, 0x7f, 0x1e, 0xcc, 0xef, 0xbb, 0xd4, 0xf1, 0x43, 0x8f, 0x0e, 0xaf, 0x88, 0x41, 0xc2, 0xca,
	0x90, 0x7e, 0x71, 0x2c, 0x8a, 0xf5, 0x6d, 0x77, 0x5b, 0xbf, 0x41, 0x6e, 0x93, 0x66, 0x34, 0x95,
	0x6c, 0x48, 0x2c, 0xf2, 0x17, 0x4c, 0x3a, 0x01, 0x94, 0xfd, 0xc5, 0x92, 0x0b, 0xa2, 0xd7, 0x20,
	0xf2, 0x77, 0xee, 0xcb, 0x02, 0x97, 0x6d, 0x3f, 0x93, 0x6d, 0x09, 0x1d, 0x63, 0x5e, 0xcd, 0x40,
	0x8c, 0x1e, 0x3d, 0xaa, 0x42, 0x49, 0x1d, 0xbd, 0x1f, 0x9c, 0xab, 0x43, 0x69, 0x07, 0x95, 0x20,
	0x3f, 0xbe, 0x9e, 0x48, 0x42, 0xf8, 0x71, 0xa6, 0x4c, 0xa4, 0x1c, 0xaa, 0x41, 0xe5, 0x4c, 0x99,
	0x4c, 0x07, 0xd7, 0x43, 0x75, 0x22, 0xe5, 0x51, 0x1d, 0x20, 0x0c, 0x35, 0x65, 0x3c, 0x50, 0x35,
	0xa9, 0x10, 0xc6, 0xe3, 0xeb, 0x34, 0x2e, 0x22, 0x00, 0x71, 0xa8, 0x9c, 0x2b, 0x13, 0x45, 0x12,
	0xfb, 0x3f, 0x72, 0x50, 0xbe, 0x88, 0x67, 0x40, 0x23, 0xa8, 0x9d, 0x7a, 0x04, 0x33, 0x12, 0x6b,
	0x85, 0xfe, 0xcb, 0xe6, 0xdb, 0xb0, 0xe2, 0xcd, 0xa3, 0x8d, 0xe3, 0x27, 0x6e, 0xee, 0x20, 0x0d,
	0x6a, 0x91, 0xc3, 0x09, 0xdf, 0xff, 0x6b, 0x7c, 0x2b, 0x1b, 0xdc, 0x6c, 0x3d, 0x5a, 0x4f, 0x39,
	0x27, 0xd0, 0x48, 0x76, 0x23, 0x61, 0x7d, 0xb2, 0x72, 0x6a, 0xd3, 0xfa, 0x6c, 0x9d, 0xf4, 0x12,
	0x6a, 0xd1, 0x62, 0x3c, 0x3e, 0xe9, 0xca, 0xe2, 0x6c, 0x23, 0x3c, 0x29, 0x7c, 0xca, 0xb9, 0xb3,
	0x99, 0xc8, 0xff, 0x9d, 0x6f, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x39, 0x19, 0x1a, 0xfb, 0x1c,
	0x07, 0x00, 0x00,
}
