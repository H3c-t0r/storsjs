// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: metainfo.proto

package pb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Action is an enumeration of all possible executed action on storage node
type Action int32

const (
	Action_INVALID    Action = 0
	Action_PUT        Action = 1
	Action_GET        Action = 2
	Action_GET_AUDIT  Action = 3
	Action_GET_REPAIR Action = 4
	Action_PUT_REPAIR Action = 5
	Action_DELETE     Action = 6
)

var Action_name = map[int32]string{
	0: "INVALID",
	1: "PUT",
	2: "GET",
	3: "GET_AUDIT",
	4: "GET_REPAIR",
	5: "PUT_REPAIR",
	6: "DELETE",
}
var Action_value = map[string]int32{
	"INVALID":    0,
	"PUT":        1,
	"GET":        2,
	"GET_AUDIT":  3,
	"GET_REPAIR": 4,
	"PUT_REPAIR": 5,
	"DELETE":     6,
}

func (x Action) String() string {
	return proto.EnumName(Action_name, int32(x))
}
func (Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_f8962718de636984, []int{0}
}

// OrderLimit2 is provided by satellite to execute specific action on storage node within some limits
type OrderLimit2 struct {
	// unique serial to avoid replay attacks
	SerialNumber []byte `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	// satellite who issued this order limit allowing orderer to do the specified action
	SatelliteId NodeID `protobuf:"bytes,2,opt,name=satellite_id,json=satelliteId,proto3,customtype=NodeID" json:"satellite_id"`
	// uplink who requested or whom behalf the order limit to do an action
	UplinkId NodeID `protobuf:"bytes,3,opt,name=uplink_id,json=uplinkId,proto3,customtype=NodeID" json:"uplink_id"`
	// storage node who can reclaim the order limit specified by serial
	StorageNodeId NodeID `protobuf:"bytes,4,opt,name=storage_node_id,json=storageNodeId,proto3,customtype=NodeID" json:"storage_node_id"`
	// piece which is allowed to be touched
	PieceId PieceID `protobuf:"bytes,5,opt,name=piece_id,json=pieceId,proto3,customtype=PieceID" json:"piece_id"`
	// limit in bytes how much can be changed
	Limit                int64                `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Action               Action               `protobuf:"varint,7,opt,name=action,proto3,enum=metainfo.Action" json:"action,omitempty"`
	PieceExpiration      *timestamp.Timestamp `protobuf:"bytes,8,opt,name=piece_expiration,json=pieceExpiration,proto3" json:"piece_expiration,omitempty"`
	OrderExpiration      *timestamp.Timestamp `protobuf:"bytes,9,opt,name=order_expiration,json=orderExpiration,proto3" json:"order_expiration,omitempty"`
	SatelliteSignature   []byte               `protobuf:"bytes,10,opt,name=satellite_signature,json=satelliteSignature,proto3" json:"satellite_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OrderLimit2) Reset()         { *m = OrderLimit2{} }
func (m *OrderLimit2) String() string { return proto.CompactTextString(m) }
func (*OrderLimit2) ProtoMessage()    {}
func (*OrderLimit2) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_f8962718de636984, []int{0}
}
func (m *OrderLimit2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderLimit2.Unmarshal(m, b)
}
func (m *OrderLimit2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderLimit2.Marshal(b, m, deterministic)
}
func (dst *OrderLimit2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderLimit2.Merge(dst, src)
}
func (m *OrderLimit2) XXX_Size() int {
	return xxx_messageInfo_OrderLimit2.Size(m)
}
func (m *OrderLimit2) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderLimit2.DiscardUnknown(m)
}

var xxx_messageInfo_OrderLimit2 proto.InternalMessageInfo

func (m *OrderLimit2) GetSerialNumber() []byte {
	if m != nil {
		return m.SerialNumber
	}
	return nil
}

func (m *OrderLimit2) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *OrderLimit2) GetAction() Action {
	if m != nil {
		return m.Action
	}
	return Action_INVALID
}

func (m *OrderLimit2) GetPieceExpiration() *timestamp.Timestamp {
	if m != nil {
		return m.PieceExpiration
	}
	return nil
}

func (m *OrderLimit2) GetOrderExpiration() *timestamp.Timestamp {
	if m != nil {
		return m.OrderExpiration
	}
	return nil
}

func (m *OrderLimit2) GetSatelliteSignature() []byte {
	if m != nil {
		return m.SatelliteSignature
	}
	return nil
}

type AddressedOrderLimit struct {
	Limit                *OrderLimit2 `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
	StorageNodeAddress   *NodeAddress `protobuf:"bytes,2,opt,name=storage_node_address,json=storageNodeAddress,proto3" json:"storage_node_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AddressedOrderLimit) Reset()         { *m = AddressedOrderLimit{} }
func (m *AddressedOrderLimit) String() string { return proto.CompactTextString(m) }
func (*AddressedOrderLimit) ProtoMessage()    {}
func (*AddressedOrderLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_f8962718de636984, []int{1}
}
func (m *AddressedOrderLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressedOrderLimit.Unmarshal(m, b)
}
func (m *AddressedOrderLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressedOrderLimit.Marshal(b, m, deterministic)
}
func (dst *AddressedOrderLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressedOrderLimit.Merge(dst, src)
}
func (m *AddressedOrderLimit) XXX_Size() int {
	return xxx_messageInfo_AddressedOrderLimit.Size(m)
}
func (m *AddressedOrderLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressedOrderLimit.DiscardUnknown(m)
}

var xxx_messageInfo_AddressedOrderLimit proto.InternalMessageInfo

func (m *AddressedOrderLimit) GetLimit() *OrderLimit2 {
	if m != nil {
		return m.Limit
	}
	return nil
}

func (m *AddressedOrderLimit) GetStorageNodeAddress() *NodeAddress {
	if m != nil {
		return m.StorageNodeAddress
	}
	return nil
}

// Order2 is a one step of fullfilling Amount number of bytes from an OrderLimit2 with SerialNumber
type Order2 struct {
	// serial of the order limit that was signed
	SerialNumber []byte `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	// amount to be signed for
	Amount int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// signature
	UplinkSignature      []byte   `protobuf:"bytes,3,opt,name=uplink_signature,json=uplinkSignature,proto3" json:"uplink_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order2) Reset()         { *m = Order2{} }
func (m *Order2) String() string { return proto.CompactTextString(m) }
func (*Order2) ProtoMessage()    {}
func (*Order2) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_f8962718de636984, []int{2}
}
func (m *Order2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order2.Unmarshal(m, b)
}
func (m *Order2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order2.Marshal(b, m, deterministic)
}
func (dst *Order2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order2.Merge(dst, src)
}
func (m *Order2) XXX_Size() int {
	return xxx_messageInfo_Order2.Size(m)
}
func (m *Order2) XXX_DiscardUnknown() {
	xxx_messageInfo_Order2.DiscardUnknown(m)
}

var xxx_messageInfo_Order2 proto.InternalMessageInfo

func (m *Order2) GetSerialNumber() []byte {
	if m != nil {
		return m.SerialNumber
	}
	return nil
}

func (m *Order2) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Order2) GetUplinkSignature() []byte {
	if m != nil {
		return m.UplinkSignature
	}
	return nil
}

type PieceHash struct {
	// piece id
	PieceId []byte `protobuf:"bytes,1,opt,name=piece_id,json=pieceId,proto3" json:"piece_id,omitempty"`
	// hash of the piece that was/is uploaded
	Hash []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	// signature either satellite or storage node
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PieceHash) Reset()         { *m = PieceHash{} }
func (m *PieceHash) String() string { return proto.CompactTextString(m) }
func (*PieceHash) ProtoMessage()    {}
func (*PieceHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_f8962718de636984, []int{3}
}
func (m *PieceHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PieceHash.Unmarshal(m, b)
}
func (m *PieceHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PieceHash.Marshal(b, m, deterministic)
}
func (dst *PieceHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PieceHash.Merge(dst, src)
}
func (m *PieceHash) XXX_Size() int {
	return xxx_messageInfo_PieceHash.Size(m)
}
func (m *PieceHash) XXX_DiscardUnknown() {
	xxx_messageInfo_PieceHash.DiscardUnknown(m)
}

var xxx_messageInfo_PieceHash proto.InternalMessageInfo

func (m *PieceHash) GetPieceId() []byte {
	if m != nil {
		return m.PieceId
	}
	return nil
}

func (m *PieceHash) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *PieceHash) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type SegmentWriteRequest struct {
	Bucket               []byte   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Path                 []byte   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentWriteRequest) Reset()         { *m = SegmentWriteRequest{} }
func (m *SegmentWriteRequest) String() string { return proto.CompactTextString(m) }
func (*SegmentWriteRequest) ProtoMessage()    {}
func (*SegmentWriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_f8962718de636984, []int{4}
}
func (m *SegmentWriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentWriteRequest.Unmarshal(m, b)
}
func (m *SegmentWriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentWriteRequest.Marshal(b, m, deterministic)
}
func (dst *SegmentWriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentWriteRequest.Merge(dst, src)
}
func (m *SegmentWriteRequest) XXX_Size() int {
	return xxx_messageInfo_SegmentWriteRequest.Size(m)
}
func (m *SegmentWriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentWriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentWriteRequest proto.InternalMessageInfo

func (m *SegmentWriteRequest) GetBucket() []byte {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *SegmentWriteRequest) GetPath() []byte {
	if m != nil {
		return m.Path
	}
	return nil
}

type SegmentCommitRequest struct {
	Bucket                 []byte       `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Path                   []byte       `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Segment                int64        `protobuf:"varint,3,opt,name=segment,proto3" json:"segment,omitempty"`
	StorageNodePiecehashes []*PieceHash `protobuf:"bytes,4,rep,name=storage_node_piecehashes,json=storageNodePiecehashes,proto3" json:"storage_node_piecehashes,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}     `json:"-"`
	XXX_unrecognized       []byte       `json:"-"`
	XXX_sizecache          int32        `json:"-"`
}

func (m *SegmentCommitRequest) Reset()         { *m = SegmentCommitRequest{} }
func (m *SegmentCommitRequest) String() string { return proto.CompactTextString(m) }
func (*SegmentCommitRequest) ProtoMessage()    {}
func (*SegmentCommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_f8962718de636984, []int{5}
}
func (m *SegmentCommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentCommitRequest.Unmarshal(m, b)
}
func (m *SegmentCommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentCommitRequest.Marshal(b, m, deterministic)
}
func (dst *SegmentCommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentCommitRequest.Merge(dst, src)
}
func (m *SegmentCommitRequest) XXX_Size() int {
	return xxx_messageInfo_SegmentCommitRequest.Size(m)
}
func (m *SegmentCommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentCommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentCommitRequest proto.InternalMessageInfo

func (m *SegmentCommitRequest) GetBucket() []byte {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *SegmentCommitRequest) GetPath() []byte {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *SegmentCommitRequest) GetSegment() int64 {
	if m != nil {
		return m.Segment
	}
	return 0
}

func (m *SegmentCommitRequest) GetStorageNodePiecehashes() []*PieceHash {
	if m != nil {
		return m.StorageNodePiecehashes
	}
	return nil
}

type SegmentCommitResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentCommitResponse) Reset()         { *m = SegmentCommitResponse{} }
func (m *SegmentCommitResponse) String() string { return proto.CompactTextString(m) }
func (*SegmentCommitResponse) ProtoMessage()    {}
func (*SegmentCommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_f8962718de636984, []int{6}
}
func (m *SegmentCommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentCommitResponse.Unmarshal(m, b)
}
func (m *SegmentCommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentCommitResponse.Marshal(b, m, deterministic)
}
func (dst *SegmentCommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentCommitResponse.Merge(dst, src)
}
func (m *SegmentCommitResponse) XXX_Size() int {
	return xxx_messageInfo_SegmentCommitResponse.Size(m)
}
func (m *SegmentCommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentCommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentCommitResponse proto.InternalMessageInfo

type SegementDownloadRequest struct {
	Bucket               []byte   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Path                 []byte   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Segment              int64    `protobuf:"varint,3,opt,name=segment,proto3" json:"segment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegementDownloadRequest) Reset()         { *m = SegementDownloadRequest{} }
func (m *SegementDownloadRequest) String() string { return proto.CompactTextString(m) }
func (*SegementDownloadRequest) ProtoMessage()    {}
func (*SegementDownloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_f8962718de636984, []int{7}
}
func (m *SegementDownloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegementDownloadRequest.Unmarshal(m, b)
}
func (m *SegementDownloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegementDownloadRequest.Marshal(b, m, deterministic)
}
func (dst *SegementDownloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegementDownloadRequest.Merge(dst, src)
}
func (m *SegementDownloadRequest) XXX_Size() int {
	return xxx_messageInfo_SegementDownloadRequest.Size(m)
}
func (m *SegementDownloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SegementDownloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SegementDownloadRequest proto.InternalMessageInfo

func (m *SegementDownloadRequest) GetBucket() []byte {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *SegementDownloadRequest) GetPath() []byte {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *SegementDownloadRequest) GetSegment() int64 {
	if m != nil {
		return m.Segment
	}
	return 0
}

type SegementDownloadResponse struct {
	Limits               []*OrderLimit2 `protobuf:"bytes,1,rep,name=limits,proto3" json:"limits,omitempty"`
	Pointer              *Pointer       `protobuf:"bytes,2,opt,name=pointer,proto3" json:"pointer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SegementDownloadResponse) Reset()         { *m = SegementDownloadResponse{} }
func (m *SegementDownloadResponse) String() string { return proto.CompactTextString(m) }
func (*SegementDownloadResponse) ProtoMessage()    {}
func (*SegementDownloadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_f8962718de636984, []int{8}
}
func (m *SegementDownloadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegementDownloadResponse.Unmarshal(m, b)
}
func (m *SegementDownloadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegementDownloadResponse.Marshal(b, m, deterministic)
}
func (dst *SegementDownloadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegementDownloadResponse.Merge(dst, src)
}
func (m *SegementDownloadResponse) XXX_Size() int {
	return xxx_messageInfo_SegementDownloadResponse.Size(m)
}
func (m *SegementDownloadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SegementDownloadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SegementDownloadResponse proto.InternalMessageInfo

func (m *SegementDownloadResponse) GetLimits() []*OrderLimit2 {
	if m != nil {
		return m.Limits
	}
	return nil
}

func (m *SegementDownloadResponse) GetPointer() *Pointer {
	if m != nil {
		return m.Pointer
	}
	return nil
}

type SegmentDeleteRequest struct {
	Bucket               []byte   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Path                 []byte   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Segment              int64    `protobuf:"varint,3,opt,name=segment,proto3" json:"segment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentDeleteRequest) Reset()         { *m = SegmentDeleteRequest{} }
func (m *SegmentDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SegmentDeleteRequest) ProtoMessage()    {}
func (*SegmentDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_f8962718de636984, []int{9}
}
func (m *SegmentDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentDeleteRequest.Unmarshal(m, b)
}
func (m *SegmentDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SegmentDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentDeleteRequest.Merge(dst, src)
}
func (m *SegmentDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SegmentDeleteRequest.Size(m)
}
func (m *SegmentDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentDeleteRequest proto.InternalMessageInfo

func (m *SegmentDeleteRequest) GetBucket() []byte {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *SegmentDeleteRequest) GetPath() []byte {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *SegmentDeleteRequest) GetSegment() int64 {
	if m != nil {
		return m.Segment
	}
	return 0
}

type OrderLimitResponse struct {
	AddressedLimits      []*AddressedOrderLimit `protobuf:"bytes,1,rep,name=addressed_limits,json=addressedLimits,proto3" json:"addressed_limits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *OrderLimitResponse) Reset()         { *m = OrderLimitResponse{} }
func (m *OrderLimitResponse) String() string { return proto.CompactTextString(m) }
func (*OrderLimitResponse) ProtoMessage()    {}
func (*OrderLimitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_f8962718de636984, []int{10}
}
func (m *OrderLimitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderLimitResponse.Unmarshal(m, b)
}
func (m *OrderLimitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderLimitResponse.Marshal(b, m, deterministic)
}
func (dst *OrderLimitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderLimitResponse.Merge(dst, src)
}
func (m *OrderLimitResponse) XXX_Size() int {
	return xxx_messageInfo_OrderLimitResponse.Size(m)
}
func (m *OrderLimitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderLimitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderLimitResponse proto.InternalMessageInfo

func (m *OrderLimitResponse) GetAddressedLimits() []*AddressedOrderLimit {
	if m != nil {
		return m.AddressedLimits
	}
	return nil
}

type ListSegmentsRequest struct {
	Bucket               []byte   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Prefix               string   `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	StartAfter           string   `protobuf:"bytes,3,opt,name=start_after,json=startAfter,proto3" json:"start_after,omitempty"`
	EndBefore            string   `protobuf:"bytes,4,opt,name=end_before,json=endBefore,proto3" json:"end_before,omitempty"`
	Recursive            bool     `protobuf:"varint,5,opt,name=recursive,proto3" json:"recursive,omitempty"`
	Limit                int32    `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	MetaFlags            uint32   `protobuf:"fixed32,7,opt,name=meta_flags,json=metaFlags,proto3" json:"meta_flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSegmentsRequest) Reset()         { *m = ListSegmentsRequest{} }
func (m *ListSegmentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListSegmentsRequest) ProtoMessage()    {}
func (*ListSegmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_f8962718de636984, []int{11}
}
func (m *ListSegmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSegmentsRequest.Unmarshal(m, b)
}
func (m *ListSegmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSegmentsRequest.Marshal(b, m, deterministic)
}
func (dst *ListSegmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSegmentsRequest.Merge(dst, src)
}
func (m *ListSegmentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListSegmentsRequest.Size(m)
}
func (m *ListSegmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSegmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSegmentsRequest proto.InternalMessageInfo

func (m *ListSegmentsRequest) GetBucket() []byte {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *ListSegmentsRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *ListSegmentsRequest) GetStartAfter() string {
	if m != nil {
		return m.StartAfter
	}
	return ""
}

func (m *ListSegmentsRequest) GetEndBefore() string {
	if m != nil {
		return m.EndBefore
	}
	return ""
}

func (m *ListSegmentsRequest) GetRecursive() bool {
	if m != nil {
		return m.Recursive
	}
	return false
}

func (m *ListSegmentsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListSegmentsRequest) GetMetaFlags() uint32 {
	if m != nil {
		return m.MetaFlags
	}
	return 0
}

type ListSegmentsResponse struct {
	Items                []*ListSegmentsResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	More                 bool                         `protobuf:"varint,2,opt,name=more,proto3" json:"more,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ListSegmentsResponse) Reset()         { *m = ListSegmentsResponse{} }
func (m *ListSegmentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListSegmentsResponse) ProtoMessage()    {}
func (*ListSegmentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_f8962718de636984, []int{12}
}
func (m *ListSegmentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSegmentsResponse.Unmarshal(m, b)
}
func (m *ListSegmentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSegmentsResponse.Marshal(b, m, deterministic)
}
func (dst *ListSegmentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSegmentsResponse.Merge(dst, src)
}
func (m *ListSegmentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListSegmentsResponse.Size(m)
}
func (m *ListSegmentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSegmentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSegmentsResponse proto.InternalMessageInfo

func (m *ListSegmentsResponse) GetItems() []*ListSegmentsResponse_Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ListSegmentsResponse) GetMore() bool {
	if m != nil {
		return m.More
	}
	return false
}

type ListSegmentsResponse_Item struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Pointer              *Pointer `protobuf:"bytes,2,opt,name=pointer,proto3" json:"pointer,omitempty"`
	IsPrefix             bool     `protobuf:"varint,3,opt,name=is_prefix,json=isPrefix,proto3" json:"is_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSegmentsResponse_Item) Reset()         { *m = ListSegmentsResponse_Item{} }
func (m *ListSegmentsResponse_Item) String() string { return proto.CompactTextString(m) }
func (*ListSegmentsResponse_Item) ProtoMessage()    {}
func (*ListSegmentsResponse_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_f8962718de636984, []int{12, 0}
}
func (m *ListSegmentsResponse_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSegmentsResponse_Item.Unmarshal(m, b)
}
func (m *ListSegmentsResponse_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSegmentsResponse_Item.Marshal(b, m, deterministic)
}
func (dst *ListSegmentsResponse_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSegmentsResponse_Item.Merge(dst, src)
}
func (m *ListSegmentsResponse_Item) XXX_Size() int {
	return xxx_messageInfo_ListSegmentsResponse_Item.Size(m)
}
func (m *ListSegmentsResponse_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSegmentsResponse_Item.DiscardUnknown(m)
}

var xxx_messageInfo_ListSegmentsResponse_Item proto.InternalMessageInfo

func (m *ListSegmentsResponse_Item) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ListSegmentsResponse_Item) GetPointer() *Pointer {
	if m != nil {
		return m.Pointer
	}
	return nil
}

func (m *ListSegmentsResponse_Item) GetIsPrefix() bool {
	if m != nil {
		return m.IsPrefix
	}
	return false
}

func init() {
	proto.RegisterType((*OrderLimit2)(nil), "metainfo.OrderLimit2")
	proto.RegisterType((*AddressedOrderLimit)(nil), "metainfo.AddressedOrderLimit")
	proto.RegisterType((*Order2)(nil), "metainfo.Order2")
	proto.RegisterType((*PieceHash)(nil), "metainfo.PieceHash")
	proto.RegisterType((*SegmentWriteRequest)(nil), "metainfo.SegmentWriteRequest")
	proto.RegisterType((*SegmentCommitRequest)(nil), "metainfo.SegmentCommitRequest")
	proto.RegisterType((*SegmentCommitResponse)(nil), "metainfo.SegmentCommitResponse")
	proto.RegisterType((*SegementDownloadRequest)(nil), "metainfo.SegementDownloadRequest")
	proto.RegisterType((*SegementDownloadResponse)(nil), "metainfo.SegementDownloadResponse")
	proto.RegisterType((*SegmentDeleteRequest)(nil), "metainfo.SegmentDeleteRequest")
	proto.RegisterType((*OrderLimitResponse)(nil), "metainfo.OrderLimitResponse")
	proto.RegisterType((*ListSegmentsRequest)(nil), "metainfo.ListSegmentsRequest")
	proto.RegisterType((*ListSegmentsResponse)(nil), "metainfo.ListSegmentsResponse")
	proto.RegisterType((*ListSegmentsResponse_Item)(nil), "metainfo.ListSegmentsResponse.Item")
	proto.RegisterEnum("metainfo.Action", Action_name, Action_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MetainfoClient is the client API for Metainfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetainfoClient interface {
	CreateSegment(ctx context.Context, in *SegmentWriteRequest, opts ...grpc.CallOption) (*OrderLimitResponse, error)
	CommitSegment(ctx context.Context, in *SegmentCommitRequest, opts ...grpc.CallOption) (*SegmentCommitResponse, error)
	DownloadSegment(ctx context.Context, in *SegementDownloadRequest, opts ...grpc.CallOption) (*SegementDownloadRequest, error)
	DeleteSegment(ctx context.Context, in *SegmentDeleteRequest, opts ...grpc.CallOption) (*OrderLimitResponse, error)
	ListSegment(ctx context.Context, in *ListSegmentsRequest, opts ...grpc.CallOption) (*ListSegmentsResponse, error)
}

type metainfoClient struct {
	cc *grpc.ClientConn
}

func NewMetainfoClient(cc *grpc.ClientConn) MetainfoClient {
	return &metainfoClient{cc}
}

func (c *metainfoClient) CreateSegment(ctx context.Context, in *SegmentWriteRequest, opts ...grpc.CallOption) (*OrderLimitResponse, error) {
	out := new(OrderLimitResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/CreateSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metainfoClient) CommitSegment(ctx context.Context, in *SegmentCommitRequest, opts ...grpc.CallOption) (*SegmentCommitResponse, error) {
	out := new(SegmentCommitResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/CommitSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metainfoClient) DownloadSegment(ctx context.Context, in *SegementDownloadRequest, opts ...grpc.CallOption) (*SegementDownloadRequest, error) {
	out := new(SegementDownloadRequest)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/DownloadSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metainfoClient) DeleteSegment(ctx context.Context, in *SegmentDeleteRequest, opts ...grpc.CallOption) (*OrderLimitResponse, error) {
	out := new(OrderLimitResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/DeleteSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metainfoClient) ListSegment(ctx context.Context, in *ListSegmentsRequest, opts ...grpc.CallOption) (*ListSegmentsResponse, error) {
	out := new(ListSegmentsResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/ListSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetainfoServer is the server API for Metainfo service.
type MetainfoServer interface {
	CreateSegment(context.Context, *SegmentWriteRequest) (*OrderLimitResponse, error)
	CommitSegment(context.Context, *SegmentCommitRequest) (*SegmentCommitResponse, error)
	DownloadSegment(context.Context, *SegementDownloadRequest) (*SegementDownloadRequest, error)
	DeleteSegment(context.Context, *SegmentDeleteRequest) (*OrderLimitResponse, error)
	ListSegment(context.Context, *ListSegmentsRequest) (*ListSegmentsResponse, error)
}

func RegisterMetainfoServer(s *grpc.Server, srv MetainfoServer) {
	s.RegisterService(&_Metainfo_serviceDesc, srv)
}

func _Metainfo_CreateSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SegmentWriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetainfoServer).CreateSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metainfo.Metainfo/CreateSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetainfoServer).CreateSegment(ctx, req.(*SegmentWriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Metainfo_CommitSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SegmentCommitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetainfoServer).CommitSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metainfo.Metainfo/CommitSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetainfoServer).CommitSegment(ctx, req.(*SegmentCommitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Metainfo_DownloadSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SegementDownloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetainfoServer).DownloadSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metainfo.Metainfo/DownloadSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetainfoServer).DownloadSegment(ctx, req.(*SegementDownloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Metainfo_DeleteSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SegmentDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetainfoServer).DeleteSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metainfo.Metainfo/DeleteSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetainfoServer).DeleteSegment(ctx, req.(*SegmentDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Metainfo_ListSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSegmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetainfoServer).ListSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metainfo.Metainfo/ListSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetainfoServer).ListSegment(ctx, req.(*ListSegmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Metainfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "metainfo.Metainfo",
	HandlerType: (*MetainfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSegment",
			Handler:    _Metainfo_CreateSegment_Handler,
		},
		{
			MethodName: "CommitSegment",
			Handler:    _Metainfo_CommitSegment_Handler,
		},
		{
			MethodName: "DownloadSegment",
			Handler:    _Metainfo_DownloadSegment_Handler,
		},
		{
			MethodName: "DeleteSegment",
			Handler:    _Metainfo_DeleteSegment_Handler,
		},
		{
			MethodName: "ListSegment",
			Handler:    _Metainfo_ListSegment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "metainfo.proto",
}

func init() { proto.RegisterFile("metainfo.proto", fileDescriptor_metainfo_f8962718de636984) }

var fileDescriptor_metainfo_f8962718de636984 = []byte{
	// 1027 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xee, 0x66, 0x9d, 0xb5, 0x7d, 0x1c, 0xc7, 0x66, 0x92, 0xa6, 0xc6, 0x34, 0x8d, 0xd9, 0xde,
	0x98, 0x16, 0x1c, 0x61, 0x24, 0x24, 0x2e, 0x9d, 0xd8, 0xb4, 0x96, 0x9c, 0x60, 0x4d, 0x1c, 0x8a,
	0x10, 0xc2, 0x5a, 0x67, 0x8f, 0x9d, 0x51, 0xbd, 0x3f, 0xec, 0x8c, 0x69, 0xdf, 0x80, 0xd7, 0xe0,
	0x9e, 0x17, 0xe1, 0x82, 0x07, 0x40, 0x5c, 0xf4, 0x2d, 0xb8, 0x47, 0x33, 0x3b, 0xfb, 0xe3, 0xc6,
	0x69, 0xa0, 0xe2, 0x6e, 0xcf, 0x99, 0xf3, 0xff, 0x7d, 0xe7, 0xd8, 0xb0, 0xeb, 0xa1, 0x70, 0x98,
	0x3f, 0x0f, 0x3a, 0x61, 0x14, 0x88, 0x80, 0x94, 0x12, 0xb9, 0x09, 0x8b, 0x60, 0xa1, 0xb5, 0xcd,
	0xa3, 0x45, 0x10, 0x2c, 0x96, 0x78, 0xac, 0xa4, 0xd9, 0x6a, 0x7e, 0x2c, 0x98, 0x87, 0x5c, 0x38,
	0x5e, 0xa8, 0x0d, 0xc0, 0x0f, 0x5c, 0xd4, 0xdf, 0xb5, 0x30, 0x60, 0xbe, 0xc0, 0xc8, 0x9d, 0xc5,
	0x0a, 0xfb, 0x6f, 0x13, 0x2a, 0xdf, 0x44, 0x2e, 0x46, 0x23, 0xe6, 0x31, 0xd1, 0x25, 0x8f, 0xa1,
	0xca, 0x31, 0x62, 0xce, 0x72, 0xea, 0xaf, 0xbc, 0x19, 0x46, 0x0d, 0xa3, 0x65, 0xb4, 0x77, 0xe8,
	0x4e, 0xac, 0x3c, 0x57, 0x3a, 0xf2, 0x39, 0xec, 0x70, 0x47, 0xe0, 0x72, 0xc9, 0x04, 0x4e, 0x99,
	0xdb, 0xd8, 0x92, 0x36, 0x27, 0xbb, 0xbf, 0xbf, 0x39, 0xba, 0xf7, 0xd7, 0x9b, 0x23, 0xeb, 0x3c,
	0x70, 0x71, 0xd8, 0xa7, 0x95, 0xd4, 0x66, 0xe8, 0x92, 0xa7, 0x50, 0x5e, 0x85, 0x4b, 0xe6, 0xbf,
	0x94, 0xf6, 0xe6, 0x46, 0xfb, 0x52, 0x6c, 0x30, 0x74, 0xc9, 0x97, 0x50, 0xe3, 0x22, 0x88, 0x9c,
	0x05, 0x4e, 0x65, 0xed, 0xd2, 0xa5, 0xb0, 0xd1, 0xa5, 0xaa, 0xcd, 0x94, 0xe8, 0x92, 0x27, 0x50,
	0x0a, 0x19, 0x5e, 0x29, 0x87, 0x6d, 0xe5, 0x50, 0xd3, 0x0e, 0xc5, 0xb1, 0xd4, 0x0f, 0xfb, 0xb4,
	0xa8, 0x0c, 0x86, 0x2e, 0xd9, 0x87, 0xed, 0xa5, 0x6c, 0xb9, 0x61, 0xb5, 0x8c, 0xb6, 0x49, 0x63,
	0x81, 0xb4, 0xc1, 0x72, 0xae, 0x04, 0x0b, 0xfc, 0x46, 0xb1, 0x65, 0xb4, 0x77, 0xbb, 0xf5, 0x4e,
	0x8a, 0x41, 0x4f, 0xe9, 0xa9, 0x7e, 0x27, 0x03, 0xa8, 0xc7, 0xb9, 0xf0, 0x75, 0xc8, 0x22, 0x47,
	0xf9, 0x94, 0x5a, 0x46, 0xbb, 0xd2, 0x6d, 0x76, 0x62, 0x44, 0x3a, 0x09, 0x22, 0x9d, 0x49, 0x82,
	0x08, 0xad, 0x29, 0x9f, 0x41, 0xea, 0x22, 0xc3, 0x04, 0x72, 0xfc, 0xf9, 0x30, 0xe5, 0xbb, 0xc3,
	0x28, 0x9f, 0x5c, 0x98, 0x63, 0xd8, 0xcb, 0x10, 0xe1, 0x6c, 0xe1, 0x3b, 0x62, 0x15, 0x61, 0x03,
	0x14, 0x78, 0x24, 0x7d, 0xba, 0x48, 0x5e, 0xec, 0x5f, 0x0c, 0xd8, 0xeb, 0xb9, 0x6e, 0x84, 0x9c,
	0xa3, 0x9b, 0x11, 0x80, 0x3c, 0x4d, 0xc6, 0x62, 0xa8, 0x22, 0xee, 0x67, 0xfd, 0xe7, 0x58, 0x92,
	0x4c, 0xeb, 0x14, 0xf6, 0xd7, 0x70, 0x72, 0xe2, 0x80, 0x8a, 0x0f, 0x95, 0xee, 0x07, 0x1d, 0x45,
	0x3c, 0x89, 0x8d, 0xce, 0x44, 0x49, 0x0e, 0x2f, 0xad, 0xb3, 0x43, 0xb0, 0x54, 0xe8, 0x7f, 0xc9,
	0xbd, 0x03, 0xb0, 0x1c, 0x2f, 0x58, 0xf9, 0x42, 0x65, 0x31, 0xa9, 0x96, 0xc8, 0x27, 0x50, 0xd7,
	0x04, 0xcb, 0xda, 0x57, 0x3c, 0xa3, 0xb5, 0x58, 0x9f, 0xf5, 0xfe, 0x1d, 0x94, 0x15, 0x1d, 0x9e,
	0x3b, 0xfc, 0x9a, 0x7c, 0x98, 0xe3, 0x4c, 0x9c, 0x2f, 0xa5, 0x08, 0x81, 0xc2, 0xb5, 0xc3, 0xaf,
	0x63, 0x7a, 0x53, 0xf5, 0x4d, 0x1e, 0x42, 0xf9, 0xed, 0xf8, 0x99, 0xc2, 0xee, 0xc1, 0xde, 0x05,
	0x2e, 0x3c, 0xf4, 0xc5, 0x8b, 0x88, 0x09, 0xa4, 0xf8, 0xd3, 0x0a, 0xb9, 0x90, 0x35, 0xcf, 0x56,
	0x57, 0x2f, 0x51, 0xe8, 0x0c, 0x5a, 0x92, 0x09, 0x42, 0x47, 0xa4, 0x09, 0xe4, 0xb7, 0xfd, 0x9b,
	0x01, 0xfb, 0x3a, 0xc6, 0x69, 0xe0, 0x79, 0x4c, 0xbc, 0x47, 0x10, 0xd2, 0x80, 0x22, 0x8f, 0x63,
	0xa8, 0x1a, 0x4d, 0x9a, 0x88, 0xe4, 0x0c, 0x1a, 0x6b, 0x90, 0xa9, 0x5e, 0x65, 0x67, 0xc8, 0x1b,
	0x85, 0x96, 0xd9, 0xae, 0x74, 0xf7, 0x32, 0xc8, 0xd3, 0x29, 0xd1, 0x83, 0x1c, 0x70, 0xe3, 0xcc,
	0xc5, 0x7e, 0x00, 0xf7, 0xdf, 0x2a, 0x96, 0x87, 0x81, 0xcf, 0xd1, 0x9e, 0xc2, 0x83, 0x0b, 0x5c,
	0xa0, 0x7c, 0xe9, 0x07, 0xaf, 0xfc, 0x65, 0xe0, 0xb8, 0xff, 0x6b, 0x23, 0xf6, 0x2b, 0x68, 0xdc,
	0x4c, 0x10, 0x27, 0x27, 0x9f, 0x81, 0xa5, 0x08, 0xca, 0x1b, 0x86, 0x6a, 0xe9, 0x16, 0x16, 0x6b,
	0x23, 0xf2, 0x29, 0x14, 0xf5, 0x59, 0xd4, 0xcc, 0x25, 0x9d, 0xec, 0x4c, 0x8e, 0xe3, 0x2f, 0x9a,
	0x98, 0xd8, 0x3f, 0xa4, 0xf8, 0xf4, 0x71, 0x89, 0xef, 0x05, 0xf2, 0x3b, 0xda, 0xfa, 0x11, 0x48,
	0x56, 0x62, 0xda, 0xd0, 0x73, 0xa8, 0x3b, 0xc9, 0xb2, 0x4e, 0xd7, 0x5a, 0x3b, 0xcc, 0x1d, 0xa8,
	0x9b, 0xeb, 0x4c, 0x6b, 0xa9, 0x9b, 0x92, 0xb9, 0xfd, 0xa7, 0x01, 0x7b, 0x23, 0xc6, 0x85, 0x6e,
	0x81, 0xdf, 0x55, 0xfd, 0x01, 0x58, 0x61, 0x84, 0x73, 0xf6, 0x5a, 0xd5, 0x5f, 0xa6, 0x5a, 0x22,
	0x47, 0x50, 0xe1, 0xc2, 0x89, 0xc4, 0xd4, 0x99, 0xcb, 0xb9, 0x99, 0xea, 0x11, 0x94, 0xaa, 0x27,
	0x35, 0xe4, 0x10, 0x00, 0x7d, 0x77, 0x3a, 0xc3, 0x79, 0x10, 0xa1, 0x3a, 0xdf, 0x65, 0x5a, 0x46,
	0xdf, 0x3d, 0x51, 0x0a, 0xb9, 0x47, 0x11, 0x5e, 0xad, 0x22, 0xce, 0x7e, 0x46, 0x75, 0xab, 0x4b,
	0x34, 0x53, 0xac, 0x1f, 0xe7, 0xed, 0xe4, 0xdc, 0x1c, 0x02, 0xc8, 0x66, 0xa7, 0xf3, 0xa5, 0xb3,
	0xe0, 0xea, 0x40, 0x17, 0x69, 0x59, 0x6a, 0xbe, 0x96, 0x0a, 0xfb, 0x0f, 0x03, 0xf6, 0xd7, 0x5b,
	0xd3, 0xd3, 0xfb, 0x0a, 0xb6, 0x99, 0x40, 0x2f, 0x19, 0xd9, 0xe3, 0x6c, 0x64, 0x9b, 0xcc, 0x3b,
	0x43, 0x81, 0x1e, 0x8d, 0x3d, 0x24, 0x78, 0x9e, 0xac, 0x7f, 0x4b, 0x55, 0xa8, 0xbe, 0x9b, 0x08,
	0x05, 0x69, 0x92, 0x02, 0x6b, 0xa8, 0xde, 0x62, 0x60, 0xff, 0x13, 0x95, 0xc8, 0x47, 0x50, 0x66,
	0x7c, 0xaa, 0xe7, 0x6b, 0xaa, 0x14, 0x25, 0xc6, 0xc7, 0x4a, 0x7e, 0x32, 0x03, 0x2b, 0xfe, 0xc9,
	0x21, 0x15, 0x28, 0x0e, 0xcf, 0xbf, 0xed, 0x8d, 0x86, 0xfd, 0xfa, 0x3d, 0x52, 0x04, 0x73, 0x7c,
	0x39, 0xa9, 0x1b, 0xf2, 0xe3, 0xd9, 0x60, 0x52, 0xdf, 0x22, 0x55, 0x28, 0x3f, 0x1b, 0x4c, 0xa6,
	0xbd, 0xcb, 0xfe, 0x70, 0x52, 0x37, 0xc9, 0x2e, 0x80, 0x14, 0xe9, 0x60, 0xdc, 0x1b, 0xd2, 0x7a,
	0x41, 0xca, 0xe3, 0xcb, 0x54, 0xde, 0x26, 0x00, 0x56, 0x7f, 0x30, 0x1a, 0x4c, 0x06, 0x75, 0xab,
	0xfb, 0xab, 0x09, 0xa5, 0x33, 0x3d, 0x0c, 0x32, 0x82, 0xea, 0x69, 0x84, 0x8e, 0x40, 0x3d, 0x11,
	0x92, 0xe3, 0xd6, 0x86, 0xab, 0xd6, 0x7c, 0xb8, 0x69, 0xab, 0xd2, 0xa1, 0x8f, 0xa1, 0x1a, 0x9f,
	0x84, 0x24, 0xda, 0xa3, 0x1b, 0xd1, 0xd6, 0xee, 0x5b, 0xf3, 0xe8, 0xd6, 0x77, 0x1d, 0xf1, 0x05,
	0xd4, 0x92, 0x4d, 0x4f, 0x62, 0x7e, 0xbc, 0xe6, 0xb3, 0xe9, 0xda, 0x34, 0xef, 0x36, 0x21, 0x67,
	0x50, 0x8d, 0x57, 0xf9, 0xf6, 0x52, 0xd7, 0x56, 0xfd, 0x8e, 0xce, 0x47, 0x50, 0xc9, 0xf1, 0x2a,
	0x3f, 0xc5, 0x0d, 0x8b, 0xd7, 0x7c, 0xf4, 0x6e, 0x36, 0x9e, 0x14, 0xbe, 0xdf, 0x0a, 0x67, 0x33,
	0x4b, 0xfd, 0x09, 0xf8, 0xe2, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x5f, 0x03, 0x02, 0x13,
	0x0a, 0x00, 0x00,
}
