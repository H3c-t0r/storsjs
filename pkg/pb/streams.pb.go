// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: streams.proto

package pb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type SegmentMeta struct {
	EncryptedKey         []byte   `protobuf:"bytes,1,opt,name=encrypted_key,json=encryptedKey,proto3" json:"encrypted_key,omitempty"`
	KeyNonce             []byte   `protobuf:"bytes,2,opt,name=key_nonce,json=keyNonce,proto3" json:"key_nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentMeta) Reset()         { *m = SegmentMeta{} }
func (m *SegmentMeta) String() string { return proto.CompactTextString(m) }
func (*SegmentMeta) ProtoMessage()    {}
func (*SegmentMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_streams_73fcd9539a8f7474, []int{0}
}
func (m *SegmentMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentMeta.Unmarshal(m, b)
}
func (m *SegmentMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentMeta.Marshal(b, m, deterministic)
}
func (dst *SegmentMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentMeta.Merge(dst, src)
}
func (m *SegmentMeta) XXX_Size() int {
	return xxx_messageInfo_SegmentMeta.Size(m)
}
func (m *SegmentMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentMeta.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentMeta proto.InternalMessageInfo

func (m *SegmentMeta) GetEncryptedKey() []byte {
	if m != nil {
		return m.EncryptedKey
	}
	return nil
}

func (m *SegmentMeta) GetKeyNonce() []byte {
	if m != nil {
		return m.KeyNonce
	}
	return nil
}

type StreamInfo struct {
	NumberOfSegments     int64    `protobuf:"varint,1,opt,name=number_of_segments,json=numberOfSegments,proto3" json:"number_of_segments,omitempty"`
	SegmentsSize         int64    `protobuf:"varint,2,opt,name=segments_size,json=segmentsSize,proto3" json:"segments_size,omitempty"`
	LastSegmentSize      int64    `protobuf:"varint,3,opt,name=last_segment_size,json=lastSegmentSize,proto3" json:"last_segment_size,omitempty"`
	Metadata             []byte   `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamInfo) Reset()         { *m = StreamInfo{} }
func (m *StreamInfo) String() string { return proto.CompactTextString(m) }
func (*StreamInfo) ProtoMessage()    {}
func (*StreamInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_streams_73fcd9539a8f7474, []int{1}
}
func (m *StreamInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamInfo.Unmarshal(m, b)
}
func (m *StreamInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamInfo.Marshal(b, m, deterministic)
}
func (dst *StreamInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamInfo.Merge(dst, src)
}
func (m *StreamInfo) XXX_Size() int {
	return xxx_messageInfo_StreamInfo.Size(m)
}
func (m *StreamInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamInfo.DiscardUnknown(m)
}

var xxx_messageInfo_StreamInfo proto.InternalMessageInfo

func (m *StreamInfo) GetNumberOfSegments() int64 {
	if m != nil {
		return m.NumberOfSegments
	}
	return 0
}

func (m *StreamInfo) GetSegmentsSize() int64 {
	if m != nil {
		return m.SegmentsSize
	}
	return 0
}

func (m *StreamInfo) GetLastSegmentSize() int64 {
	if m != nil {
		return m.LastSegmentSize
	}
	return 0
}

func (m *StreamInfo) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type StreamMeta struct {
	EncryptedStreamInfo  []byte       `protobuf:"bytes,1,opt,name=encrypted_stream_info,json=encryptedStreamInfo,proto3" json:"encrypted_stream_info,omitempty"`
	EncryptionType       int32        `protobuf:"varint,2,opt,name=encryption_type,json=encryptionType,proto3" json:"encryption_type,omitempty"`
	EncryptionBlockSize  int32        `protobuf:"varint,3,opt,name=encryption_block_size,json=encryptionBlockSize,proto3" json:"encryption_block_size,omitempty"`
	LastSegmentMeta      *SegmentMeta `protobuf:"bytes,4,opt,name=last_segment_meta,json=lastSegmentMeta" json:"last_segment_meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *StreamMeta) Reset()         { *m = StreamMeta{} }
func (m *StreamMeta) String() string { return proto.CompactTextString(m) }
func (*StreamMeta) ProtoMessage()    {}
func (*StreamMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_streams_73fcd9539a8f7474, []int{2}
}
func (m *StreamMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamMeta.Unmarshal(m, b)
}
func (m *StreamMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamMeta.Marshal(b, m, deterministic)
}
func (dst *StreamMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamMeta.Merge(dst, src)
}
func (m *StreamMeta) XXX_Size() int {
	return xxx_messageInfo_StreamMeta.Size(m)
}
func (m *StreamMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamMeta.DiscardUnknown(m)
}

var xxx_messageInfo_StreamMeta proto.InternalMessageInfo

func (m *StreamMeta) GetEncryptedStreamInfo() []byte {
	if m != nil {
		return m.EncryptedStreamInfo
	}
	return nil
}

func (m *StreamMeta) GetEncryptionType() int32 {
	if m != nil {
		return m.EncryptionType
	}
	return 0
}

func (m *StreamMeta) GetEncryptionBlockSize() int32 {
	if m != nil {
		return m.EncryptionBlockSize
	}
	return 0
}

func (m *StreamMeta) GetLastSegmentMeta() *SegmentMeta {
	if m != nil {
		return m.LastSegmentMeta
	}
	return nil
}

func init() {
	proto.RegisterType((*SegmentMeta)(nil), "storjv3_0_0.SegmentMeta")
	proto.RegisterType((*StreamInfo)(nil), "storjv3_0_0.StreamInfo")
	proto.RegisterType((*StreamMeta)(nil), "storjv3_0_0.StreamMeta")
}

func init() { proto.RegisterFile("streams.proto", fileDescriptor_streams_73fcd9539a8f7474) }

var fileDescriptor_streams_73fcd9539a8f7474 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x51, 0xcd, 0x4a, 0xf3, 0x40,
	0x14, 0xa5, 0x4d, 0xfb, 0xd1, 0x6f, 0x92, 0x5a, 0x1d, 0x11, 0x82, 0x6e, 0x24, 0x2e, 0x14, 0x91,
	0x50, 0xda, 0x37, 0x28, 0x6e, 0x44, 0xb4, 0x90, 0xb8, 0x72, 0x33, 0x4c, 0xd2, 0x1b, 0x89, 0x69,
	0x66, 0x42, 0x66, 0x14, 0xa6, 0x2f, 0xe4, 0x83, 0xf9, 0x22, 0x32, 0x33, 0xf9, 0xd3, 0xe5, 0x3d,
	0xe7, 0x70, 0xee, 0x39, 0xf7, 0xa2, 0xb9, 0x90, 0x35, 0xd0, 0x52, 0x84, 0x55, 0xcd, 0x25, 0xc7,
	0xae, 0x90, 0xbc, 0x7e, 0xff, 0x5c, 0x93, 0x25, 0x59, 0x06, 0x5b, 0xe4, 0xc6, 0xf0, 0x56, 0x02,
	0x93, 0x4f, 0x20, 0x29, 0xbe, 0x42, 0x73, 0x60, 0x69, 0xad, 0x2a, 0x09, 0x3b, 0x52, 0x80, 0xf2,
	0x47, 0x97, 0xa3, 0x1b, 0x2f, 0xf2, 0x3a, 0xf0, 0x11, 0x14, 0xbe, 0x40, 0xff, 0x0b, 0x50, 0x84,
	0x71, 0x96, 0x82, 0x3f, 0x36, 0x82, 0x59, 0x01, 0xea, 0x59, 0xcf, 0xc1, 0xd7, 0x08, 0xa1, 0xd8,
	0xec, 0x7b, 0x60, 0x19, 0xc7, 0x77, 0x08, 0xb3, 0x8f, 0x32, 0x81, 0x9a, 0xf0, 0x8c, 0x08, 0xbb,
	0x49, 0x18, 0x57, 0x27, 0x3a, 0xb6, 0xcc, 0x36, 0x6b, 0x12, 0x08, 0xbd, 0xbe, 0xd5, 0x10, 0x91,
	0x1f, 0xac, 0xbb, 0x13, 0x79, 0x2d, 0x18, 0xe7, 0x07, 0xc0, 0xb7, 0xe8, 0x64, 0x4f, 0x85, 0x6c,
	0xdd, 0xac, 0xd0, 0x31, 0xc2, 0x85, 0x26, 0x1a, 0x37, 0xa3, 0x3d, 0x47, 0xb3, 0x12, 0x24, 0xdd,
	0x51, 0x49, 0xfd, 0x89, 0x4d, 0xda, 0xce, 0xc1, 0x77, 0x97, 0xd4, 0x54, 0x5f, 0xa1, 0xb3, 0xbe,
	0xba, 0xbd, 0x18, 0xc9, 0x59, 0xc6, 0x9b, 0x13, 0x9c, 0x76, 0xe4, 0xa0, 0xdd, 0x35, 0x5a, 0x34,
	0x70, 0xce, 0x19, 0x91, 0xaa, 0xb2, 0x89, 0xa7, 0xd1, 0x51, 0x0f, 0xbf, 0xa8, 0x0a, 0x06, 0xe6,
	0x5a, 0x98, 0xec, 0x79, 0x5a, 0xf4, 0xb9, 0xa7, 0x9d, 0x79, 0xce, 0xd9, 0x46, 0x73, 0x26, 0xfb,
	0xfd, 0x9f, 0x9e, 0x3a, 0xb8, 0x29, 0xe1, 0xae, 0xfc, 0x70, 0xf0, 0xc3, 0x70, 0xf0, 0xc0, 0x5f,
	0x17, 0xd0, 0xc0, 0x66, 0xf2, 0x3a, 0xae, 0x92, 0xe4, 0x9f, 0x79, 0xfd, 0xfa, 0x27, 0x00, 0x00,
	0xff, 0xff, 0x2d, 0xf3, 0xaa, 0x1d, 0x0b, 0x02, 0x00, 0x00,
}
