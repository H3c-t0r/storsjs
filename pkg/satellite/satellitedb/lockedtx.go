// Code generated by lockedgen using 'go generate'. DO NOT EDIT.

// Copyright (C) 2019 Storj Labs, Inc.
// See LICENSE for copying information.

package satellitedb

import (
	"context"
	"sync"

	"storj.io/storj/pkg/satellite"
)

// BeginTransaction is a method for opening transaction
func (m *locked) BeginTx(ctx context.Context) (satellite.DBTx, error) {
	m.Lock()
	db, err := m.db.BeginTx(ctx)

	txlocked := &locked{m.Locker, db}
	return &lockedTx{txlocked, db, sync.Once{}}, err
}

// lockedTx extends Database with transaction scope
type lockedTx struct {
	*locked
	tx   satellite.DBTx
	once sync.Once
}

// Commit is a method for committing and closing transaction
func (db *lockedTx) Commit() error {
	err := db.tx.Commit()
	db.once.Do(db.Unlock)
	return err
}

// Rollback is a method for rollback and closing transaction
func (db *lockedTx) Rollback() error {
	err := db.tx.Rollback()
	db.once.Do(db.Unlock)
	return err
}
