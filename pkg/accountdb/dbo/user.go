// Copyright (C) 2018 Storj Labs, Inc.
// See LICENSE for copying information.

package dbo

import (
	"github.com/skyrings/skyring-common/tools/uuid"
	"github.com/zeebo/errs"
	"storj.io/storj/pkg/accountdb/dbx"
	"time"
)

// Database object that describes User entity
type User struct {
	id uuid.UUID

	firstName string
	lastName string
	email string
	password string

	createdAt time.Time
}

func (d User) Id() uuid.UUID {
	return d.id
}

func (d User) FirstName() string {
	return d.firstName
}

func (d User) LastName() string {
	return d.lastName
}

func (d User) Email() string {
	return d.email
}

func (d User) Password() string {
	return d.password
}

func (d User) CreatedAt() time.Time {
	return d.createdAt
}

func NewUser(id uuid.UUID, firstName, lastName, email, password string, creationDate time.Time) *User {
	return &User{
		id,
		firstName,
		lastName,
		email,
		password,
		creationDate,
	}
}

//TODO: move error strings to better place
// Creating User entity from autogenerated dbx.User struct
func (u *User) FromDbx(user *dbx.User) (*User, error) {

	if user == nil {
		return nil, errs.New("user parameter is nil")
	}

	id, err := uuid.Parse(user.Id)

	if err != nil {
		return nil, errs.New("id in not valid UUID string")
	}

	u.id = *id
	u.firstName = user.FirstName
	u.lastName = user.LastName
	u.email = user.Email
	u.password = user.PasswordHash
	u.createdAt = user.CreatedAt

	return u, nil
}