//lint:file-ignore * generated file

// Code generated for package schema by go-bindata DO NOT EDIT. (@generated)
// sources:
// 2018092201_initial-tables.down.sql
// 2018092201_initial-tables.up.sql
// 2019111301_fix_seq_scans_in_list.down.sql
// 2019111301_fix_seq_scans_in_list.up.sql
// 2020011301_drop_not_null.down.sql
// 2020011301_drop_not_null.up.sql
// 2020011601_kvimplementation_switchover.down.sql
// 2020011601_kvimplementation_switchover.up.sql
package schema

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __2018092201_initialTablesDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xc1\x8a\x83\x40\x0c\x86\xef\x82\xef\x30\x47\x17\xf6\x0d\x3c\xe9\xee\xb4\x08\x45\x45\xa6\x2d\x9e\x42\x1c\x53\x2a\xad\xa3\xc4\x58\xf0\xed\x0b\x3d\x08\x2a\xb4\x3d\x05\x92\x3f\x1f\xdf\xff\x5f\x64\xb9\xda\x1d\xd3\x3f\x93\x64\xa9\xba\x37\x83\x40\xdd\x30\x59\xe9\x78\x02\xa6\x07\xf1\x40\x41\x5c\x1a\x1d\xfd\xaa\xe5\x48\x52\xa3\xf7\xba\xf8\x09\x7d\xef\x1d\xe4\xbb\x67\x53\xe6\x5a\xf5\x28\x57\x40\x57\x43\x4b\x82\x1b\xac\xed\xda\xbe\x73\xe4\x04\x1a\x67\x99\x5a\x72\x12\x7c\x52\xa9\x26\x21\x5c\xe7\xb7\x31\xe1\xd1\x59\x14\x02\xbc\x08\xf1\x8a\xba\xc5\x9f\x12\x7d\x7e\xc9\xd6\x28\x08\x3d\x93\xc8\x34\x17\x89\xe2\x83\x9e\x8f\xcb\x6d\x35\xda\x1b\xc9\x10\xfa\xde\x33\x00\x00\xff\xff\xdc\x18\xc9\xd1\x76\x01\x00\x00")

func _2018092201_initialTablesDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2018092201_initialTablesDownSql,
		"2018092201_initial-tables.down.sql",
	)
}

func _2018092201_initialTablesDownSql() (*asset, error) {
	bytes, err := _2018092201_initialTablesDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2018092201_initial-tables.down.sql", size: 374, mode: os.FileMode(438), modTime: time.Unix(1551691696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2018092201_initialTablesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x6d\x6f\xdb\xba\x15\xfe\x6e\xc0\xff\xe1\x7c\x28\x20\x1b\x95\x93\x74\x58\x81\xad\xa9\x0b\xb8\x0e\x9d\x78\x75\xe4\x42\x76\x1a\x04\xb8\x80\x41\x49\xb4\xcd\x55\x26\x35\x91\x6a\x92\xe1\xfe\xf8\x81\xa4\x5e\x28\x59\x4a\xd2\xbb\xe2\xae\xc0\xaa\x2f\x89\xa5\xc3\xe7\x1c\x9e\xf3\xf0\xbc\x70\xea\xa3\xc9\x1a\xc1\x7a\xf2\x71\x81\x20\xc8\xc2\xaf\x44\x0a\x18\xf4\x7b\x00\x90\xff\x64\xf8\x40\xe0\xe3\xdd\x1a\x4d\xcc\x5b\xf5\x7c\xf6\xe7\xd7\x13\xff\x0e\x3e\xa1\x3b\xd7\xbc\x8d\x48\x4c\x0f\x30\xf7\xd6\x95\x90\xb7\x5c\x83\x77\xb3\x58\x54\x6f\xa6\x57\x68\xfa\x09\x06\x46\xf6\x03\x9c\xc1\xc4\xbb\xc8\x57\xbe\x87\xbf\xbc\x7d\x3b\xec\xf7\x86\xe7\xfd\x5e\xbf\x37\x1a\x41\xc6\x24\x8d\x41\xee\x09\x7c\x22\x8f\x5f\x70\x9c\x91\x95\xe4\x29\x01\xca\x24\x49\xb7\x38\x24\x20\xb2\x24\xe1\xa9\x14\x90\x60\x21\x28\xdb\x69\x61\x63\x33\x08\x92\xe0\x14\x4b\x12\x3f\xba\xc0\x53\x0b\x50\x48\x9e\xfe\x13\x70\x28\x33\x1c\xc7\x8f\x15\x46\xb8\xc7\x6c\x57\x80\x68\x93\xa8\x24\xa9\x7a\x9d\xe2\x50\xfd\x97\x90\x34\x07\x77\x41\xee\xa9\xd0\x98\x51\x76\x38\x3c\x42\xca\xef\x41\xec\x79\x16\x47\x20\xb2\xed\x96\x86\x04\xb6\x3c\x05\xf2\x8d\xa4\x8f\x72\x4f\xd9\xee\xa4\xdf\x9b\x7b\x2b\xe4\xaf\x95\x83\x96\x95\x9b\x2b\x07\xbb\x46\xe7\x10\xbe\x4c\x16\x37\x68\x05\x03\xc7\x79\xf7\x4e\x3b\xdd\x05\x2c\x42\x4a\x07\xce\xa9\x33\x34\xce\xe9\xf7\x6a\x41\x4b\xb0\xdc\x47\x58\xe2\x7a\xd4\x9a\x11\x3b\x0e\x86\x8f\x66\xc8\x47\xde\x14\xad\xda\x0c\x1a\xe6\x71\xdd\x66\x71\xac\x34\x3c\x8f\x97\x07\xb7\x5c\xf0\xfe\x03\x38\x4e\x01\x73\x20\x12\x6b\x23\x3b\x60\x5c\xb5\xad\x06\xb3\x0a\x73\xdc\xd2\x88\x92\x1f\xb9\x03\xbe\xcc\xd1\x6d\xb9\xff\x4d\x92\x12\x29\x1f\x61\xb2\x32\x48\x2b\xb4\x40\xd3\x35\x10\x16\xf2\x88\x94\x50\x0e\x11\x21\x4e\x88\x33\x84\x49\xb1\x6f\xb7\x32\x07\xa0\x90\x2f\x54\x36\x56\x94\xaf\xdb\xd6\x14\x9b\x6c\xac\x29\x5e\x17\x4b\x66\xfe\xf2\xba\xb4\x3a\x8f\xe8\x68\x04\x3b\xfa\x8d\x30\xc0\xfa\x0b\x60\x01\x07\xba\xdb\x4b\x08\x14\x97\x32\x16\x01\x65\x9a\x9a\x65\xb4\x25\x0e\x62\xe2\x82\x4c\x33\x16\x62\x49\x80\x4a\xc0\x5b\x45\x54\x25\xc5\xc8\x83\xb4\x58\x2c\x39\x04\x44\x2b\x31\x58\x58\x02\x4f\x73\x71\x47\xff\x49\xb8\x70\x5c\xa0\x5b\xc0\xec\xf1\x44\x49\x6a\x69\xf4\x80\x0f\x49\x4c\xc4\xbb\xf2\x8d\x7a\x0a\x95\x1b\xbd\xd2\x66\xaa\xf5\x54\xa4\x75\xe1\xcd\x10\x60\xf4\x01\xa0\x94\xec\x84\xda\x72\x7e\x8c\xd6\x0a\x65\x49\x3e\x85\x76\x7a\x04\xd7\x85\x76\xfa\x22\xb8\x00\xa7\xa7\x01\xfe\x77\xdb\xe1\x74\xe1\xaf\x3f\x16\xee\xad\x0d\xa7\x24\xff\x7b\xc8\xbf\xfd\x78\xc8\xbf\x37\x21\x2d\xc9\x27\x51\x8d\xf0\x0f\x73\xe5\x93\x70\x35\x57\xd6\xf0\xca\x5c\x32\xbb\xf1\xa6\xeb\xf9\xd2\x6b\x82\x07\x55\xf6\x73\xab\x2a\x87\x2e\x91\xef\x42\x71\x74\x8a\x37\x43\xf0\xd1\xfa\xc6\xf7\x56\x46\x5e\x1d\xfe\x57\xaf\xfa\xbd\x0b\x34\x5d\x4c\x7c\x64\xce\xbf\xaa\x10\xe6\xf3\xb9\x55\x39\x2d\x90\xf3\x7e\xef\x23\xba\x9c\x7b\x96\xf8\xbb\x31\x88\x2c\x10\x32\xa5\x6c\x97\x1b\xa4\x93\x48\xa1\x7f\xd8\x84\x7a\x37\x86\x84\x0b\x2a\x29\x67\x03\x41\xe4\x26\x78\x94\x64\xe0\x40\xe5\x9c\xb3\xb2\xe0\xcc\x3d\xad\xa3\x80\x98\xcf\x2a\x14\x55\xa1\xd7\x57\xc8\xb3\x6b\x86\xda\x5e\xbb\x31\x6f\x60\xb6\xf4\x61\x50\xfa\xe4\x75\x05\x34\x82\x37\xc3\x42\x01\xf2\x2e\x60\x3e\xcb\x7f\xe4\x78\x1a\xe5\xbc\xdf\x43\xde\xc5\x79\xbf\xf7\xea\x15\x2c\x26\xde\xe5\xcd\xe4\x12\x81\x93\xc4\xc9\x4e\xfc\x2b\x76\x60\x7e\x7d\x7d\x63\x0a\xde\x6a\xed\xcf\xa7\xeb\x7a\x29\x2c\xa3\xa7\x76\x8a\x37\x94\x85\x29\x39\x10\x26\x07\x81\xf1\x75\x47\x64\x2c\x47\xdf\x5e\xcd\x55\x07\x64\xca\x56\xee\x27\xdd\x9f\xec\x0a\xff\x05\x2e\xf0\x50\x12\xb9\x89\x09\xdb\xc9\xfd\x20\x18\xea\x8d\xc1\x58\xb5\x2e\xb0\x58\x2e\x3f\x57\x8e\x0a\x1a\x31\xb3\x5d\xd4\x06\x62\x39\x47\x01\x55\xc1\x08\x60\x6c\xd9\xd3\x1a\x0d\x55\x3f\x9f\x70\xae\x78\xda\x7e\xf7\xf9\x0d\xbe\x36\x06\xfe\x81\xe8\x8c\x46\x70\xf9\x87\xca\xda\x3d\x55\xd2\x86\x41\x44\x95\x29\x9c\x24\x84\x45\x24\x52\x35\x4a\xee\xb1\xd4\x2b\xb4\x82\x3d\x16\xaa\x6a\x29\x6f\x8f\x48\xac\xa3\x2e\x5c\x48\x89\xcc\x52\x56\x15\xc3\x84\x0b\x41\x83\xd8\x68\x32\x08\x9b\x50\xb5\x6c\x1b\x65\x4b\x6e\x85\x56\x0e\x03\xf1\x95\x26\x89\xea\x05\xf9\x37\x62\x7a\x47\x85\x9f\x70\x49\x98\xa4\x38\xae\x69\x1a\x3e\x57\x2d\x43\x7e\x48\x38\x23\x4c\x5a\xa4\x74\x4e\x5b\xbb\xbb\x3c\x47\x9d\x1d\xe5\x3b\xf5\x0c\x18\xd7\xbd\x24\x84\x98\x29\x93\x03\x22\xef\x09\x61\xe0\x9c\x3a\x80\x59\xa4\x96\x01\x97\x7b\xdd\x00\x60\xa6\x6c\x54\x3b\x15\x90\xb1\x48\x55\xf9\x53\x67\xf8\x02\xb3\x9a\x65\xa1\xcd\xbc\x42\xe8\xac\x9e\x46\x5f\x82\x1b\x70\x7e\x78\x02\xba\x21\x08\xbf\xff\x0e\xc8\xf9\xed\xb7\x87\xb3\x33\x63\xfc\x0b\x7c\x51\x5b\xaf\xdd\x62\xbf\xd2\x50\x2a\xd8\x8c\xa7\x07\x1c\xe7\xb9\x80\xa7\x11\x51\xa7\xf4\x79\x07\x69\x6b\x66\x68\x36\x9b\xcd\xaa\x6d\xa8\xb9\xc5\xd8\x6f\x3e\xcf\x9e\x2e\x2f\x6d\xb8\xdd\x35\xa6\x23\x6f\x59\xfd\xed\x74\xb2\x42\x70\x7b\x85\x3c\xeb\x1c\x9b\xc6\xb5\x7e\x96\x75\xff\x5c\x24\x2c\xad\xa3\xd6\xc2\xea\x47\xa5\x17\x0b\xd0\x58\xa2\xd3\xdb\xb1\x6c\x63\xd5\x51\xde\xcd\xfb\xf5\xee\x65\x68\xb1\x42\x56\x72\x7a\xd2\xe6\xc2\x2b\x2a\x13\x75\x60\x22\xef\xe2\xf8\x8b\xd6\x61\xbc\x6b\x91\xa9\x8c\x4f\x7d\x79\x33\xb9\xbd\xa0\xec\xac\xef\x3e\x9b\x01\x6c\x83\x59\xb4\x51\x8d\xbe\x8a\xd0\xa0\x6d\x74\xea\x18\x84\x6a\xf3\x4c\x49\x92\x98\x0a\xb9\x89\x68\x4a\x42\xc9\xd3\xc7\x81\x3d\xd2\xb9\x10\xd1\xd4\xe6\x8b\x90\x38\x95\x1b\x9c\x7f\xb6\xcb\x85\x0b\x7a\x00\xd8\x48\x5e\xd0\x09\xc6\xba\x5a\x0c\xfb\xbd\x82\x56\x2b\xb4\x5e\xce\x8e\xb7\x50\x90\xec\x76\xbe\xbe\x02\x1f\x4d\x6f\xfc\xd5\xfc\x0b\xaa\x3c\x46\x59\x92\x49\x61\x6d\xb6\x78\x8e\x58\x59\x58\xdb\x2c\x63\xda\x10\x13\xa0\x42\x44\x55\xaf\xc9\x0a\x52\xcc\x76\x64\x13\xf3\x7b\xb7\x35\xd4\xdf\x05\xdd\xa4\x65\xbe\x64\x58\xd7\xb5\xa7\xbb\x7d\xbb\xb2\x1a\x1f\xcb\xc5\xaf\xe1\x8d\x5a\x5c\x1d\x65\x1d\x83\x76\x84\xe0\xc4\x50\x77\xb2\x32\x1c\xee\x92\xb2\x2e\x5b\xca\xc9\xb4\x29\xaa\x9b\x88\x62\x58\x0f\x1a\x5f\x6f\xaf\x90\x8f\xec\x3b\x9b\xf1\x11\xca\xd0\x52\x1e\x51\x21\x29\x0b\xa5\x1a\x9b\xb7\xf4\x01\x06\x45\xdf\x1b\x99\x3d\x76\x86\x76\x90\xff\x6d\xf4\xc9\x49\x74\x52\xcd\xcc\xd4\x6c\x5a\xfd\xd3\x70\x52\x67\x4a\xa8\x4d\xc5\x90\x44\x1d\x72\x66\x97\x03\x7a\x52\xb2\x04\xe6\x2b\x13\xf0\xa5\x0f\x96\x11\xf0\x01\x2c\xa1\xee\x4c\xa4\x5a\xbc\x12\x4e\x11\xa1\x0b\xef\x3d\xd8\x52\xcf\x00\x96\x87\x52\x71\xf3\xc8\xb2\x71\x79\x68\x9f\x86\x49\xa2\x9c\x16\x30\x06\x7a\xd2\xce\x89\xfc\x59\xfa\x17\xc8\x87\x8f\x77\xb6\xa2\x0e\xd1\xc5\xfc\x7a\xbe\x6e\x49\xa4\x3a\x02\xf9\xc1\xa6\xf5\x8f\x37\x9e\xca\x4a\x13\xfb\xba\x07\x7e\x2e\x46\x34\xfc\xdb\x56\x65\x93\xed\xc3\x49\x8d\xe4\xa5\x55\x7f\x32\x3b\xfe\x07\x61\x6d\x9e\xf6\x64\xfb\xe0\x76\xc4\xba\x70\x68\xd3\x5b\x7a\xe7\x47\xb7\x7e\xc3\x5a\x33\x72\xbc\xa8\xf3\xce\x2c\x89\x4e\x5a\x2f\xc6\x5a\x2c\x85\x05\x9a\xad\x61\x79\xb3\x46\x3e\xfc\x63\x39\xf7\x6c\x52\xc0\xd2\x6b\xd1\x3a\x6e\xf1\xd7\x8b\xb7\xd5\x20\xfb\x68\xa4\xef\x7b\x81\x33\xa2\x6f\xc8\xa8\x04\xf2\x40\x85\x1a\x32\x42\xcc\x1c\x3d\xcb\x24\x38\x95\xc0\xb7\xc7\x49\x95\xa7\x4a\xfe\x5e\xdf\x0d\x87\x38\x13\x04\x32\x01\x92\x83\x1a\x31\xf4\x78\x01\x38\x8e\x4b\x3d\x22\x0b\x42\xce\xd4\x98\x21\x14\x9a\x1e\x8c\x0c\xd0\x3d\x71\x52\x02\x31\xe7\x5f\x55\xdb\xbb\xe5\xe9\xd0\x05\xc1\xe1\x5e\xcd\x2c\xe1\x57\xa5\x83\x33\xd8\x93\x94\xd4\xc3\x61\x9f\x40\xcb\xe1\x47\x47\xab\xe2\x42\xcb\x71\x1a\xdb\x89\x34\x77\x66\xc9\xcb\x86\x93\x0d\x09\x8b\xb6\xa3\xb5\xa3\x5a\xe9\x76\xea\x05\x6d\xcf\x26\x25\xdf\x48\x2a\xc8\xaf\xf6\xc7\x7e\x7e\xb5\x3f\xbf\xda\x9f\x17\xb5\x3f\xe3\x9f\xb6\xff\x79\xff\x27\xf5\x3f\x70\x81\x56\xd3\xff\xa7\x26\xe8\x47\xf3\xa2\x1e\xfe\xa3\xd2\xf9\x53\xc6\xee\x57\xa7\xf3\x1d\xdb\x3a\x2a\xe3\xb6\xdb\xbf\xa7\x96\xff\x27\x00\x00\xff\xff\xbd\xce\x79\x7b\x47\x20\x00\x00")

func _2018092201_initialTablesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2018092201_initialTablesUpSql,
		"2018092201_initial-tables.up.sql",
	)
}

func _2018092201_initialTablesUpSql() (*asset, error) {
	bytes, err := _2018092201_initialTablesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2018092201_initial-tables.up.sql", size: 8263, mode: os.FileMode(438), modTime: time.Unix(1551691696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2019111301_fix_seq_scans_in_listDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x6f\xab\x46\x14\xdd\x47\xca\x7f\x38\x8b\x48\xb6\x55\x3f\x4b\x6f\xfb\x5e\x5d\x89\x38\xe3\x84\x8a\x07\x15\xe0\x46\x6f\x85\xc6\x30\xd8\x23\xe3\x19\x0a\x97\xda\xf9\xf7\xd5\x18\x8c\x31\x36\xfd\xd8\xb4\x9d\x4d\x80\x7b\xee\xb9\x5f\xe7\x4e\xbc\xf0\x99\x15\x32\x78\x3e\x7c\xf6\x8b\x63\x2d\x18\x96\x2b\x77\x11\xda\x9e\x8b\x4c\x96\x14\x25\xb2\x10\x31\xe9\xe2\x63\xbc\xae\xe2\x9d\x20\x3c\x7f\x0f\x99\x35\x45\x22\x8b\x9c\xd3\xf6\xfc\x5a\x12\x2f\x28\xe2\x8d\x19\x73\x8c\x46\x5f\xbe\x34\xb6\x4c\xee\x25\x45\xa4\x61\xbb\x21\x7b\x65\x3e\xe6\x70\x57\x8e\x33\x79\x7c\xf0\x59\xb8\xf2\xdd\x00\x01\x0b\xbd\x25\x0c\x5f\xc4\x55\x12\xed\x05\x71\x58\x01\x9e\x9e\x1e\x1f\x00\xe0\xdd\x0e\xdf\xe0\xb3\xc5\xca\x0f\xec\x5f\x59\xfd\xcd\x1c\xa9\xf2\x8a\x4a\x83\x1c\x5f\x3e\x9a\x13\x30\x87\x2d\x42\x2c\xac\x80\xe1\xfd\x8d\xb9\x6d\xb6\x9d\xbc\x10\x1a\x83\x49\x04\xcc\x09\x58\x0b\x61\xee\x8b\x61\x2c\xb8\xda\x88\x28\xd3\x87\xe9\x35\x75\x73\xfe\x11\xf5\xfa\x83\x04\x8f\xa4\x8a\x0b\xb1\x17\x8a\xc6\x8d\xcb\xe4\x3a\xd6\x56\x6e\xb6\xf7\x83\xe9\x98\x04\x45\x99\x50\x1b\xda\x5e\x9c\x7f\xc0\x67\xe3\x1c\xeb\x7d\xae\x95\x50\x14\x9d\x66\x70\x9f\x61\x3d\x4b\x44\x26\xf7\x06\x7f\x7a\x18\x42\xd5\x33\x56\x7c\x2f\x0c\xb4\x7e\xeb\x43\x97\xbe\xf7\xad\x31\x95\x58\xf7\xac\xef\x6f\xcc\x67\xe8\xd0\xcc\x6f\x58\x26\x9d\xe0\x89\x2c\x49\xaa\x98\xa2\xbc\x10\xa9\x3c\x62\x4c\x45\xa5\x62\x4e\x22\xa9\x6b\x1c\x1c\xed\xb8\xf9\x7b\xc6\x47\x3c\x25\x51\x8c\xf3\x64\x96\x56\x59\x66\x9c\xa7\x90\x75\xd1\xe6\xa1\xd7\xa4\xc9\xdd\xf2\xcf\xb5\x19\xef\x84\x13\x47\x9e\x0c\xe0\xea\x2a\xc7\x72\xd6\xaa\x04\x76\x50\x0f\xdc\xf3\xd1\x49\x02\x3f\xa1\x03\x1a\x0c\x0b\xcb\x7d\xb9\xd0\x19\x21\x0c\xf1\xfd\x88\x2e\xea\x2f\x08\xdb\xa5\x34\xda\xbc\xc9\x6c\xde\x2e\xed\x9f\xd3\xe4\x49\x23\x0b\xcc\x21\x67\xf7\x35\xd1\x1c\xcf\x7f\x61\x3e\x9e\xbf\x77\x03\x0d\x40\x1d\xfb\x9b\x1d\xe2\xf3\x4d\xe8\xd3\x04\x9a\xc5\x96\xd7\xc6\x95\x6b\x6e\x25\xcb\x71\xfe\xb7\x8a\xe8\xf5\xf7\x12\xe3\xb2\xfb\x79\x7a\x9c\x5d\x89\xbc\xcd\xea\x5f\x56\xc7\x7f\x30\xd6\xfe\xb6\xe7\xe9\x71\x3a\x30\xeb\x73\x43\xfb\xdd\x3a\x55\xee\x85\xa7\xea\x3b\x57\x4a\xfd\xd8\x28\xe0\xd6\xc9\x0a\xd0\x8a\xe0\x2a\x4e\x9e\xcc\xcc\x3f\x1b\x33\xdb\xf3\xf7\xa1\x4c\xe1\xb0\x65\x08\x6f\x15\x32\x1f\x3f\x7b\xb6\xdb\x15\x05\x3c\xf7\x4e\xd4\xf9\x9d\x7e\xfd\xed\xb2\x7a\x62\xff\xf4\x09\xb4\x95\x25\xb4\x12\x53\xc8\x14\x92\x20\x8e\xb2\xa4\x72\x8a\x98\xab\x11\x61\x2d\x90\xf3\x82\xa0\xd3\xdb\x4b\x55\x17\x06\x7f\xd0\x55\x96\x20\xe6\x55\x29\x50\x95\x20\x8d\x72\x27\x73\xe8\xdf\x45\x01\x9e\x65\x6d\x9c\xb2\x5a\xc7\x5a\x91\x50\x54\x1a\x36\xda\x0a\x34\x44\x07\x31\x2a\x04\x32\xad\x77\x52\x6d\x90\xea\x62\x32\x45\xa9\x71\x10\x20\x1e\xef\x4c\x0c\xad\xb0\x15\x85\xb8\x1e\x47\x77\x03\x3b\x0d\xbf\x59\xad\x8b\x16\xee\xac\xd3\xbc\x7b\x91\x36\xcd\x6c\x75\xd9\x6b\x72\x2d\xc2\xf3\xcf\x8e\xaf\x8f\x0f\x4f\x4f\x70\x2c\xf7\x75\x65\xbd\x32\x8c\xca\xdf\xb2\x11\x82\xd0\x7a\x76\xd8\xd7\xc7\x87\x3f\x02\x00\x00\xff\xff\x12\xca\xff\x59\x00\x09\x00\x00")

func _2019111301_fix_seq_scans_in_listDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2019111301_fix_seq_scans_in_listDownSql,
		"2019111301_fix_seq_scans_in_list.down.sql",
	)
}

func _2019111301_fix_seq_scans_in_listDownSql() (*asset, error) {
	bytes, err := _2019111301_fix_seq_scans_in_listDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2019111301_fix_seq_scans_in_list.down.sql", size: 2304, mode: os.FileMode(438), modTime: time.Unix(1573760954, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2019111301_fix_seq_scans_in_listUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x51\x6f\xa3\x46\x10\x7e\x8f\x94\xff\xf0\x3d\x44\xb2\xad\x72\x96\xee\xf5\xae\xae\x44\x9c\x4d\x42\xc5\x41\x05\xb8\xd1\x3d\xa1\x35\x2c\xf1\x2a\x78\x97\xc2\xd0\xf8\xfe\x7d\xb5\x06\x63\xc0\xa6\xd7\xbe\xb4\x3a\x9e\x60\xe7\x9b\x6f\x66\x67\xbe\x19\x7b\x1d\x30\x3b\x62\xf0\x03\x04\xec\x37\xd7\x5e\x33\x3c\x6e\xbc\x75\xe4\xf8\x1e\x72\x59\x51\x9c\xca\x52\x24\xa4\xcb\x6f\xf3\x6d\x9d\xbc\x09\xc2\xfd\xd7\x88\xd9\x16\x52\x59\x16\x9c\x76\xa7\xcf\x8a\x78\x49\x31\x6f\xcd\x58\x61\x36\xfb\xf4\xa9\xb5\xe5\x72\x2f\x29\x26\x0d\xc7\x8b\xd8\x13\x0b\xb0\x82\xb7\x71\xdd\xc5\xed\x4d\xc0\xa2\x4d\xe0\x85\x08\x59\xe4\x3f\xc2\xf0\xc5\x5c\xa5\xf1\x5e\x10\x87\x1d\xe2\xee\xee\xf6\x06\x00\x5e\x9c\xe8\x19\x01\x5b\x6f\x82\xd0\xf9\x9d\x35\x67\xe6\x91\xaa\xa8\xa9\x32\xc8\xf9\xf9\xd0\x3c\x21\x73\xd9\x3a\xc2\xda\x0e\x19\x5e\x9e\x99\xd7\x65\xdb\xcb\x0b\x91\x31\x98\x44\xc0\xdc\x90\x75\x10\xe6\x3d\x18\xc6\x92\xab\x57\x11\xe7\xfa\xdd\x1a\x52\xb7\xcf\xbf\xa2\xde\x7e\x23\xc1\x63\xa9\x92\x52\xec\x85\xa2\x79\xeb\xb2\x18\xc6\xda\xc9\xd7\xdd\xf5\x60\x3a\x21\x41\x71\x2e\xd4\x2b\xed\xce\xce\x3f\xe1\xa3\x71\x4e\xf4\xbe\xd0\x4a\x28\x8a\x8f\x3d\xb8\xce\xb0\x5d\xa6\x22\x97\x7b\x83\x3f\xbe\x4c\xa1\x9a\x1e\x2b\xbe\x17\x06\xda\x7c\x8d\xa1\x8f\x81\xff\xa5\x35\x55\xd8\x8e\xac\x2f\xcf\x2c\x60\xe8\xd1\xac\x2e\x58\x16\xbd\xe0\xa9\xac\x48\xaa\x84\xe2\xa2\x14\x99\x3c\xa0\x15\x99\x05\x2a\x6b\x95\x70\x12\x69\x73\xd7\xc9\x16\xcb\x36\xe5\xeb\x17\x9a\xb7\xa8\x13\x5b\xcc\x33\x12\xe5\xbc\x48\x97\x59\x9d\xe7\x86\xda\x82\x6c\x4a\x63\x5e\x46\xa5\x5c\x5c\xe5\x3c\x55\xc0\x78\xa7\x9c\x38\x8a\x74\x02\xd7\xd4\x62\x2e\x97\x9d\x96\xe0\x84\x8d\x2c\xfc\x00\xbd\x24\xf0\x0b\x7a\xa0\xc9\xb0\xb0\xbd\x87\x33\x9d\x91\xcb\x14\xdf\xcf\xe8\xa3\xbe\x43\xd8\x8d\xae\x51\xf0\x45\x66\xab\x6e\xb4\xff\x9e\xa6\x48\xdb\x4e\x60\xd5\x35\x65\xc2\xc1\x0f\x1e\x58\x80\xfb\xaf\xfd\x40\x13\x50\xd7\xf9\xe2\x44\xf8\x78\x11\xfa\xd8\x81\x76\xfc\xe5\xd0\xb8\xf1\xcc\xee\xb2\x5d\xf7\x07\xd5\xcb\xa8\xfa\xe7\x18\xe7\xfd\x51\x64\x87\xe5\x60\x40\xba\xac\xfe\x63\xed\xfc\x0f\x4d\x1f\x6f\x8c\x22\x3b\x58\x13\x4a\x38\x15\x74\x5c\xad\xe3\xcd\xfd\xe8\x78\xfb\xde\x5a\x6a\x5e\x5b\x05\x5c\x3a\xd9\x21\x3a\x11\x0c\xe2\x14\xe9\xd2\xfc\x60\x99\xde\x9e\xce\xa7\x32\x85\xcb\x1e\x23\xf8\x9b\x88\x05\xf8\xd5\x77\xbc\xbe\x28\xe0\x7b\x57\xa2\xae\x06\xbd\x19\xd7\xdc\xe0\x07\x55\xff\xc7\x37\x1e\x4d\xc9\x87\x0f\xa0\x9d\xac\xa0\x95\xb0\x20\x33\x48\x82\x38\xc8\x8a\x2a\x0b\x09\x57\x33\xc2\x56\xa0\xe0\x25\x41\x67\x97\x3b\x5b\x97\x06\xff\xae\xeb\x3c\x45\xc2\xeb\x4a\xa0\xae\x40\x1a\xd5\x9b\x2c\xa0\xff\x14\x25\x78\x9e\x77\x71\xaa\x7a\x9b\x68\x45\x42\x51\x65\xd8\x68\x27\xd0\x12\xbd\x8b\x59\x29\x90\x6b\xfd\x26\xd5\x2b\x32\x5d\x2e\x2c\x54\x1a\xef\x02\xc4\x93\x37\x13\x43\x2b\xec\x44\x29\x86\x9d\xea\x0f\x67\xaf\x17\x17\x53\x77\x96\xc9\x95\x49\x5b\xf5\x37\xf0\xf7\xb4\xdd\x69\x79\x24\xe4\x46\xb8\xa7\xbf\x3b\x9f\x6f\x6f\xee\xee\xe0\xda\xde\xd3\xc6\x7e\x62\x98\x55\x7f\xe4\x33\x84\x91\x7d\xef\xb2\xcf\xb7\x37\x7f\x05\x00\x00\xff\xff\x10\x17\xfa\xc2\x78\x09\x00\x00")

func _2019111301_fix_seq_scans_in_listUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2019111301_fix_seq_scans_in_listUpSql,
		"2019111301_fix_seq_scans_in_list.up.sql",
	)
}

func _2019111301_fix_seq_scans_in_listUpSql() (*asset, error) {
	bytes, err := _2019111301_fix_seq_scans_in_listUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2019111301_fix_seq_scans_in_list.up.sql", size: 2424, mode: os.FileMode(438), modTime: time.Unix(1573760954, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2020011301_drop_not_nullDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\x31\x0b\x83\x30\x14\x04\xe0\x5d\xf0\x3f\x1c\x4e\xf5\x37\x38\x96\x67\x29\x05\x0b\xe9\xd4\x49\x9e\xc9\x93\x16\x63\x22\xf1\x65\xe8\xbf\xef\x10\xbb\x75\xbd\x8f\xbb\x63\xaf\x92\xa0\x3c\x79\xc1\xc6\xfa\x72\xac\x8c\x12\xda\xe8\xf3\x1a\x30\x65\xbb\x88\xc2\xa5\xb8\xc1\xc9\xcc\xd9\x6b\x57\x57\xff\x7b\xce\xc1\xc6\xb0\x6b\xe2\x77\x50\x34\x3f\x18\xcb\xc6\x38\x2f\xf2\x69\xd0\xdf\x0d\x5d\x2f\x03\x6e\xf4\xc4\xa9\x48\x0b\x43\x3d\x19\x1a\xce\xf4\x38\x0e\xf7\x83\x02\xaf\xd2\x76\x75\xf5\x0d\x00\x00\xff\xff\x1a\xf6\xb1\xae\xa9\x00\x00\x00")

func _2020011301_drop_not_nullDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2020011301_drop_not_nullDownSql,
		"2020011301_drop_not_null.down.sql",
	)
}

func _2020011301_drop_not_nullDownSql() (*asset, error) {
	bytes, err := _2020011301_drop_not_nullDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2020011301_drop_not_null.down.sql", size: 169, mode: os.FileMode(438), modTime: time.Unix(1579197724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2020011301_drop_not_nullUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8c\x31\x0a\x03\x21\x14\x05\xfb\x85\xbd\xc3\xeb\x3c\x84\x87\x91\xaf\x7e\x49\xf0\x47\x45\x9f\x45\x6e\x9f\x42\x48\xb5\xed\x0c\x33\x62\xd4\x09\x4a\x34\xc5\x10\xbe\xb2\x50\x70\x60\xea\xb6\x3f\x0d\x71\xa7\xaa\xc4\x52\x22\x6b\x91\x6d\x84\x73\xfe\xbe\x1e\xcb\x3c\xfb\x40\xea\x6d\x71\xca\xbb\xf1\x2f\xc2\xb9\x84\x52\xf5\xeb\xef\xeb\x17\x00\x00\xff\xff\xf9\x6e\xfb\xb2\x76\x00\x00\x00")

func _2020011301_drop_not_nullUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2020011301_drop_not_nullUpSql,
		"2020011301_drop_not_null.up.sql",
	)
}

func _2020011301_drop_not_nullUpSql() (*asset, error) {
	bytes, err := _2020011301_drop_not_nullUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2020011301_drop_not_null.up.sql", size: 118, mode: os.FileMode(438), modTime: time.Unix(1579196225, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2020011601_kvimplementation_switchoverDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x6d\x6f\xdb\x38\x12\xfe\x6e\xc0\xff\x61\x3e\x14\x90\x8d\xca\x49\x7a\xb8\x02\x77\x49\x5d\xc0\x75\xe8\xc4\x57\x47\x2e\x64\xa7\x41\x80\x05\x0c\x4a\xa2\x6d\x5e\x65\x52\x27\x52\x4d\x7c\xd8\x1f\x7f\x20\xf5\x46\xbd\xd8\x71\x7b\xdd\xbd\xe2\x76\xf5\xa5\xa9\x3c\x7c\x38\x7c\x66\x38\xf3\x8c\xc6\x2e\x1a\x2d\x11\x2c\x47\x1f\x66\x08\xbc\xc4\xff\x42\xa4\x80\x5e\xb7\x03\x87\x9e\xd4\x86\xe1\x1d\x81\x0f\x8f\x4b\x34\x3a\x62\xaa\x9e\x4f\xee\xf4\x6e\xe4\x3e\xc2\x47\xf4\x68\x1f\x31\x0d\x48\x48\x77\x30\x75\x96\x2f\xc0\x39\xf3\x25\x38\xf7\xb3\xd9\x0b\x66\xe3\x5b\x34\xfe\x08\xbd\x14\xf5\x3d\x5c\xc0\xc8\xb9\xce\xf6\x78\x07\x7f\x79\xfb\xb6\xdf\xed\xf4\xaf\xba\x9d\x6e\x67\x30\x80\x84\x49\x1a\x82\xdc\x12\xf8\x48\xf6\x9f\x71\x98\x90\x85\xe4\x31\x01\xca\x24\x89\xd7\xd8\x27\x20\x92\x28\xe2\xb1\x14\x10\x61\x21\x28\xdb\x68\xe3\x94\x07\x10\x24\xc2\x31\x96\x24\xdc\xdb\xc0\x63\x03\x50\x48\x1e\xff\x13\xb0\x2f\x13\x1c\x86\xfb\x12\xc3\xdf\x62\xb6\xc9\x41\xb4\x4b\x54\x92\x58\xbd\x8e\xb1\xaf\xfe\x8a\x48\x9c\x81\xdb\x20\xb7\x54\x68\xcc\x20\xd9\xed\xf6\x10\xf3\x27\x10\x5b\x9e\x84\x01\x88\x64\xbd\xa6\x3e\x81\x35\x8f\x81\x7c\x25\xf1\x5e\x6e\x29\xdb\x9c\x75\x3b\x53\x67\x81\xdc\xa5\xa2\x72\x5e\xc6\xb3\x0c\x9a\x9d\xee\xd9\x87\xcf\xa3\xd9\x3d\x5a\x40\xcf\xb2\x2e\x2f\x75\x20\x6d\xc0\xc2\xa7\xb4\x67\x9d\x5b\xfd\x94\x9c\x6e\xa7\x92\x1d\x11\x96\xdb\x00\x4b\x7c\x34\x3d\x72\x5e\x4e\xc9\x8d\x53\xa3\x09\x2e\x9a\x20\x17\x39\x63\xb4\x68\x3b\x52\xff\x58\x62\xc1\x3a\x09\x43\xe5\xf9\x8f\xf5\x28\x4b\xb0\x02\xfc\xdd\x7b\xb0\xac\xe3\x8e\xec\x88\xc4\x9a\xbe\x6f\x72\xc4\x56\x61\x38\x6c\x66\x5c\xaf\x9c\x12\xbb\x38\x72\x91\xe5\x59\x18\x3f\x4f\xd1\x43\x11\xc5\x55\x14\x13\x29\xf7\x30\x5a\x74\x3b\x0b\x34\x43\xe3\x25\x10\xe6\xf3\x80\x14\x30\x16\x11\x3e\x8e\x88\xd5\x87\x51\xce\x7b\x79\xc0\xcc\x36\xdf\xaa\x66\x5d\xbc\xae\xdb\xe7\x24\xd4\xec\xf3\xd7\xdd\xce\xc4\x9d\xdf\x15\x3e\x66\x59\x38\x18\xc0\x86\x7e\x25\x0c\xb0\xfe\x05\xb0\x80\x1d\xdd\x6c\x25\x78\x2a\xff\x13\x16\x00\x65\xfa\x3a\x15\x19\x2a\xb1\x17\x12\x1b\x64\x9c\x30\x1f\x4b\x02\x54\x02\x5e\xab\xcb\xa5\xac\x18\x79\x96\xc6\xcd\x93\x1c\x3c\xa2\x37\x49\xb1\xb0\x04\x1e\x67\xe6\x96\xfe\x27\xe2\xc2\xb2\x81\xae\x01\xb3\xfd\x99\xb2\xd4\xd6\xe8\x19\xef\xa2\x90\x88\xcb\xe2\x8d\x7a\xf2\x2d\x57\x7a\xa5\x79\xbb\x8c\xa7\xbc\x68\x36\xbc\xe9\x03\x0c\xde\x03\x14\x96\x07\xa1\xd6\x9c\x37\xd1\x5a\xa1\x0c\xcb\x63\x68\xe7\x0d\xb8\x43\x68\xe7\x27\xc1\x79\x38\x3e\xf7\xf0\xbf\xdb\x0a\x8a\x0d\x7f\xfd\xb1\x70\x6f\x4d\x38\x65\xf9\xdf\x43\xfe\xed\xc7\x43\xfe\xbd\x0e\x69\x58\x1e\x45\x4d\x8d\x7f\x18\x95\x47\xe1\x2a\x54\x56\xf0\x8a\xca\x31\xb9\x77\xc6\xcb\xe9\xdc\xa9\x83\x7b\x65\x65\xb5\xcb\x1e\x8e\x6e\x90\x6b\x43\x7e\x75\xf2\x37\x7d\x70\xd1\xf2\xde\x75\x16\xa9\xbd\xba\xf6\xaf\x5e\x75\x3b\xd7\x68\x3c\x1b\xb9\x28\x2d\x14\xaa\xab\xa5\x3f\x5f\xa5\x2f\x34\xa6\x01\x72\xd5\xed\x7c\x40\x37\x53\xc7\x30\xbf\x1c\x82\x48\x3c\x21\x63\xca\x36\x99\x43\xba\x88\xe4\xfb\xf7\xeb\x50\x97\x43\x88\xb8\xa0\x92\x72\xd6\x13\x44\xae\xbc\xbd\x24\x3d\x0b\x4a\x72\x2e\x8a\x26\x39\x75\xf4\x1e\x39\xc4\x74\x52\xa2\x28\x55\xb1\xbc\x45\x4e\x59\x9d\xd3\xe3\xb5\x3b\xf3\x06\x26\x73\x17\x7a\x05\x27\xaf\x4b\xa0\x01\xbc\xe9\xe7\x1b\x20\xe7\x1a\xa6\x93\xec\x3f\x19\x9e\x46\xb9\xea\x76\x90\x73\x7d\xd5\xed\xbc\x7a\x05\xb3\x91\x73\x73\x3f\xba\x41\x60\x45\x61\xb4\x11\xff\x0a\x2d\x98\xde\xdd\xdd\xa7\x4d\x7a\xb1\x74\xa7\xe3\x65\xb5\x7d\x17\xd1\x53\x27\xc5\x2b\xca\xfc\x98\xec\x08\x93\x3d\x2f\xe5\xfa\x40\x64\x0c\xa2\x1f\x6e\xa7\x4a\x1e\xa6\x6d\x2e\xe3\x49\x6b\xaa\x4d\xce\x9f\x67\x03\xf7\x25\x91\xab\x90\xb0\x8d\xdc\xf6\xbc\xbe\x3e\x18\x0c\x95\xdc\x82\xd9\x7c\xfe\xa9\xda\xc6\xbc\x5a\xdc\x4c\x9a\xda\x80\xae\xca\xe5\x8a\x24\x05\x58\x06\xc5\x83\xa1\xe1\x57\x6b\x54\x54\x2f\x3d\x42\xb2\x38\x7e\x0e\xfb\xe5\x83\xbe\x4e\x9d\xfc\x8e\x28\x0d\x06\x70\xf3\x5d\xed\xed\x89\x2a\xeb\x34\x93\x88\x6a\x57\x38\x8a\x08\x0b\x48\xa0\x7a\x95\xdc\x62\xa9\x57\xe8\x0d\xb6\x58\xa8\xee\xa5\x18\x1f\x90\x50\x47\x5f\xd8\x10\x13\x99\xc4\xac\x6c\x8a\x11\x17\x82\x7a\x61\xba\x53\x8a\xb0\xf2\x95\xdc\x5c\x29\x5f\x32\x2f\xf4\xe6\xd0\x13\x5f\x68\x14\x29\x1d\xcb\xbf\x92\x54\xf7\x2a\xfc\x88\x4b\xc2\x24\xc5\x61\x65\xa7\xfe\x4b\x5d\xd3\xe7\xbb\x88\x33\xc2\xa4\x91\x9c\xd6\x79\xab\x32\xcd\x6a\xd5\x45\xa3\xee\xa9\xa7\xc7\xb8\xd6\xc1\xe0\x63\xa6\x5c\xf6\x88\x7c\x22\x84\x81\x75\x6e\x01\x66\x81\x5a\x06\x5c\x6e\xb5\x10\xc0\x4c\xf9\xa8\x4e\x2a\x20\x61\x81\xea\xf6\xe7\x56\xff\x04\xb7\xea\xed\xa1\xcd\xbd\xdc\xe8\xa2\x5a\x4e\x4f\xc1\xf5\x38\xdf\x1d\x81\xae\x19\xc2\xaf\xbf\x02\xb2\x7e\xf9\xe5\xf9\xe2\x22\x75\xfe\x04\x2e\x2a\xeb\x35\x2d\xe6\x2b\x0d\xa5\x82\xcd\x78\xbc\xc3\x61\x56\x13\x78\x1c\x10\x75\x53\x5f\x26\x48\x7b\x33\x41\x93\xc9\x64\x52\x1e\x43\xcd\x5c\xa9\xff\xe9\xcf\x93\xe3\x6d\xa6\x0d\xf7\x70\xaf\x39\x50\xbf\x32\x55\x3b\x1e\x2d\x10\x3c\xdc\x22\xc7\xb8\xc3\xa9\x64\xad\xde\x63\xad\x98\xf3\xa2\xa5\xf1\x9b\xc2\x5b\x95\x16\x03\x30\xf5\x42\x97\xb8\x97\xf4\xbc\x5e\xd9\xa8\xbf\x99\x4a\x3f\xbc\x0c\xcd\x16\xc8\x28\x4e\x47\xfd\xce\x59\x51\x95\xa8\x52\x2d\xab\x1b\x68\xc8\x94\x4c\x23\x77\x8a\x70\x98\x96\xcd\x5a\x76\x42\xb7\x59\x3e\x7e\x4a\x67\xc5\x15\x66\xc1\x4a\x29\x7b\x15\x90\xa3\x33\x63\xf6\x54\x47\xb5\xa3\xc3\x54\xf6\x7c\xd3\x4c\x55\x99\x85\xe6\x2e\xb8\xe8\xd3\x6c\x34\x36\xb2\x2e\xa4\x42\xae\x02\x1a\x13\x5f\xf2\x78\xdf\x33\x27\x59\x1b\x02\x1a\x9b\x09\x28\x24\x8e\xe5\x0a\x67\x3f\x9b\xfd\xc7\x06\x3d\x59\xac\x24\xcf\xf3\x13\x86\xba\xfd\xf4\xcd\x8e\xb3\x80\x05\x5a\xce\x27\x4d\xa2\x54\xe6\x3e\x4c\x97\xb7\xe0\xa2\xf1\xbd\xbb\x98\x7e\xce\xa4\x11\x65\x51\x22\x45\x8d\xca\x46\x8a\xe7\x5e\xd6\xfb\xa1\x76\x20\x0d\x7d\x6e\xa2\xda\xe0\x68\x01\x31\x66\x1b\xb2\x0a\xf9\x53\x93\xef\x6f\x82\xad\xe7\x76\xb6\xa4\x5f\xdd\x67\x4b\x37\xdb\xe6\x46\x95\x84\x2e\x16\xbe\x86\x37\x6a\x61\x59\x0b\x34\xe7\xcd\xd5\xde\x59\x9a\xf7\xa3\x45\x7a\x01\xda\x2c\x8c\xaf\x56\xc5\x30\x5b\x9a\x69\xed\x91\x7f\x59\xf0\xca\xf7\x0f\xb7\xc8\x45\xe6\x17\xaf\x61\x65\x69\x3e\xef\x07\x54\x48\xca\x7c\xa9\x46\xea\x35\x7d\x2e\x07\xf1\x5c\x2d\x07\xe9\x81\x5a\x63\x47\xcf\xea\xa3\x75\xfe\xf4\x32\x8b\x9a\xe6\x8e\x82\xb3\x72\xea\xa6\xe9\xd9\xd5\x1f\x35\x9e\x5a\xca\x4a\x65\xb6\x86\x28\x68\x5a\xa4\x07\xee\xd1\xb3\x22\x2b\x60\xba\x48\x83\x3c\x77\xc1\xd8\x19\xde\x83\x61\xd4\x5a\xc2\x94\x3c\x2c\x90\x54\xdc\x0f\x41\xbd\x03\xd3\xea\x30\x56\x71\xe5\x54\x16\x36\xfc\x19\x16\x57\xf2\x20\x42\x14\x64\x5c\xc3\xb0\xa0\xbd\x69\x3b\x77\xaf\x91\x0b\x1f\x1e\x4d\xf8\xa6\xd5\x6c\x7a\x37\x5d\x56\x0a\xad\x66\x37\xbb\xa5\xb4\x7c\x7d\xef\xa8\xd2\x32\x32\x3f\x29\xfd\xbc\x91\xaf\x31\xda\xd6\x86\xa3\xf5\xf3\x59\x25\xaf\x0b\x57\x7e\x97\x2c\xf8\x1d\x62\x58\xbf\xce\xd1\xfa\xd9\x6e\x09\x6c\xc6\x58\x9d\x0e\x7d\xbe\xca\x57\xc4\x7e\x21\x45\x9a\xc6\xad\xdf\xca\xa2\xe0\xac\xf6\x41\xac\xc5\x25\x98\xa1\xc9\x12\xe6\xf7\x4b\xe4\xc2\x3f\xe6\x53\xc7\x0c\x2f\xcc\x9d\x96\xbd\x86\x15\xbe\xeb\x64\x2a\xfb\x9c\xce\x93\x8e\x66\x24\xf6\x60\xa0\xbf\x54\x03\x67\x44\x7f\x27\xa3\x12\xc8\x33\x15\x6a\xc4\xf0\x31\xb3\xf4\x24\x13\xe1\x58\x02\x5f\x37\x8b\x25\x8f\x95\xfd\x93\xfe\xaa\xed\xe3\x44\x10\x48\x04\x48\x0e\x6a\xc0\xd0\xc3\x05\xe0\x30\xd4\x7b\x88\xc4\xf3\x39\x53\x03\x86\x50\x48\x7a\x24\x4a\x41\x9e\x88\x15\x13\x08\x39\xff\xa2\x04\xef\x9a\xc7\x7d\x1b\x04\x87\x27\x35\xad\xf8\x5f\x14\x3e\x67\xb0\x25\x31\x29\x43\x61\xde\x25\x83\xf0\xc6\x55\x29\x43\xdf\x72\x47\x86\x66\x15\x3c\x92\x9f\x45\x3e\x96\xc9\x98\x26\x5f\x2e\x15\x5a\x75\xd6\x42\x8b\xac\xab\xa6\x3c\xae\x0a\x95\x55\x4c\xbe\x92\x58\x90\x3f\x05\xcb\x9f\x82\xe5\x3b\x05\xcb\x29\x42\xe5\xe7\x96\x23\xc3\x9f\x4c\x8f\xbc\xfb\x4d\xf5\x08\x5c\xa3\xc5\xf8\x37\x11\x25\xff\x0f\x51\xae\x06\xb3\xd1\xc6\xfe\xd7\xe1\xf8\x43\xe8\x8b\x13\x45\x44\xa3\x31\x66\x54\x7e\x4b\x77\xfc\x4f\x00\x00\x00\xff\xff\x73\xe2\x5f\xc3\xc3\x20\x00\x00")

func _2020011601_kvimplementation_switchoverDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2020011601_kvimplementation_switchoverDownSql,
		"2020011601_kvimplementation_switchover.down.sql",
	)
}

func _2020011601_kvimplementation_switchoverDownSql() (*asset, error) {
	bytes, err := _2020011601_kvimplementation_switchoverDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2020011601_kvimplementation_switchover.down.sql", size: 8387, mode: os.FileMode(438), modTime: time.Unix(1579211143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2020011601_kvimplementation_switchoverUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x41\x6f\xfa\x30\x0c\xc5\xef\x95\xfa\x1d\x7c\x04\x89\xd3\xff\xca\x29\xf4\x6f\x50\xb4\x34\xa9\xd2\xb0\xad\xa7\x28\x94\xa0\xa1\x41\x41\xc1\x20\xf1\xed\xa7\x02\x2b\x14\xa6\xd1\xf5\x52\xc9\xf6\x7b\xfe\xf9\xe5\xbf\x56\x19\xbc\x72\x7c\x83\xad\xa3\x8f\xb9\x23\x67\xb7\xc1\x13\x1d\x87\x71\x74\xea\x8d\xa7\x32\x31\x5c\x49\x58\x2d\x77\x64\xe7\xcb\xe0\x4b\xda\x84\xa3\x0d\xfe\xe0\xc3\xce\xf7\x46\x85\x41\x36\x80\xf6\x8f\x4b\x83\x13\xd4\xfd\x27\x26\x7f\x14\x97\x9b\xf5\x76\x53\xf9\x8a\xec\xb2\x2a\x83\x5f\xfb\x8a\x7a\xcf\x34\xb3\x23\x79\x77\x3f\xff\x38\x46\x61\x5f\x95\x8e\xbc\x75\x0b\xf2\xe1\xce\xf5\xd1\xde\x14\x19\x9e\x02\xb3\xae\x9a\xdb\xb5\x27\x37\x8c\xa3\x44\x23\x33\x08\x86\x8d\x04\x02\x1f\x83\x54\x06\xf0\x9d\xe7\x26\xbf\x66\x7b\xf8\x07\xbd\x38\x82\x8e\xdf\x62\xbf\x5a\xd5\xd2\x73\x32\x90\x69\x9e\x32\x5d\xc0\x0b\x16\x83\xee\x26\x35\x5d\xbd\xfb\x62\x52\x53\xc9\xa9\x10\x71\x54\x5f\xc3\x84\x41\x7d\x41\xbe\x85\x3c\xd7\x13\x25\xa6\xa9\xbc\x62\xe4\x68\x20\x37\x4a\xb3\x09\x42\x26\x18\x97\x5d\x1d\x1a\x86\x9f\x1c\xb8\xcc\x51\x9b\x3a\x63\xd5\x0e\xea\x7b\xef\xa0\xd1\xf7\x21\x47\x81\x89\x81\xc7\x16\x8c\xb5\x4a\x1b\x7d\xf3\x50\x2d\xae\x76\x75\xb6\x2f\x3f\x3d\xed\x7e\xb9\x41\xa3\x64\x29\xc2\x0d\xd7\xf0\x2b\x00\x00\xff\xff\xb8\xf1\xe2\x29\x30\x03\x00\x00")

func _2020011601_kvimplementation_switchoverUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2020011601_kvimplementation_switchoverUpSql,
		"2020011601_kvimplementation_switchover.up.sql",
	)
}

func _2020011601_kvimplementation_switchoverUpSql() (*asset, error) {
	bytes, err := _2020011601_kvimplementation_switchoverUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2020011601_kvimplementation_switchover.up.sql", size: 816, mode: os.FileMode(438), modTime: time.Unix(1579211143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"2018092201_initial-tables.down.sql":              _2018092201_initialTablesDownSql,
	"2018092201_initial-tables.up.sql":                _2018092201_initialTablesUpSql,
	"2019111301_fix_seq_scans_in_list.down.sql":       _2019111301_fix_seq_scans_in_listDownSql,
	"2019111301_fix_seq_scans_in_list.up.sql":         _2019111301_fix_seq_scans_in_listUpSql,
	"2020011301_drop_not_null.down.sql":               _2020011301_drop_not_nullDownSql,
	"2020011301_drop_not_null.up.sql":                 _2020011301_drop_not_nullUpSql,
	"2020011601_kvimplementation_switchover.down.sql": _2020011601_kvimplementation_switchoverDownSql,
	"2020011601_kvimplementation_switchover.up.sql":   _2020011601_kvimplementation_switchoverUpSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"2018092201_initial-tables.down.sql":              &bintree{_2018092201_initialTablesDownSql, map[string]*bintree{}},
	"2018092201_initial-tables.up.sql":                &bintree{_2018092201_initialTablesUpSql, map[string]*bintree{}},
	"2019111301_fix_seq_scans_in_list.down.sql":       &bintree{_2019111301_fix_seq_scans_in_listDownSql, map[string]*bintree{}},
	"2019111301_fix_seq_scans_in_list.up.sql":         &bintree{_2019111301_fix_seq_scans_in_listUpSql, map[string]*bintree{}},
	"2020011301_drop_not_null.down.sql":               &bintree{_2020011301_drop_not_nullDownSql, map[string]*bintree{}},
	"2020011301_drop_not_null.up.sql":                 &bintree{_2020011301_drop_not_nullUpSql, map[string]*bintree{}},
	"2020011601_kvimplementation_switchover.down.sql": &bintree{_2020011601_kvimplementation_switchoverDownSql, map[string]*bintree{}},
	"2020011601_kvimplementation_switchover.up.sql":   &bintree{_2020011601_kvimplementation_switchoverUpSql, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
