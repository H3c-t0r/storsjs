// AUTOGENERATED BY private/apigen
// DO NOT EDIT.

package admin

import (
	"context"
	"encoding/json"
	"net/http"

	"github.com/gorilla/mux"
	"github.com/spacemonkeygo/monkit/v3"
	"github.com/zeebo/errs"
	"go.uber.org/zap"

	"storj.io/storj/private/api"
)

var ErrExampleAPI = errs.Class("admin example api")

type ExampleService interface {
	GetExamples(ctx context.Context) ([]string, api.HTTPError)
}

// ExampleHandler is an api handler that implements all Example API endpoints functionality.
type ExampleHandler struct {
	log     *zap.Logger
	mon     *monkit.Scope
	service ExampleService
	auth    api.Auth
}

func NewExample(log *zap.Logger, mon *monkit.Scope, service ExampleService, router *mux.Router, auth api.Auth) *ExampleHandler {
	handler := &ExampleHandler{
		log:     log,
		mon:     mon,
		service: service,
		auth:    auth,
	}

	exampleRouter := router.PathPrefix("/back-office/api/v1/example").Subrouter()
	exampleRouter.HandleFunc("/examples", handler.handleGetExamples).Methods("GET")

	return handler
}

func (h *ExampleHandler) handleGetExamples(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()
	var err error
	defer h.mon.Task()(&ctx)(&err)

	w.Header().Set("Content-Type", "application/json")

	ctx, err = h.auth.IsAuthenticated(ctx, r, true, true)
	if err != nil {
		h.auth.RemoveAuthCookie(w)
		api.ServeError(h.log, w, http.StatusUnauthorized, err)
		return
	}

	retVal, httpErr := h.service.GetExamples(ctx)
	if httpErr.Err != nil {
		api.ServeError(h.log, w, httpErr.Status, httpErr.Err)
		return
	}

	err = json.NewEncoder(w).Encode(retVal)
	if err != nil {
		h.log.Debug("failed to write json GetExamples response", zap.Error(ErrExampleAPI.Wrap(err)))
	}
}
